/// <reference path="../typings/ChangeLinr.d.ts" />
/// <reference path="../typings/StringFilr.d.ts" />
/// <reference path="../typings/MapScreenr.d.ts" />
/// <reference path="../typings/ItemsHoldr.d.ts" />
/// <reference path="../typings/BattleMovr.d.ts" />
/// <reference path="../typings/DeviceLayr.d.ts" />
/// <reference path="../typings/EightBittr.d.ts" />
/// <reference path="../typings/AudioPlayr.d.ts" />
/// <reference path="../typings/FPSAnalyzr.d.ts" />
/// <reference path="../typings/GamesRunnr.d.ts" />
/// <reference path="../typings/GroupHoldr.d.ts" />
/// <reference path="../typings/InputWritr.d.ts" />
/// <reference path="../typings/LevelEditr.d.ts" />
/// <reference path="../typings/MapsCreatr.d.ts" />
/// <reference path="../typings/MathDecidr.d.ts" />
/// <reference path="../typings/ModAttachr.d.ts" />
/// <reference path="../typings/NumberMakr.d.ts" />
/// <reference path="../typings/ObjectMakr.d.ts" />
/// <reference path="../typings/QuadsKeepr.d.ts" />
/// <reference path="../typings/AreaSpawnr.d.ts" />
/// <reference path="../typings/PixelRendr.d.ts" />
/// <reference path="../typings/PixelDrawr.d.ts" />
/// <reference path="../typings/ScenePlayr.d.ts" />
/// <reference path="../typings/StateHoldr.d.ts" />
/// <reference path="../typings/ThingHittr.d.ts" />
/// <reference path="../typings/TimeHandlr.d.ts" />
/// <reference path="../typings/TouchPassr.d.ts" />
/// <reference path="../typings/WorldSeedr.d.ts" />
/// <reference path="../typings/GameStartr.d.ts" />
/// <reference path="../typings/MenuGraphr.d.ts" />
/// <reference path="../typings/UserWrappr.d.ts" />
/// <reference path="../typings/js-beautify.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var FullScreenPokemon;
(function (FullScreenPokemon) {
    var Settings;
    (function (Settings) {
        var MapsLibrary;
        (function (MapsLibrary) {
            /* tslint:disable max-line-length */
            MapsLibrary.PalletTown = {
                "name": "Pallet Town",
                "theme": "Pallet Town",
                "locationDefault": "Player's House Door",
                "locations": {
                    "Player's House Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Player's House Floor 1 Door": {
                        "area": "Player's House",
                        "direction": 0
                    },
                    "Player's House Floor 1 Stairs": {
                        "area": "Player's House",
                        "direction": 3
                    },
                    "Player's House Floor 2 Stairs": {
                        "area": "Player's House Floor 2",
                        "direction": 3
                    },
                    "Start Game": {
                        "area": "Player's House Floor 2",
                        "xloc": 24,
                        "yloc": 40,
                        "direction": 0
                    },
                    "Rival's House Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Rival's House Floor 1 Door": {
                        "area": "Rival's House",
                        "direction": 0
                    },
                    "Oak's Lab Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Oak's Lab Floor 1 Door": {
                        "area": "Oak's Lab",
                        "direction": 0
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 152,
                        "height": 136,
                        "wildPokemon": {
                            "grass": [{
                                    "title": "PIDGEY".split(""),
                                    "levels": [2, 3, 4, 5],
                                    "rate": .55
                                }, {
                                    "title": "RATTATA".split(""),
                                    "levels": [2, 3, 4],
                                    "rate": .45
                                }],
                            "fishing": {
                                "old": [{
                                        "title": "MAGIKARP".split(""),
                                        "levels": [5],
                                        "rate": 1
                                    }],
                                "good": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }],
                                "super": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }, {
                                        "title": "TENTACOOL".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }]
                            }
                        },
                        "creation": [
                            { "thing": "AreaSpawner", "width": 152, "height": 136, "map": "Route 1", "area": "Land", "direction": 0 },
                            { "thing": "FenceWide", "width": 80 },
                            { "thing": "Grass", "x": 80, "width": 16 },
                            { "thing": "CutsceneTriggerer", "x": 80, "width": 16, "cutscene": "OakIntro", "singleUse": true, "requireOverlap": true, "id": "OakIntroGrassTriggerer" },
                            { "thing": "FenceWide", "x": 96, "width": 64 },
                            { "thing": "FenceWide", "y": 8, "height": 128 },
                            { "thing": "DirtMedium", "width": 160 },
                            { "thing": "DirtMedium", "y": 8, "width": 16, "height": 128 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 16, "y": 8, "xnum": 16, "ynum": 2, "offset": 1 },
                            { "thing": "DirtMedium", "x": 144, "y": 8, "height": 128, "width": 16 },
                            { "thing": "FenceWide", "x": 152, "y": 8, "height": 128 },
                            { "macro": "House", "x": 32, "y": 16, "stories": 2, "door": true, "entrance": "Player's House Door", "transport": { "map": "Pallet Town", "location": "Player's House Floor 1 Door" } },
                            { "macro": "House", "x": 96, "y": 16, "stories": 2, "door": true, "entrance": "Rival's House Door", "transport": { "map": "Pallet Town", "location": "Rival's House Floor 1 Door" } },
                            { "thing": "DirtLight", "x": 16, "y": 24, "width": 16, "height": 16 },
                            { "thing": "DirtLight", "x": 80, "y": 24, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 24, "xnum": 6, "ynum": 2 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 96, "y": 24, "xnum": 6, "ynum": 2 },
                            { "thing": "Sign", "x": 24, "y": 32, "dialog": "%%%%%%%PLAYER%%%%%%%'s house" },
                            { "thing": "Sign", "x": 88, "y": 32, "dialog": "%%%%%%%RIVAL%%%%%%%'s house" },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 16, "y": 40, "xnum": 16, "ynum": 2 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 16, "y": 56, "xnum": 2, "ynum": 6 },
                            { "thing": "Lady", "x": 24, "y": 56, "roaming": true, "dialog": ["I'm raising %%%%%%%POKEMON%%%%%%% too!", "When they get strong, they can protect me!"] },
                            { "thing": "DirtLight", "x": 32, "y": 56, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 64, "y": 56, "xnum": 2, "ynum": 6 },
                            { "macro": "HouseLarge", "x": 80, "y": 56, "width": 48, "height": 32, "door": true, "stories": 2, "white": { "start": 84, "end": 96 }, "id": "Oak's Lab Door", "entrance": "Oak's Lab Door", "transport": { "map": "Pallet Town", "location": "Oak's Lab Floor 1 Door" } },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 80, "y": 56, "xnum": 8, "ynum": 4 },
                            { "thing": "FenceVertical", "x": 32, "y": 64, "width": 24 },
                            { "thing": "Sign", "x": 56, "y": 64, "dialog": "PALLET TOWN \n Shades of your journey await!" },
                            { "thing": "DirtMedium", "x": 32, "y": 72, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 76, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 88, "xnum": 4, "ynum": 2 },
                            { "thing": "DirtLight", "x": 80, "y": 88, "width": 64, "height": 16 },
                            { "thing": "FenceVertical", "x": 80, "y": 96, "width": 24 },
                            { "thing": "Sign", "x": 104, "y": 96, "dialog": "Oak %%%%%%%POKEMON%%%%%%% Research Lab" },
                            { "thing": "FenceVertical", "x": 112, "y": 96, "width": 16 },
                            { "thing": "DirtMedium", "x": 16, "y": 104, "width": 16, "height": 32 },
                            { "macro": "Water", "x": 32, "y": 104, "width": 32, "height": 32, "open": [false, false, true, false] },
                            { "thing": "DirtLight", "x": 64, "y": 104, "width": 16, "height": 32 },
                            { "thing": "DirtMedium", "x": 80, "y": 104, "width": 48, "height": 16 },
                            { "thing": "Fatty", "x": 88, "y": 104, "roaming": true, "dialog": ["Technology is incredible!", "You can now store and recall items and %%%%%%%POKEMON%%%%%%% as data via PC!"] },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 80, "y": 108, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 128, "y": 104, "width": 16, "height": 32 },
                            { "thing": "DirtLight", "x": 80, "y": 120, "width": 48, "height": 16 },
                            { "thing": "FenceWide", "x": 64, "y": 128, "width": 88 },
                            { "thing": "FenceWide", "x": 8, "y": 128 },
                            { "thing": "AreaSpawner", "y": 128, "map": "Route 21", "area": "Land", "direction": 2 }
                        ]
                    },
                    "Player's House": {
                        "allowCycling": false,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "WindowBlinds", "x": 24 },
                            { "thing": "WindowBlinds", "x": 40 },
                            { "thing": "WindowBlinds", "x": 56 },
                            { "thing": "Bookshelf", "width": 16 },
                            { "thing": "TelevisionMonitor", "x": 24, "y": 8, "dialogDirections": true, "dialog": ["Oops, wrong side.", "Oops, wrong side.", ["There's a movie on TV. Four boys are walking on railroad tracks.", "I better go too."], "Oops, wrong side."] },
                            { "thing": "StairsUp", "x": 56, "y": 8, "entrance": "Player's House Floor 1 Stairs", "transport": { "map": "Pallet Town", "location": "Player's House Floor 2 Stairs" } },
                            { "thing": "Table2x3", "x": 24, "y": 32 },
                            { "thing": "Stool", "x": 16, "y": 32 },
                            { "thing": "Stool", "x": 16, "y": 40 },
                            { "thing": "Stool", "x": 40, "y": 32 },
                            { "thing": "Stool", "x": 40, "y": 40 },
                            { "thing": "FlowerVase", "x": 29, "y": 34 },
                            { "thing": "Mother", "x": 40, "y": 32, "direction": 3, "directionPreferred": 3, "dialog": ["MOM: Right. All boys leave home some day. It said so on TV.", "PROF.OAK, next door, is looking for you."] },
                            { "thing": "DoormatDotted", "x": 16, "y": 56, "width": 16, "entrance": "Player's House Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "map": "Pallet Town", "location": "Player's House Door" }, "requireDirection": 2 }
                        ]
                    },
                    "Player's House Floor 2": {
                        "allowCycling": false,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            {
                                "thing": "ComputerDesk", "dialog": [
                                    "We've watched while the stars burned out, and creation played in reverse.",
                                    "The universe freezing in half light.",
                                    "Once I thought to escape.",
                                    "To end the end a master, step out of the path of collapse.",
                                    "Escape would make us god.",
                                    "Yet I cannot help remember one enigma.",
                                    "A hybrid, elusive destroyer.",
                                    "This is the only mystery I have not solved.",
                                    "The only element unaccounted for.",
                                    "Even S'bhuth is no more, he saved his entire race, but in the end, frozen by despair, he joined the chaos he sought to evade.",
                                    "But you were dead a thousand times.",
                                    "Hopeless encounters successfully won.",
                                    "A man long dead, grafted to machines your builders did not understand.",
                                    "You follow the path, fitting into an infinite pattern.",
                                    "Yours to manipulate, to destroy and rebuild.",
                                    "Now, in the quantum moment before the closure, when all become one.",
                                    "One moment left.",
                                    "One point of space and time.",
                                    "I know who you are.",
                                    "",
                                    "You are destiny."
                                ]
                            },
                            { "thing": "Table2x2", "x": 8, "tolBottom": 0 },
                            { "thing": "StairsDown", "x": 56, "y": 8, "entrance": "Player's House Floor 2 Stairs", "transport": { "map": "Pallet Town", "location": "Player's House Floor 1 Stairs" } },
                            { "thing": "WindowBlinds", "x": 40 },
                            { "thing": "WindowBlinds", "x": 56 },
                            { "thing": "ConsoleAndController", "x": 24, "y": 32, "dialog": "%%%%%%%PLAYER%%%%%%% is playing the SNES! ...Okay! It's time to go!" },
                            { "thing": "TelevisionMonitor", "x": 24, "y": 24 },
                            { "thing": "BedSingle", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 48, "y": 48 }
                        ]
                    },
                    "Rival's House": {
                        "allowCycling": false,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "Cabinet", "width": 16 },
                            { "thing": "Painting", "x": 24, "dialog": "A TOWN MAP." },
                            { "thing": "Window", "x": 40 },
                            { "thing": "Bookshelf", "x": 56 },
                            { "thing": "Table2x3", "x": 24, "y": 24 },
                            { "thing": "Book", "x": 24, "y": 24, "id": "Book", "dialog": "It's a big map! This is useful!" },
                            { "thing": "Daisy", "x": 16, "y": 24, "direction": 1, "directionPreferred": 1, "dialog": "Hi %%%%%%%PLAYER%%%%%%%! %%%%%%%RIVAL%%%%%%% is out at Grandpa's lab." },
                            { "thing": "Stool", "x": 16, "y": 24 },
                            { "thing": "Stool", "x": 16, "y": 32 },
                            { "thing": "Stool", "x": 40, "y": 24 },
                            { "thing": "Stool", "x": 40, "y": 32 },
                            { "thing": "PottedPalmTree", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 56, "y": 48 },
                            { "thing": "DoormatDotted", "x": 16, "y": 56, "width": 16, "entrance": "Rival's House Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "map": "Pallet Town", "location": "Rival's House Door" }, "requireDirection": 2 }
                        ]
                    },
                    "Oak's Lab": {
                        "allowCycling": false,
                        "theme": "Oak Research Lab",
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorLightWithDarkBottom", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "Table2x2", "y": 4, "width": 32 },
                            { "thing": "LabComputer", "y": 8, "dialog": ["There's an e-mail message here!", "...", "Calling all %%%%%%%POKEMON%%%%%%% trainers!", "The elite trainers of %%%%%%%POKEMON%%%%%%% LEAGUE are ready to take on all comers!", "Bring your best %%%%%%%POKEMON%%%%%%% and see how you rate as a trainer!", "%%%%%%%POKEMON%%%%%%% LEAGUE HQ INDIGO PLATEAU", "PS: PROF. OAK, please visit us! ..."] },
                            { "thing": "Book", "x": 16, "y": 8, "id": "BookLeft", "dialog": "It's encyclopedia- like, but the pages are blank!" },
                            { "thing": "Book", "x": 24, "y": 8, "id": "BookRight", "dialog": "It's encyclopedia- like, but the pages are blank!" },
                            { "thing": "FloorLinedHorizontal", "y": 8, "width": 80, "height": 88 },
                            { "thing": "AsianScroll", "x": 32, "dialog": "Push START to open the MENU!" },
                            { "thing": "AsianScroll", "x": 40, "dialog": "The SAVE option is on the MENU screen." },
                            { "thing": "Oak", "x": 40, "y": 16, "id": "Oak", "hidden": true, "nocollide": true },
                            { "thing": "Rival", "x": 32, "y": 24, "id": "Rival", "dialog": "Yo %%%%%%%PLAYER%%%%%%%! Gramps isn't around!" },
                            { "thing": "Table3x1", "x": 48, "y": 24 },
                            { "thing": "Pokeball", "x": 48, "y": 24, "id": "PokeballCHARMANDER", "action": "cutscene", "cutscene": "OakIntroPokemonChoice", "pokemon": ["C", "H", "A", "R", "M", "A", "N", "D", "E", "R"], "description": "fire" },
                            { "thing": "Pokeball", "x": 56, "y": 24, "id": "PokeballSQUIRTLE", "action": "cutscene", "cutscene": "OakIntroPokemonChoice", "pokemon": ["S", "Q", "U", "I", "R", "T", "L", "E"], "description": "water" },
                            { "thing": "Pokeball", "x": 64, "y": 24, "id": "PokeballBULBASAUR", "action": "cutscene", "cutscene": "OakIntroPokemonChoice", "pokemon": ["B", "U", "L", "B", "A", "S", "A", "U", "R"], "description": "plant" },
                            { "thing": "Bookshelf", "x": 48, "width": 32 },
                            { "thing": "Bookshelf", "y": 48, "width": 32 },
                            { "thing": "Bookshelf", "x": 48, "y": 48, "width": 32 },
                            { "thing": "MenuTriggerer", "x": 32, "y": 56, "width": 32, "id": "OakBlocker", "pushDirection": 0, "pushSteps": [1], "keepAlive": true, "nocollide": true, "dialog": "OAK: Hey! Don't go away yet!" },
                            { "thing": "CutsceneTriggerer", "x": 32, "y": 48, "width": 32, "id": "RivalBlocker", "cutscene": "OakIntroRivalBattle", "routine": "Approach", "nocollide": true },
                            { "thing": "Lady", "x": 8, "y": 72, "dialog": ["PROF.OAK is the authority on %%%%%%%POKEMON%%%%%%%!", "Many %%%%%%%POKEMON%%%%%%% trainers hold him in high regard!"], "roaming": true, "roamingDirections": [0, 2] },
                            { "thing": "Scientist", "x": 16, "y": 80, "name": "Scientist One", "dialog": "I study %%%%%%%POKEMON%%%%%%% as PROF.OAK's aide.", "roaming": true, "roamingDirections": [] },
                            { "thing": "Scientist", "x": 64, "y": 80, "name": "Scientist Two", "dialog": "I study %%%%%%%POKEMON%%%%%%% as PROF.OAK's aide.", "roaming": true, "roamingDirections": [] },
                            { "thing": "Doormat", "x": 32, "y": 88, "id": "DoormatLeft" },
                            { "thing": "Doormat", "x": 40, "y": 88, "id": "DoormatRight", "entrance": "Oak's Lab Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 32, "y": 88, "width": 16, "transport": { "map": "Pallet Town", "location": "Oak's Lab Door" }, "requireDirection": 2 },
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.PewterCity = {
                "name": "Pewter City",
                "theme": "Pewter City",
                "locationDefault": "PokeCenter Outside Door",
                "locations": {
                    "Museum of Science Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Pewter Gym Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "PokeCenter Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "PokeMart Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Outsider House Front Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Info House Front Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Museum of Science Inside Door": {
                        "area": "Museum of Science"
                    },
                    "Pewter Gym Floor 1 Door": {
                        "area": "Pewter Gym",
                        "direction": 0
                    },
                    "PokeCenter Inside Door": {
                        "area": "PokeCenter",
                        "direction": 0
                    },
                    "PokeMart Inside Door": {
                        "area": "PokeMart",
                        "direction": 0
                    },
                    "Museum of Science Floor 1 Door": {
                        "area": "Museum of Science",
                        "yloc": 8,
                        "direction": 0
                    },
                    "Outsider House Floor 1 Door": {
                        "area": "Outsider House",
                        "direction": 0
                    },
                    "Info House Floor 1 Door": {
                        "area": "Info House",
                        "direction": 0
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 320,
                        "height": 288,
                        "creation": [
                            { "thing": "DirtMedium", "width": 320, "height": 16 },
                            { "thing": "FenceWide", "x": 32, "y": 8, "width": 240 },
                            { "thing": "PlantSmall", "x": 272, "y": 8, "width": 48 },
                            { "macro": "Mountain", "y": 16, "height": 216, "width": 32, "top": true, "right": true },
                            { "thing": "DirtLight", "x": 24, "y": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 16, "xnum": 2, "ynum": 4 },
                            { "thing": "DirtMedium", "x": 48, "y": 16, "width": 96, "height": 48 },
                            { "thing": "HouseLargeTopLeft", "x": 80, "y": 16, "height": 20 },
                            { "thing": "HouseLargeTopMiddle", "x": 88, "y": 16, "width": 48, "height": 16 },
                            { "thing": "HouseLargeTopRight", "x": 136, "y": 16, "height": 20 },
                            { "thing": "DirtMedium", "x": 144, "y": 16, "width": 136, "height": 32 },
                            { "macro": "Building", "x": 144, "y": 16, "width": 48, "door": true },
                            { "thing": "DirtMedium", "x": 280, "y": 8, "width": 40, "height": 72 },
                            { "thing": "PlantSmall", "x": 280, "y": 8, "width": 40, "height": 72 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 48, "y": 20, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 240, "y": 20, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 192, "y": 24, "width": 32 },
                            { "macro": "HouseLarge", "x": 80, "y": 32, "width": 64, "stories": 2, "door": true, "doorOffset": 32, "entrance": "Museum of Science Outside Door", "transport": { "map": "Pewter City", "location": "Museum of Science Floor 1 Door" } },
                            { "thing": "Tree", "x": 208, "y": 32 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 48, "y": 36, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 240, "y": 36, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 208, "y": 40 },
                            { "thing": "PlantSmall", "x": 216, "y": 40, "height": 24 },
                            { "thing": "DirtLight", "x": 32, "y": 48, "width": 16, "height": 16 },
                            { "thing": "DirtLight", "x": 144, "y": 48, "width": 16, "height": 16 },
                            { "thing": "DirtMedium", "x": 160, "y": 48, "width": 120, "height": 32 },
                            { "thing": "Ledge", "x": 32, "y": 60, "width": 24, "crumbleLeft": true, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 56, "y": 60 },
                            { "thing": "Ledge", "x": 64, "y": 60, "width": 16 },
                            { "thing": "Ledge", "x": 144, "y": 60, "width": 72, "crumbleLeft": true, "crumbleRight": true },
                            { "thing": "Ledge", "x": 224, "y": 60, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 248, "y": 60 },
                            { "thing": "Ledge", "x": 256, "y": 60, "width": 24, "crumbleRight": true },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 64, "xnum": 10, "ynum": 2 },
                            { "thing": "DirtLight", "x": 112, "y": 64, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 128, "y": 64, "xnum": 4, "ynum": 2 },
                            { "thing": "Sign", "x": 120, "y": 72, "dialog": "PEWTER MUSEUM OF SCIENCE" },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 80, "xnum": 2, "ynum": 22 },
                            { "thing": "DirtMedium", "x": 48, "y": 80, "width": 96, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 80, "xnum": 16, "ynum": 2 },
                            { "macro": "Mountain", "x": 272, "y": 80, "width": 48, "height": 48, "top": true, "bottom": true, "left": true },
                            { "thing": "DirtWhite", "x": 272, "y": 80 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 64, "y": 84, "xnum": 20, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 96, "xnum": 14, "ynum": 2 },
                            { "thing": "DirtLight", "x": 160, "y": 96, "width": 96, "height": 16 },
                            { "macro": "House", "x": 224, "y": 96, "door": true },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 256, "y": 96, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 48, "y": 112, "width": 32, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 80, "y": 112, "xnum": 24, "ynum": 2 },
                            { "macro": "Gym", "x": 96, "y": 112, "door": true, "doorOffset": 40, "transport": { "map": "Pewter City", "location": "Pewter Gym Floor 1 Door" }, "entrance": "Pewter Gym Outside Door" },
                            { "macro": "Building", "x": 168, "y": 112, "door": true, "label": "Mart", "transport": { "map": "Pewter City", "location": "PokeMart Inside Door" }, "entrance": "PokeMart Outside Door" },
                            { "thing": "Lass", "x": 64, "y": 120, "direction": 0, "roaming": true, "roamingDirections": [], "dialog": ["It's rumored that CLEFAIRYs came from the moon!", "They appeared after MOON STONE fell on MT. MOON."] },
                            { "thing": "DirtLight", "x": 80, "y": 128, "width": 64, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 128, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 160, "y": 128, "width": 96, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 256, "y": 128, "xnum": 8, "ynum": 2 },
                            { "thing": "Sign", "x": 88, "y": 136 },
                            {
                                "thing": "CoolTrainerM", "x": 208, "y": 136, "name": "MuseumLover", "roaming": true, "roamingDirections": [], "dialog": "Did you check out the museum?",
                                "dialogOptions": {
                                    "type": "Yes/No",
                                    "options": {
                                        "Yes": "Weren't those fossils from MT. Moon amazing?",
                                        "No": {
                                            "words": "Really? You absolutely have to go!",
                                            "cutscene": "WalkToMuseum"
                                        }
                                    }
                                }
                            },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 144, "xnum": 26, "ynum": 2 },
                            { "thing": "FenceVertical", "x": 144, "y": 144, "width": 8, "height": 32 },
                            { "thing": "DirtLight", "x": 256, "y": 144, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 272, "y": 144, "xnum": 6, "ynum": 2 },
                            { "thing": "Sign", "x": 264, "y": 152, "dialog": ["NOTICE!", "Thieves have been stealing %%%%%%%POKEMON%%%%%%% fossils at MT. MOON! Please call PEWTER POLICE with any info!"] },
                            { "thing": "DirtMedium", "x": 48, "y": 160, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 80, "y": 160, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 96, "y": 160, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 160, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 160, "y": 160, "width": 96, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 256, "y": 160, "xnum": 2, "ynum": 12 },
                            { "thing": "DirtWhite", "x": 272, "y": 160 },
                            { "macro": "Mountain", "x": 272, "y": 160, "width": 48, "height": 48, "top": true, "bottom": true, "left": true },
                            { "thing": "PlantSmall", "x": 32, "y": 168, "width": 112 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 176, "xnum": 14, "ynum": 2 },
                            { "macro": "Building", "x": 96, "y": 176, "door": true, "label": "Poke", "entrance": "PokeCenter Outside Door", "transport": { "map": "Pewter City", "location": "PokeCenter Inside Door" } },
                            { "thing": "DirtLight", "x": 160, "y": 176, "width": 96, "height": 16 },
                            { "thing": "FenceVertical", "x": 176, "y": 184, "width": 24 },
                            { "thing": "Sign", "x": 200, "y": 184, "dialog": "PEWTER CITY \n A Stone Gray \n City" },
                            {
                                "thing": "CoolTrainerM", "x": 200, "y": 200, "name": "Gardener", "direction": 3, "roaming": true, "roamingDirections": [1, 3], "dialog": "Psssst! Do you know what I'm doing?",
                                "dialogOptions": {
                                    "type": "Yes/No",
                                    "options": {
                                        "Yes": "That's right! It's hard work!",
                                        "No": "I'm spraying REPEL to keep %%%%%%%POKEMON%%%%%%% out of my garden!"
                                    }
                                }
                            },
                            { "thing": "FenceVertical", "x": 208, "y": 184, "width": 32 },
                            { "thing": "DirtMedium", "x": 48, "y": 192, "width": 96, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 192, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 160, "y": 192, "width": 96, "height": 48 },
                            { "thing": "PlantSmall", "x": 168, "y": 192, "height": 48 },
                            { "thing": "PlantSmall", "x": 240, "y": 192, "height": 48 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 128, "y": 196, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 176, "y": 196, "xnum": 16, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "CoolTrainerM", "x": 136, "y": 200, "name": "SeriousTrainer", "direction": 0, "roaming": true, "roamingDirections": [], "dialog": ["There aren't many serious %%%%%%%POKEMON%%%%%%% trainers here!", "They're all like BUG CATCHERs, but PEWTER GYM's BROCK is totally into it!"] },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 208, "xnum": 14, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 272, "y": 208, "width": 48, "height": 48 },
                            { "thing": "FenceWide", "x": 280, "y": 208, "height": 48 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 176, "y": 212, "xnum": 16, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtMedium", "x": 48, "y": 224, "width": 96, "height": 16 },
                            { "macro": "House", "x": 48, "y": 224, "door": true, "entrance": "Info House Front Door", "transport": { "map": "Pewter City", "location": "Info House Floor 1 Door" } },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 80, "y": 228, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 144, "y": 224, "width": 16, "height": 16 },
                            { "thing": "Sign", "x": 152, "y": 232, "dialog": ["TRAINER TIPS", "Any %%%%%%%POKEMON%%%%%%% that takes part in battle, however short, earns EXP!"] },
                            { "macro": "Mountain", "y": 232, "width": 16, "height": 32, "right": true, "bottom": true },
                            { "macro": "Mountain", "x": 16, "y": 232, "width": 16, "bottom": true, "right": true },
                            { "thing": "Ledge", "x": 176, "y": 236, "width": 24 },
                            { "thing": "LedgeOpening", "x": 200, "y": 236 },
                            { "thing": "Ledge", "x": 208, "y": 236, "width": 32 },
                            { "thing": "DirtWhite", "x": 16, "y": 240, "width": 16, "height": 16 },
                            { "thing": "FenceWide", "x": 16, "y": 240, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 240, "xnum": 26, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 16, "y": 256, "width": 128 },
                            { "thing": "FenceWide", "x": 16, "y": 256, "width": 80 },
                            { "thing": "PlantSmall", "x": 96, "y": 256, "width": 48, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 256, "xnum": 2, "ynum": 4 },
                            { "thing": "DirtMedium", "x": 160, "y": 256, "width": 160, "height": 32 },
                            { "thing": "PlantSmall", "x": 160, "y": 256, "width": 48, "height": 32 },
                            { "thing": "FenceWide", "x": 208, "y": 256, "width": 80 },
                            { "thing": "DirtMedium", "y": 264, "width": 144, "height": 24 },
                            { "thing": "ThemePlayer", "x": 144, "y": 280, "width": 16, "height": 200, "theme": "Pewter City" },
                            { "thing": "AreaSpawner", "y": 288, "width": 320, "map": "Route 2", "area": "Land", "direction": 1, "offsetX": 48 }
                        ]
                    },
                    "Museum of Science": {
                        "allowCycling": false,
                        "width": 8,
                        "height": 16,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "FloorCheckered", "width": 8, "height": 16 },
                            { "thing": "Scientist", "dialog": "Apologies, the Pewter Museum of Science is closed in this release of Full Screen %%%%%%%POKEMON%%%%%%%. Try again later!", "transport": { "map": "Pewter City", "location": "Museum of Science Outside Door" } }
                        ]
                    },
                    "Pewter Gym": {
                        "allowCycling": false,
                        "width": 80,
                        "height": 112,
                        "theme": "Gym",
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBandsInverse", "width": 80, "height": 112 },
                            { "thing": "Rock", "width": 80 },
                            { "thing": "Rock", "y": 8, "height": 72 },
                            {
                                "thing": "CoolTrainerM", "x": 32, "y": 8, "name": "Brock", "trainer": true, "battleName": "Brock", "battleSprite": "Brock", "dialog": ["I'm BROCK! \n I'm PEWTER's GYM LEADER!", "I believe in rock hard defense and determination!", "That's why my %%%%%%%POKEMON%%%%%%% are all the rock-type!", "Do you still want to challenge me? Fine then! Show me your best!"],
                                "reward": 1386,
                                "badge": "Brock",
                                "textVictory": ["BROCK: I took you for granted.", "As proof of your victory, here's the BOULDERBADGE!", "%%%%%%%PLAYER%%%%%%% received the BOULDERBADGE!", "That's an official %%%%%%%POKEMON%%%%%%% LEAGUE BADGE!", "Its bearer's %%%%%%%POKEMON%%%%%%% become more powerful!", "The technique FLASH can now be used any time!"],
                                "giftAfterBattle": "TM34",
                                "textAfterBattle": ["Wait! Take this with you!", "%%%%%%%PLAYER%%%%%%% received TM34!", "A TM contains a technique that can be taught to %%%%%%%POKEMON%%%%%%%!", "A TM is good only once! So when you use one to teach a new technique, pick the %%%%%%%POKEMON%%%%%%% carefully!", "TM34 contains BIDE! Your %%%%%%%POKEMON%%%%%%% will absorb damage in battle then pay it back double!"],
                                "dialogNext": ["There are all kinds of trainers in the world!", "You appear to be very gifted as a %%%%%%%POKEMON%%%%%%% trainer!", "Go to the GYM in CERULEAN and test your abilities!"],
                                "actors": [{
                                        "title": "Geodude",
                                        "level": 12
                                    }, {
                                        "title": "Onix",
                                        "level": 14
                                    }]
                            },
                            { "thing": "Rock", "x": 72, "y": 8, "height": 72 },
                            { "thing": "Rock", "x": 8, "y": 24, "width": 24 },
                            { "thing": "Rock", "x": 48, "y": 24, "width": 24 },
                            { "thing": "Rock", "x": 16, "y": 40 },
                            { "thing": "Rock", "x": 40, "y": 40, "width": 24 },
                            {
                                "thing": "CoolTrainerM", "x": 24, "y": 48, "direction": 1, "trainer": true, "sight": 4, "battleName": "Jr. Trainer", "battleSprite": "JrTrainer", "dialog": ["Stop right there, kid!", "You're still light years from facing BROCK!"],
                                "reward": 220,
                                "textDefeat": ["Darn!", "Light years isn't time! It measures distance!"],
                                "dialogNext": "You're pretty hot, but not as hot as BROCK!",
                                "actors": [{
                                        "title": "Diglett",
                                        "level": 11
                                    }, {
                                        "title": "Sandshrew",
                                        "level": 11
                                    }]
                            },
                            { "thing": "Rock", "x": 16, "y": 56 },
                            { "thing": "Rock", "x": 40, "y": 56, "width": 24 },
                            { "thing": "Rock", "x": 8, "y": 72, "width": 16 },
                            { "thing": "GymStatue", "x": 24, "y": 72, "gym": "Pewter City", "leader": "Brock" },
                            { "thing": "GymStatue", "x": 48, "y": 72, "gym": "Pewter City", "leader": "Brock" },
                            { "thing": "Rock", "x": 56, "y": 72, "width": 16 },
                            {
                                "thing": "GymGuide", "x": 64, "y": 80, "dialog": ["Hiya! I can tell you have what it takes to become a %%%%%%%POKEMON%%%%%%% champ!", "I'm no trainer, but I can tell you how to win!", "Let me take you to the top!"],
                                "dialogOptions": {
                                    "type": "Yes/No",
                                    "options": {
                                        "Yes": ["All right! Let's get happening!", "The 1st %%%%%%%POKEMON%%%%%%% out in a match is at the top of the %%%%%%%POKEMON%%%%%%% LIST!", "By changing the order of %%%%%%%POKEMON%%%%%%%, matches could be made easier!"],
                                        "No": ["It's a free service! Let's get happening!", "The 1st %%%%%%%POKEMON%%%%%%% out in a match is at the top of the %%%%%%%POKEMON%%%%%%% LIST!", "By changing the order of %%%%%%%POKEMON%%%%%%%, matches could be made easier!"]
                                    }
                                }
                            },
                            { "thing": "Doormat", "x": 32, "y": 104, "width": 16, "entrance": "Pewter Gym Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 32, "y": 104, "width": 16, "transport": { "map": "Pewter City", "location": "Pewter Gym Outside Door" }, "requireDirection": 2 }
                        ]
                    },
                    "PokeCenter": {
                        "allowCycling": false,
                        "width": 112,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "macro": "PokeCenter", "entrance": "PokeCenter Inside Door", "transport": "PokeCenter Outside Door", "coolTrainerDialog": ["Yawn!", "When JIGGLYPUFF sings, %%%%%%%POKEMON%%%%%%% get drowsy...", "...Me too... \n Snore..."] },
                        ]
                    },
                    "PokeMart": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "macro": "PokeMart", "entrance": "PokeMart Inside Door", "transport": "PokeMart Outside Door", "responderId": "CashierDetector", "responderDialog": "Okay! Say hi to PROF. Oak for me!", "items": [{ "item": "Pokeball", "cost": 200 }, { "item": "Antidote", "cost": 100 }, { "item": "Parlyz Heal", "cost": 200 }, { "item": "Burn Heal", "cost": 250 }] },
                            { "thing": "Gentleman", "x": 88, "y": 56, "direction": 3, "directionPreferred": 3, "dialog": ["What!?", "TEAM ROCKET is at MT. MOON? Huh? I'm on the phone!", "Scram!"] }
                        ]
                    },
                    "Outsider House": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "Cabinet", "width": 16 },
                            { "thing": "Painting", "x": 24, "dialog": "A TOWN MAP." },
                            { "thing": "Window", "x": 40 },
                            { "thing": "Bookshelf", "x": 56 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "ChubbyGuy", "x": 8, "y": 16, "direction": 1, "roaming": true, "roamingDirections": [], "dialog": ["Our %%%%%%%POKEMON%%%%%%%'s an outsider, so it's hard to handle.", "An outsider is a %%%%%%%POKEMON%%%%%%% that you get in a trade.", "It grows fast, but it may ignore an unskilled trainer in battle!", "If only we had some BADGEs..."] },
                            { "thing": "Table2x3", "x": 24, "y": 24 },
                            { "thing": "Stool", "x": 16, "y": 24 },
                            { "thing": "Stool", "x": 40, "y": 24 },
                            { "thing": "Stool", "x": 16, "y": 32 },
                            { "thing": "Stool", "x": 40, "y": 32 },
                            { "thing": "Toddler", "x": 24, "y": 40, "direction": 1, "directionPreferred": 1, "dialog": "NIDORAN sit!" },
                            { "thing": "LandPokemon", "x": 32, "y": 40, "direction": 3, "directionPreferred": 3, "dialog": "NIDORAN: Bowbow! x" },
                            { "thing": "PottedPalmTree", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 56, "y": 48 },
                            { "thing": "DoormatDashed", "x": 16, "y": 56, "width": 16, "entrance": "Outsider House Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "location": "Outsider House Front Door" }, "requireDirection": 2 }
                        ]
                    },
                    "Info House": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "Cabinet", "width": 16 },
                            { "thing": "Painting", "x": 24, "dialog": "A TOWN MAP." },
                            { "thing": "Window", "x": 40 },
                            { "thing": "Bookshelf", "x": 56 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "Table2x3", "x": 24, "y": 24 },
                            { "thing": "Elder", "x": 16, "y": 24, "direction": 1, "directionPreferred": 1, "dialog": ["%%%%%%%POKEMON%%%%%%% learn new techniques as they grow!", "But, some moves must be taught by the trainer!"] },
                            { "thing": "Stool", "x": 16, "y": 24 },
                            { "thing": "Stool", "x": 40, "y": 24 },
                            { "thing": "Stool", "x": 16, "y": 32 },
                            { "thing": "Stool", "x": 40, "y": 32 },
                            { "thing": "BugCatcher", "x": 32, "y": 40, "direction": 2, "roaming": true, "roamingDirections": [], "dialog": ["%%%%%%%POKEMON%%%%%%% become easier to catch when they are hurt or asleep!", "But, it's not a sure thing!"] },
                            { "thing": "PottedPalmTree", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 56, "y": 48 },
                            { "thing": "DoormatDashed", "x": 16, "y": 56, "width": 16, "entrance": "Info House Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "location": "Info House Front Door" }, "requireDirection": 2 }
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.Route1 = {
                "name": "Route 1",
                "theme": "Viridian City from Pallet Town",
                "locationDefault": "Top Path",
                "locations": {
                    "Top Path": {
                        "area": "Land",
                        "xloc": 80
                    },
                    "Bottom Path": {
                        "area": "Land",
                        "xloc": 80,
                        "yloc": 288
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 160,
                        "height": 296,
                        "wildPokemon": {
                            "grass": [{
                                    "title": "PIDGEY".split(""),
                                    "levels": [2, 3, 4, 5],
                                    "rate": .55
                                }, {
                                    "title": "RATTATA".split(""),
                                    "levels": [2, 3, 4],
                                    "rate": .45
                                }]
                        },
                        "creation": [
                            { "thing": "AreaSpawner", "width": 160, "map": "Viridian City", "area": "Land", "direction": 0, "offsetX": -80 },
                            { "thing": "ThemePlayer", "x": 80, "width": 16, "theme": "Viridian City from Pallet Town" },
                            { "thing": "DirtMedium", "width": 32, "height": 296 },
                            { "thing": "FenceWide", "x": 24, "height": 48 },
                            { "thing": "DirtMedium", "x": 24, "width": 56, "height": 80 },
                            { "thing": "FenceWide", "x": 72 },
                            { "thing": "DirtLight", "x": 80, "width": 16, "height": 32 },
                            { "thing": "FenceWide", "x": 96 },
                            { "thing": "DirtMedium", "x": 96, "width": 48, "height": 32 },
                            { "thing": "DirtMedium", "x": 144, "width": 16, "height": 296 },
                            { "thing": "FenceWide", "x": 144, "height": 48 },
                            { "thing": "FenceWide", "x": 32, "y": 8, "width": 48 },
                            { "thing": "FenceWide", "x": 96, "y": 8, "width": 48 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 128, "y": 20, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 80, "y": 32, "width": 64, "height": 16 },
                            { "thing": "PlantSmall", "x": 72, "y": 32, "height": 48 },
                            { "thing": "Ledge", "x": 32, "y": 44, "width": 40, "crumbleRight": true },
                            { "thing": "Ledge", "x": 80, "y": 44, "width": 32, "jagged": true },
                            { "thing": "PlantSmall", "x": 24, "y": 48, "height": 64 },
                            { "thing": "DirtMedium", "x": 80, "y": 48, "width": 64, "height": 32 },
                            { "thing": "Grass", "x": 80, "y": 48, "width": 64, "height": 32 },
                            { "thing": "PlantSmall", "x": 144, "y": 48, "height": 64 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 52, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Ledge", "x": 32, "y": 76, "width": 40, "crumbleRight": true },
                            { "thing": "DirtMedium", "x": 32, "y": 80, "width": 64, "height": 48 },
                            { "thing": "DirtLight", "x": 96, "y": 80, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 48, "y": 84, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 96, "y": 96, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 112, "y": 96, "width": 32, "height": 48 },
                            { "thing": "Grass", "x": 112, "y": 96, "width": 32, "height": 32 },
                            { "thing": "PlantSmall", "x": 32, "y": 104, "width": 16 },
                            { "thing": "PlantSmall", "x": 80, "y": 104, "width": 32 },
                            { "thing": "BugCatcher", "x": 120, "y": 104, "direction": 3, "roaming": true, "roamingDirections": [1, 3], "name": "LedgeAdvertiser", "dialog": ["See those ledges along the road?", "It's a bit scary, but you can jump from them.", "You can get back to Pallet Town quicker that way."] },
                            { "thing": "Ledge", "x": 48, "y": 108, "width": 32 },
                            { "thing": "FenceWide", "x": 24, "y": 112, "height": 112 },
                            { "thing": "FenceWide", "x": 144, "y": 112, "height": 112 },
                            { "thing": "DirtLight", "x": 96, "y": 112, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 64, "y": 116, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtMedium", "x": 32, "y": 128, "width": 16, "height": 48 },
                            { "thing": "DirtLight", "x": 48, "y": 128, "width": 64, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 112, "y": 132, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 48, "y": 144, "width": 16, "height": 16 },
                            { "thing": "DirtMedium", "x": 64, "y": 144, "width": 80, "height": 16 },
                            { "thing": "Ledge", "x": 32, "y": 156, "width": 8 },
                            { "thing": "LedgeOpening", "x": 40, "y": 156, "width": 8 },
                            { "thing": "Ledge", "x": 48, "y": 156, "width": 24, "crumbleLeft": true, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 72, "y": 156, "width": 8 },
                            { "thing": "Ledge", "x": 80, "y": 156, "width": 64 },
                            { "thing": "DirtLight", "x": 48, "y": 160, "width": 96, "height": 16 },
                            { "thing": "DirtMedium", "x": 32, "y": 176, "width": 96, "height": 32 },
                            { "thing": "Grass", "x": 96, "y": 176, "width": 32, "height": 32 },
                            { "thing": "DirtLight", "x": 128, "y": 176, "width": 16, "height": 32 },
                            { "thing": "PlantSmall", "x": 32, "y": 184, "width": 64 },
                            { "thing": "BugCatcher", "x": 40, "y": 192, "direction": 2, "roaming": true, "roamingDirections": [0, 2], "name": "ShopAdvertiser", "dialog": ["Hi! I work at a %%%%%%%POKEMON%%%%%%% MART.", "It's a convenient shop, so please visit us in VIRIDIAN CITY.", "I know, I'll give you a sample! Here you go!"], "dialogNext": "We also carry %%%%%%%POKE%%%%%%% BALLs for catching %%%%%%%POKEMON%%%%%%%!", "gift": "Potion" },
                            { "thing": "Ledge", "x": 128, "y": 188, "width": 16, "jagged": true },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 64, "y": 196, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 32, "y": 208, "width": 112, "height": 16 },
                            { "thing": "Sign", "x": 72, "y": 216, "dialog": "ROUTE 1 \n PALLET TOWN - VIRIDIAN CITY" },
                            { "thing": "Ledge", "x": 32, "y": 220, "width": 16, "jagged": true },
                            { "thing": "Ledge", "x": 80, "y": 220, "width": 64, "jagged": true },
                            { "thing": "PlantSmall", "x": 24, "y": 224, "height": 64 },
                            { "thing": "DirtMedium", "x": 32, "y": 224, "width": 48, "height": 72 },
                            { "thing": "Grass", "x": 48, "y": 224, "width": 32, "height": 16 },
                            { "thing": "DirtLight", "x": 80, "y": 224, "width": 16, "height": 40 },
                            { "thing": "DirtMedium", "x": 96, "y": 224, "width": 48, "height": 72 },
                            { "thing": "Grass", "x": 112, "y": 224, "width": 32, "height": 16 },
                            { "thing": "PlantSmall", "x": 144, "y": 224, "height": 64 },
                            { "thing": "Grass", "x": 32, "y": 240, "width": 32, "height": 16 },
                            { "thing": "Grass", "x": 96, "y": 240, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 64, "y": 244, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 128, "y": 244, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "FenceWide", "x": 32, "y": 256, "width": 48 },
                            { "thing": "DirtMedium", "x": 80, "y": 256, "width": 16, "height": 40 },
                            { "thing": "Grass", "x": 80, "y": 256, "width": 16, "height": 40 },
                            { "thing": "FenceWide", "x": 96, "y": 256, "width": 48 },
                            { "thing": "FenceWide", "x": 72, "y": 264, "height": 32 },
                            { "thing": "FenceWide", "x": 96, "y": 264, "height": 32 },
                            { "thing": "ThemePlayer", "x": 80, "y": 280, "width": 16, "theme": "Viridian City from Pallet Town" },
                            { "thing": "FenceWide", "x": 24, "y": 288 },
                            { "thing": "ThemePlayer", "x": 80, "y": 288, "width": 16, "theme": "Pallet Town" },
                            { "thing": "FenceWide", "x": 144, "y": 288 },
                            { "thing": "AreaSpawner", "y": 288, "width": 160, "map": "Pallet Town", "area": "Land", "direction": 2 }
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.Route2 = {
                "name": "Route 2",
                "theme": "Viridian City from Pallet Town",
                "locationDefault": "Viridian Forest Top",
                "locations": {
                    "Viridian Forest Top": {
                        "area": "Land",
                        "direction": 0
                    },
                    "Viridian Forest Bottom": {
                        "area": "Land",
                        "push": true
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 224,
                        "height": 592,
                        "creation": [
                            { "thing": "ThemePlayer", "x": 96, "width": 16, "height": 400, "theme": "Viridian City from Pallet Town" },
                            { "thing": "AreaSpawner", "width": 224, "map": "Pewter City", "area": "Land", "direction": 1, "offsetX": -48 },
                            { "thing": "DirtMedium", "width": 96, "height": 16 },
                            { "thing": "PlantSmall", "width": 96, "height": 16 },
                            { "thing": "DirtMedium", "x": 112, "width": 120, "height": 16 },
                            { "thing": "PlantSmall", "x": 112, "width": 120, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 96, "xnum": 2, "ynum": 10 },
                            { "thing": "DirtMedium", "y": 16, "width": 32, "height": 576 },
                            { "thing": "PlantSmall", "y": 16, "width": 32, "height": 576 },
                            { "thing": "DirtMedium", "x": 192, "y": 16, "width": 40, "height": 576 },
                            { "thing": "PlantSmall", "x": 192, "y": 16, "width": 40, "height": 576 },
                            { "thing": "DirtMedium", "x": 32, "y": 16, "width": 64, "height": 64 },
                            { "thing": "PlantSmall", "x": 32, "y": 16, "width": 64, "height": 16 },
                            { "thing": "DirtMedium", "x": 112, "y": 16, "width": 80, "height": 16 },
                            { "thing": "PlantSmall", "x": 112, "y": 16, "width": 80, "height": 16 },
                            { "thing": "Grass", "x": 32, "y": 32, "width": 64, "height": 48 },
                            { "thing": "DirtWhite", "x": 112, "y": 32, "width": 16, "height": 32 },
                            { "thing": "FenceVertical", "x": 112, "y": 32, "width": 8, "height": 32 },
                            { "thing": "DirtLight", "x": 128, "y": 32, "width": 64, "height": 32 },
                            { "thing": "DirtWhite", "x": 112, "y": 64 },
                            { "macro": "Mountain", "x": 112, "y": 64, "width": 64, "height": 32, "top": true, "right": true, "bottom": true, "left": true, "opening": true },
                            { "thing": "DirtLight", "x": 168, "y": 64, "width": 24, "height": 32 },
                            { "thing": "DirtLight", "x": 32, "y": 80, "width": 80, "height": 16 },
                            { "thing": "DirtMedium", "x": 32, "y": 96, "width": 80, "height": 48 },
                            { "thing": "PlantSmall", "x": 32, "y": 96, "width": 24 },
                            { "thing": "PlantSmall", "x": 64, "y": 96, "height": 16 },
                            { "thing": "Tree", "x": 72, "y": 96 },
                            { "thing": "PlantSmall", "x": 80, "y": 96, "width": 32 },
                            { "thing": "DirtLight", "x": 112, "y": 96, "width": 32, "height": 32 },
                            { "thing": "DirtMedium", "x": 144, "y": 96, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 100, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 48, "y": 104 },
                            { "thing": "Sign", "x": 120, "y": 104 },
                            { "thing": "HiddenTransporter", "x": 56, "y": 104, "directionRequired": 2, "entrance": "Viridian Forest Top", "transport": { "map": "Viridian Forest", "location": "Gate North Door North" } },
                            { "macro": "Building", "x": 48, "y": 112, "door": true },
                            { "thing": "DirtLight", "x": 144, "y": 112, "width": 48, "height": 16 },
                            { "thing": "DirtMedium", "x": 112, "y": 128, "width": 64, "height": 16 },
                            { "thing": "DirtLight", "x": 176, "y": 128, "width": 16, "height": 64 },
                            { "thing": "FenceWide", "x": 32, "y": 136, "width": 16 },
                            { "thing": "FenceWide", "x": 80, "y": 136, "width": 64 },
                            { "thing": "BrickRoad", "x": 32, "y": 144, "width": 64, "height": 16 },
                            { "thing": "DirtMedium", "x": 96, "y": 144, "width": 48, "height": 48 },
                            { "thing": "PlantSmall", "x": 96, "y": 144, "width": 48, "height": 48 },
                            { "thing": "DirtMedium", "x": 144, "y": 144, "width": 32, "height": 16 },
                            { "thing": "DirtLight", "x": 32, "y": 160, "width": 64, "height": 16 },
                            { "thing": "DirtLight", "x": 144, "y": 160, "width": 32, "height": 32 },
                            { "macro": "House", "x": 144, "y": 160, "door": true },
                            { "thing": "Ledge", "x": 32, "y": 172, "width": 64, "jagged": true },
                            { "thing": "DirtMedium", "x": 32, "y": 176, "width": 16, "height": 16 },
                            { "thing": "Grass", "x": 32, "y": 176, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 176, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 64, "y": 176, "width": 32, "height": 16 },
                            { "thing": "Grass", "x": 64, "y": 176, "width": 32, "height": 16 },
                            { "thing": "DirtMedium", "x": 32, "y": 192, "width": 160, "height": 176 },
                            { "thing": "PlantSmall", "x": 32, "y": 192, "width": 112, "height": 128 },
                            { "thing": "PlantSmall", "x": 144, "y": 192, "height": 16 },
                            { "thing": "Tree", "x": 152, "y": 192 },
                            { "thing": "PlantSmall", "x": 160, "y": 192, "width": 32 },
                            { "thing": "Ledge", "x": 144, "y": 236, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 168, "y": 236 },
                            { "thing": "Ledge", "x": 176, "y": 236, "width": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 176, "y": 244, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Ledge", "x": 144, "y": 268, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 168, "y": 268 },
                            { "thing": "Ledge", "x": 176, "y": 268, "width": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 176, "y": 276, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "FenceWide", "x": 144, "y": 296, "width": 16 },
                            { "thing": "FenceWide", "x": 176, "y": 296, "width": 16 },
                            { "macro": "Building", "x": 144, "y": 304, "width": 48, "door": true },
                            { "thing": "PlantSmall", "x": 32, "y": 320, "width": 24 },
                            { "thing": "PlantSmall", "x": 64, "y": 320 },
                            { "thing": "Tree", "x": 72, "y": 320 },
                            { "thing": "PlantSmall", "x": 80, "y": 320, "width": 64 },
                            { "thing": "PlantSmall", "x": 48, "y": 328 },
                            { "thing": "PlantSmall", "x": 64, "y": 328 },
                            { "thing": "PlantSmall", "x": 112, "y": 328, "width": 32, "height": 40 },
                            { "macro": "Building", "x": 48, "y": 336, "width": 32, "height": 32, "door": true, "entrance": "Viridian Forest Bottom", "transport": { "map": "Viridian Forest", "location": "Gate South Door South" } },
                            { "thing": "FenceWide", "x": 32, "y": 360, "width": 16 },
                            { "thing": "FenceWide", "x": 80, "y": 360, "width": 32 },
                            { "thing": "Ledge", "x": 144, "y": 364, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 152, "y": 364 },
                            { "thing": "Ledge", "x": 160, "y": 364, "width": 32 },
                            { "thing": "BrickRoad", "x": 32, "y": 368, "width": 80, "height": 16 },
                            { "thing": "DirtMedium", "x": 112, "y": 368, "width": 80, "height": 200 },
                            { "thing": "PlantSmall", "x": 120, "y": 368, "height": 64 },
                            { "thing": "Pokeball", "x": 136, "y": 376 },
                            { "thing": "DirtLight", "x": 32, "y": 384, "width": 64, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 96, "y": 384, "xnum": 2, "ynum": 2 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 160, "y": 388, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Ledge", "x": 32, "y": 396, "width": 64, "jagged": true },
                            { "thing": "DirtMedium", "x": 32, "y": 400, "width": 16, "height": 192 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 400, "xnum": 2, "ynum": 12 },
                            { "thing": "DirtMedium", "x": 64, "y": 400, "width": 48, "height": 80 },
                            { "thing": "Grass", "x": 64, "y": 400, "width": 48, "height": 32 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 404, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Ledge", "x": 128, "y": 412, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 152, "y": 412 },
                            { "thing": "Ledge", "x": 160, "y": 412, "width": 32 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 420, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Tree", "x": 128, "y": 432 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 436, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 80, "y": 440, "width": 64 },
                            { "thing": "PlantSmall", "x": 72, "y": 448, "width": 64, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 452, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Pokeball", "x": 136, "y": 448 },
                            { "thing": "PlantSmall", "x": 80, "y": 464, "width": 56 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 468, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 468, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 128, "y": 472, "height": 24 },
                            { "thing": "DirtLight", "x": 64, "y": 480, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 32, "y": 484, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 484, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "PlantSmall", "x": 32, "y": 496, "width": 16, "height": 96 },
                            { "thing": "DirtMedium", "x": 48, "y": 496, "width": 48, "height": 32 },
                            { "thing": "DirtLight", "x": 96, "y": 496, "width": 16, "height": 64 },
                            { "thing": "Tree", "x": 128, "y": 496 },
                            { "thing": "PlantSmall", "x": 128, "y": 504, "width": 16 },
                            { "thing": "Ledge", "x": 48, "y": 508, "width": 40, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 88, "y": 508 },
                            { "thing": "Ledge", "x": 96, "y": 508, "width": 32, "crumbleLeft": true },
                            { "thing": "Ledge", "x": 144, "y": 508, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 152, "y": 508 },
                            { "thing": "Ledge", "x": 160, "y": 508, "width": 32 },
                            { "thing": "PlantSmall", "x": 128, "y": 512, "height": 48 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 48, "y": 516, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 48, "y": 528, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 532, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Sign", "x": 72, "y": 536 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 544, "xnum": 2, "ynum": 4 },
                            { "thing": "DirtMedium", "x": 64, "y": 544, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 64, "y": 548, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 548, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 64, "y": 560, "xnum": 6, "ynum": 2 },
                            { "thing": "Tree", "x": 128, "y": 560 },
                            { "thing": "DirtMedium", "x": 112, "y": 568, "width": 80, "height": 24 },
                            { "thing": "PlantSmall", "x": 112, "y": 568, "width": 80, "height": 24 },
                            { "thing": "DirtMedium", "x": 48, "y": 576, "width": 32, "height": 16 },
                            { "thing": "PlantSmall", "x": 48, "y": 576, "width": 32, "height": 16 },
                            { "thing": "DirtWhite", "x": 80, "y": 576, "width": 16, "height": 16 },
                            { "thing": "FenceVertical", "x": 80, "y": 576, "width": 8, "height": 16 },
                            { "thing": "ThemePlayer", "x": 88, "y": 576, "width": 24, "theme": "Viridian City from Pallet Town" },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 96, "y": 576, "xnum": 2, "ynum": 2 },
                            { "thing": "AreaSpawner", "y": 584, "width": 608, "map": "Viridian City", "area": "Land", "direction": 1, "offsetX": -48 }
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.Route21 = {
                "name": "Route 21",
                "locationDefault": "Temp",
                "locations": {
                    "Temp": {
                        "area": "Land"
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 160,
                        "height": 720,
                        "wildPokemon": {
                            "fishing": {
                                "old": [{
                                        "title": "MAGIKARP".split(""),
                                        "levels": [5],
                                        "rate": 1
                                    }],
                                "good": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }],
                                "super": [{
                                        "title": "SHELLDER".split(""),
                                        "levels": [15],
                                        "rate": .25
                                    }, {
                                        "title": "HORSEA".split(""),
                                        "levels": [15],
                                        "rate": .25
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [15],
                                        "rate": .25
                                    }, {
                                        "title": "STARYU".split(""),
                                        "levels": [15],
                                        "rate": .25
                                    }]
                            }
                        },
                        "creation": [
                            { "thing": "AreaSpawner", "map": "Pallet Town", "area": "Land", "direction": 0 },
                            { "thing": "DirtMedium", "width": 32, "height": 112 },
                            { "thing": "FenceWide", "width": 32 },
                            { "macro": "Water", "x": 32, "width": 32, "height": 80, "open": [true, false, true, false] },
                            { "thing": "DirtMedium", "x": 64, "width": 96, "height": 80 },
                            { "thing": "FenceWide", "x": 64, "width": 96 },
                            { "thing": "FenceWide", "x": 24, "y": 8, "height": 104 },
                            { "thing": "FenceWide", "x": 112, "y": 8, "height": 120 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 80, "y": 20, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Grass", "x": 64, "y": 32, "width": 48, "height": 48 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 128, "y": 36, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "y": 36, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "y": 52, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "y": 68, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Water", "x": 32, "y": 80, "width": 32, "height": 32, "open": [true, true, true, false] },
                            { "macro": "Checkered", "things": ["", "Flower"], "y": 84, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Water", "x": 64, "y": 80, "width": 96, "height": 32, "open": [false, true, true, true] },
                            { "macro": "Water", "y": 112, "width": 32, "height": 200, "open": [false, true, true, true] },
                            { "macro": "Water", "x": 32, "y": 112, "width": 128, "height": 200, "open": [true, true, true, true] },
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.Route22 = {
                "name": "Route 22",
                "theme": "Cerulean from Mount Moon",
                "locationDefault": "Pokemon League",
                "locations": {
                    "Pokemon League": {
                        "area": "Land"
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 320,
                        "height": 144,
                        "wildPokemon": {
                            "grass": [{
                                    "title": "RATTATA".split(""),
                                    "levels": [2, 3, 4],
                                    "rate": .5
                                }, {
                                    "title": "SPEAROW".split(""),
                                    "levels": [3, 5],
                                    "rate": .1
                                }, {
                                    "title": ["N", "I", "D", "O", "R", "A", "N", "FemaleSymbol"],
                                    "levels": [2, 3, 4],
                                    "rate": .35
                                }, {
                                    "title": ["N", "I", "D", "O", "R", "A", "N", "MaleSymbol"],
                                    "levels": [3, 4],
                                    "rate": .05
                                }],
                            "fishing": {
                                "old": [{
                                        "title": "MAGIKARP".split(""),
                                        "levels": [5],
                                        "rate": 1
                                    }],
                                "good": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }],
                                "super": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }]
                            }
                        },
                        "creation": [
                            { "thing": "AreaSpawner", "x": 320, "height": 320, "map": "Viridian City", "area": "Land", "direction": 1, "offsetY": -64 },
                            { "thing": "FenceWide", "width": 16, "height": 16 },
                            { "thing": "DirtLight", "width": 112, "height": 48 },
                            { "macro": "Building", "x": 16, "stories": 3, "width": 96, "doorOffset": 48, "entrance": "Pokemon League" },
                            { "macro": "Mountain", "x": 112, "width": 208, "height": 8, "left": true },
                            { "macro": "Mountain", "x": 112, "y": 8, "width": 128, "height": 24, "right": true, "bottom": true, "left": true },
                            { "macro": "Mountain", "x": 232, "y": 8, "width": 56, "bottom": true },
                            { "macro": "Mountain", "x": 288, "y": 8, "width": 32, "height": 40, "bottom": true, "left": true },
                            { "macro": "Mountain", "y": 16, "top": true, "right": true, "width": 16, "height": 112 },
                            { "thing": "DirtMedium", "x": 240, "y": 16, "width": 48, "height": 16 },
                            { "thing": "DirtLight", "x": 112, "y": 32, "width": 16, "height": 64 },
                            { "thing": "FenceWide", "x": 112, "y": 32, "width": 16, "height": 64 },
                            { "thing": "Ledge", "x": 240, "y": 28, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 264, "y": 28 },
                            { "thing": "Ledge", "x": 272, "y": 28, "width": 16 },
                            { "thing": "BrickRoad", "x": 128, "y": 32, "width": 160, "height": 16 },
                            { "thing": "BrickRoad", "x": 16, "y": 48, "width": 96, "height": 16 },
                            { "thing": "CutsceneTriggerer", "x": 228, "y": 32, "height": 16, "id": "RivalTriggerer", "cutscene": "RivalRoute22" },
                            { "thing": "DirtMedium", "x": 128, "y": 48, "width": 48, "height": 16 },
                            { "macro": "Water", "x": 176, "y": 48, "width": 32, "height": 32, "open": [false, false, true, false] },
                            { "thing": "DirtMedium", "x": 208, "y": 48, "width": 80, "height": 64 },
                            { "thing": "DirtMedium", "x": 288, "y": 48, "width": 32, "height": 16 },
                            { "macro": "Mountain", "x": 208, "y": 48, "width": 32, "height": 64, "top": true, "right": true, "bottom": true, "left": true },
                            { "thing": "FenceWide", "x": 272, "y": 48, "width": 16 },
                            { "thing": "ThemePlayer", "x": 312, "y": 48, "height": 32, "theme": "Cerulean from Mount Moon" },
                            { "thing": "FenceWide", "x": 272, "y": 56, "height": 40 },
                            { "thing": "Ledge", "x": 128, "y": 60, "width": 48 },
                            { "thing": "Ledge", "x": 240, "y": 60, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 248, "y": 60 },
                            { "thing": "Ledge", "x": 256, "y": 60, "width": 16 },
                            { "thing": "DirtMedium", "x": 16, "y": 64, "width": 96, "height": 16 },
                            { "thing": "DirtMedium", "x": 128, "y": 64, "width": 48, "height": 32 },
                            { "thing": "Grass", "x": 128, "y": 64, "width": 48, "height": 32 },
                            { "thing": "Grass", "x": 240, "y": 64, "width": 32, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 288, "y": 64, "xnum": 4, "ynum": 2 },
                            { "thing": "Ledge", "x": 16, "y": 76, "width": 72, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 88, "y": 76 },
                            { "thing": "Ledge", "x": 96, "y": 76, "width": 16 },
                            { "thing": "DirtLight", "x": 16, "y": 80, "width": 96, "height": 16 },
                            { "thing": "BrickRoad", "x": 176, "y": 80, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 288, "y": 80, "xnum": 2, "ynum": 2 },
                            { "thing": "FenceVertical", "x": 48, "y": 88, "width": 8 },
                            { "thing": "Sign", "x": 56, "y": 88, "dialog": "POKEMON LEAGUE Front Gate" },
                            { "thing": "FenceVertical", "x": 64, "y": 88, "width": 48 },
                            { "thing": "DirtClean", "x": 304, "y": 80 },
                            { "macro": "Mountain", "x": 304, "y": 80, "top": true, "left": true, "width": 16, "height": 48 },
                            { "thing": "DirtMedium", "x": 16, "y": 96, "width": 192, "height": 16 },
                            { "thing": "DirtMedium", "x": 288, "y": 96, "width": 16, "height": 16 },
                            { "thing": "Ledge", "x": 16, "y": 108, "width": 192 },
                            { "thing": "Ledge", "x": 240, "y": 108, "width": 24, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 264, "y": 108 },
                            { "thing": "Ledge", "x": 272, "y": 108, "width": 32 },
                            { "thing": "BrickRoad", "x": 16, "y": 112, "width": 288, "height": 16 },
                            { "thing": "Mountain", "y": 128, "width": 16, "height": 16 },
                            { "macro": "Mountain", "x": 16, "y": 128, "width": 288, "height": 16, "top": true },
                            { "thing": "Mountain", "x": 304, "y": 128, "width": 16, "height": 16 }
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.ViridianCity = {
                "name": "Viridian City",
                "theme": "Pewter City",
                "locationDefault": "PokeCenter Outside Door",
                "locations": {
                    "Nicknamer House Front Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "School Front Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "PokeCenter Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "PokeMart Outside Door": {
                        "area": "Land",
                        "direction": 2,
                        "push": true
                    },
                    "Nicknamer House Floor 1 Door": {
                        "area": "Nicknamer House"
                    },
                    "School Floor 1 Door": {
                        "area": "School"
                    },
                    "PokeCenter Inside Door": {
                        "area": "PokeCenter"
                    },
                    "PokeMart Inside Door": {
                        "area": "PokeMart"
                    }
                },
                "areas": {
                    "Land": {
                        "allowCycling": true,
                        "width": 320,
                        "height": 288,
                        "wildPokemon": {
                            "fishing": {
                                "old": [{
                                        "title": "MAGIKARP".split(""),
                                        "levels": [5],
                                        "rate": 1
                                    }],
                                "good": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }, {
                                        "title": "GOLDEEN".split(""),
                                        "levels": [10],
                                        "rate": .5
                                    }],
                                "super": [{
                                        "title": "POLIWAG".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }, {
                                        "title": "TENTACOOL".split(""),
                                        "levels": [15],
                                        "rate": .5
                                    }]
                            }
                        },
                        "creation": [
                            { "thing": "AreaSpawner", "width": 320, "map": "Route 2", "area": "Land", "direction": 0, "offsetX": 48 },
                            { "thing": "AreaSpawner", "height": 288, "map": "Route 22", "area": "Land", "direction": 3, "offsetY": 64 },
                            { "macro": "Mountain", "width": 48, "height": 112, "bottom": true, "right": true },
                            { "thing": "DirtMedium", "x": 48, "width": 80, "height": 144 },
                            { "thing": "PlantSmall", "x": 48, "width": 80, "height": 32 },
                            { "thing": "DirtWhite", "x": 128, "width": 16, "height": 32 },
                            { "thing": "FenceVertical", "x": 128, "width": 8, "height": 32 },
                            { "thing": "ThemePlayer", "x": 136, "width": 24, "theme": "Pewter City" },
                            { "thing": "DirtLight", "x": 144, "width": 16, "height": 16 },
                            { "thing": "DirtMedium", "x": 160, "width": 128, "height": 16 },
                            { "thing": "PlantSmall", "x": 160, "width": 32, "height": 32 },
                            { "thing": "PlantSmall", "x": 192, "width": 96, "height": 16 },
                            { "thing": "DirtMedium", "x": 288, "width": 32, "height": 256 },
                            { "thing": "PlantSmall", "x": 288, "width": 32, "height": 256 },
                            { "thing": "Sign", "x": 152, "y": 8, "dialog": ["TRAINER TIPS", "Catch %%%%%%%POKEMON%%%%%%% and expand your collection!", "The more you have, the easier it is to fight!"] },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 16, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 160, "y": 16, "width": 32, "height": 16 },
                            { "thing": "DirtLight", "x": 192, "y": 16, "width": 96, "height": 16 },
                            { "thing": "Tree", "x": 112, "y": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 128, "y": 32, "xnum": 6, "ynum": 2 },
                            { "thing": "DirtLight", "x": 176, "y": 32, "width": 48, "height": 48 },
                            { "thing": "DirtLight", "x": 224, "y": 32, "width": 48, "height": 32 },
                            { "macro": "Gym", "x": 224, "y": 32 },
                            { "thing": "DirtLight", "x": 272, "y": 32, "width": 16, "height": 64 },
                            { "thing": "FenceWide", "x": 64, "y": 40, "width": 48 },
                            { "thing": "PlantSmall", "x": 112, "y": 40, "width": 16 },
                            { "thing": "FenceWide", "x": 56, "y": 48, "height": 80 },
                            { "thing": "PlantSmall", "x": 64, "y": 48, "width": 64, "height": 88 },
                            { "thing": "DirtWhite", "x": 128, "y": 48, "width": 16, "height": 80 },
                            { "thing": "FenceVertical", "x": 128, "y": 48, "width": 8, "height": 80 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 144, "y": 48, "xnum": 2, "ynum": 12 },
                            { "thing": "DirtWhite", "x": 160, "y": 48, "width": 16, "height": 32 },
                            { "thing": "FenceVertical", "x": 160, "y": 48, "width": 8, "height": 16 },
                            { "thing": "Sign", "x": 216, "y": 56, "dialog": "VIRIDIAN CITY \n %%%%%%%POKEMON%%%%%%% GYM" },
                            { "macro": "House", "x": 160, "y": 64, "door": true, "entrance": "Nicknamer House Front Door", "transport": "Nicknamer House Floor 1 Door" },
                            { "thing": "Elder", "x": 240, "y": 64, "name": "GymWatcher", "direction": 0, "roaming": true, "roamingDirections": [], "dialog": ["This %%%%%%%POKEMON%%%%%%% gym is always closed.", "I wonder who the LEADER is?"] },
                            { "thing": "MenuTriggerer", "x": 248, "y": 64, "dialog": "The GYM's doors are locked...", "pushDirection": 2, "pushSteps": [1] },
                            { "thing": "DirtMedium", "x": 224, "y": 64, "width": 48, "height": 16 },
                            { "thing": "Lady", "x": 136, "y": 72, "id": "CrankyGranddaughter", "direction": 1, "directionPreferred": 1, "dialog": "Oh Grandpa! Don't be so mean! \n He hasn't had his coffee yet." },
                            { "thing": "Lady", "x": 136, "y": 72, "id": "HappyGranddaughter", "alive": false, "direction": 1, "directionPreferred": 1, "dialog": "When I go to shop in PEWTER CITY, I have to take the winding trail in VIRIDIAN FOREST." },
                            { "thing": "Elder", "x": 144, "y": 72, "id": "CrankyGrandpa", "resting": true, "pushDirection": 2, "pushSteps": [1], "dialog": "You can't go through here! This is private property!" },
                            {
                                "thing": "Elder", "x": 144, "y": 40, "id": "HappyGrandpa", "alive": false, "roaming": true, "roamingDirections": [1, 3], "dialog": ["Ahh, I've had my coffee now and I feel great!", "Sure you can go through.", "Are you in a hurry?"], "dialogOptions": {
                                    "type": "Yes/No",
                                    "options": {
                                        "Yes": "Time is money... Go along then.",
                                        "No": {
                                            "words": ["I see you're using a %%%%%%%POKEDEX%%%%%%%.", "When you catch a %%%%%%%POKEMON%%%%%%%, %%%%%%%POKEDEX%%%%%%% is automatically updated.", "What? Don't you know how to catch %%%%%%%POKEMON%%%%%%%?", "I'll show you how to then."],
                                            "cutscene": "ElderTraining"
                                        }
                                    }
                                }
                            },
                            { "thing": "MenuTriggerer", "x": 152, "y": 72, "id": "CrankyGrandpaBlocker", "pushDirection": 2, "pushSteps": [1], "keepAlive": true, "requireOverlap": true, "dialog": "You can't go through here! This is private property!" },
                            { "thing": "Ledge", "x": 192, "y": 76, "width": 32, "jagged": true },
                            { "thing": "Ledge", "x": 224, "y": 76, "width": 48 },
                            { "thing": "Ledge", "x": 272, "y": 76, "width": 16, "jagged": true },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 160, "y": 80, "xnum": 14, "ynum": 2 },
                            { "thing": "DirtLight", "x": 160, "y": 96, "width": 128, "height": 16 },
                            { "thing": "FenceVertical", "x": 160, "y": 104, "width": 128, "height": 8 },
                            { "thing": "DirtMedium", "y": 112, "width": 56, "height": 16 },
                            { "thing": "ThemePlayer", "x": 8, "y": 112, "height": 32, "theme": "Pewter City" },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 160, "y": 112, "xnum": 16, "ynum": 2 },
                            { "macro": "House", "x": 160, "y": 112, "door": true, "entrance": "School Front Door", "transport": "School Floor 1 Door" },
                            { "thing": "DirtLight", "y": 128, "width": 16, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 16, "y": 128, "xnum": 4, "ynum": 2 },
                            { "thing": "DirtLight", "x": 128, "y": 128, "width": 16, "height": 16 },
                            { "thing": "DirtLight", "x": 160, "y": 128, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 192, "y": 128, "xnum": 2, "ynum": 4 },
                            { "thing": "DirtMedium", "x": 208, "y": 128, "width": 64, "height": 32 },
                            { "macro": "Building", "x": 224, "y": 128, "door": true, "label": "Mart", "transport": { "map": "Viridian City", "location": "PokeMart Inside Door" }, "entrance": "PokeMart Outside Door" },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 272, "y": 128, "xnum": 2, "ynum": 4 },
                            { "thing": "Sign", "x": 136, "y": 136, "dialog": "VIRIDIAN CITY \n The Eternally Green Paradise" },
                            { "thing": "FenceVertical", "x": 160, "y": 136, "width": 32 },
                            { "macro": "Mountain", "y": 144, "width": 32, "height": 80, "top": true, "right": true, "bottom": true },
                            { "thing": "DirtLight", "x": 24, "y": 144 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 144, "xnum": 2, "ynum": 8 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 48, "y": 144, "xnum": 14, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 160, "y": 144, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 160, "y": 148, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtMedium", "x": 48, "y": 160, "width": 80, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 128, "y": 160, "xnum": 20, "ynum": 2 },
                            { "thing": "BugCatcher", "x": 104, "y": 160, "name": "WaistHappy", "direction": 1, "roaming": true, "dialog": ["Those %%%%%%%POKE%%%%%%% BALLs at your waist! You have %%%%%%%POKEMON%%%%%%%!", "It's great that you can carry and use %%%%%%%POKEMON%%%%%%% any time, anywhere!"] },
                            { "thing": "PlantSmall", "x": 32, "y": 168, "width": 32 },
                            { "thing": "Tree", "x": 64, "y": 176 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 128, "y": 176, "xnum": 2, "ynum": 4 },
                            { "thing": "DirtMedium", "x": 144, "y": 176, "width": 16, "height": 64 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 160, "y": 176, "xnum": 8, "ynum": 4 },
                            { "macro": "Building", "x": 176, "y": 176, "door": true, "label": "Poke", "entrance": "PokeCenter Outside Door", "transport": { "map": "Viridian City", "location": "PokeCenter Inside Door" } },
                            { "thing": "DirtMedium", "x": 224, "y": 176, "width": 48, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 272, "y": 176, "xnum": 2, "ynum": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 80, "y": 180, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 144, "y": 180, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 224, "y": 180, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Fatty", "x": 48, "y": 184, "dialog": "Who knows?" },
                            { "thing": "PlantSmall", "x": 64, "y": 184, "width": 16 },
                            { "thing": "DirtMedium", "x": 48, "y": 192, "width": 16, "height": 32 },
                            { "macro": "Water", "x": 64, "y": 192, "width": 48, "height": 32, "open": [false, false, true, false] },
                            { "thing": "DirtMedium", "x": 112, "y": 192, "width": 16, "height": 32 },
                            { "thing": "BugCatcher", "x": 240, "y": 200, "name": "CaterpillerGuy", "roaming": true, "dialog": "You want to know about the 2 kinds of caterpillar %%%%%%%POKEMON%%%%%%%?", "dialogOptions": { "type": "Yes/No", "options": { "Yes": ["CATERPIE has no poison, but WEEDLE does.", "Watch out for its POISON STING!"], "No": "Oh, OK then!" } } },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 256, "y": 196, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "DirtLight", "x": 32, "y": 208, "width": 16, "height": 16 },
                            { "thing": "DirtLight", "x": 128, "y": 208, "width": 16, "height": 16 },
                            { "thing": "DirtLight", "x": 160, "y": 208, "width": 128, "height": 16 },
                            { "thing": "Ledge", "x": 32, "y": 220, "width": 32, "crumbleLeft": true },
                            { "thing": "Ledge", "x": 112, "y": 220, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 120, "y": 220 },
                            { "thing": "Ledge", "x": 128, "y": 220, "width": 24, "crumbleLeft": true, "crumbleRight": true },
                            { "thing": "LedgeOpening", "x": 152, "y": 220 },
                            { "thing": "Ledge", "x": 160, "y": 220, "width": 128, "jagged": true },
                            { "thing": "DirtMedium", "y": 224, "width": 32, "height": 64 },
                            { "thing": "FenceWide", "x": 24, "y": 224, "height": 32 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 32, "y": 224, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 48, "y": 224, "width": 80, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 128, "y": 224, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtLight", "x": 160, "y": 224, "width": 16, "height": 16 },
                            { "thing": "DirtMedium", "x": 176, "y": 224, "width": 48, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 224, "y": 224, "xnum": 2, "ynum": 2 },
                            { "thing": "DirtMedium", "x": 240, "y": 224, "width": 32, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 272, "y": 224, "xnum": 2, "ynum": 2 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 48, "y": 228, "xnum": 4, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 192, "y": 228, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "macro": "Checkered", "things": ["", "Flower"], "x": 240, "y": 228, "xnum": 8, "ynum": 2, "xwidth": 4, "yheight": 4 },
                            { "thing": "Sign", "x": 168, "y": 232 },
                            { "thing": "DirtLight", "x": 32, "y": 240, "width": 128, "height": 16 },
                            { "macro": "Checkered", "things": ["DirtClean", "DirtWhite"], "x": 160, "y": 240, "xnum": 2, "ynum": 6 },
                            { "thing": "DirtLight", "x": 176, "y": 240, "width": 112, "height": 16 },
                            { "thing": "FenceVertical", "x": 32, "y": 248, "width": 128 },
                            { "thing": "FenceVertical", "x": 176, "y": 248, "width": 112 },
                            { "thing": "DirtMedium", "x": 32, "y": 256, "width": 128, "height": 32 },
                            { "thing": "DirtMedium", "x": 176, "y": 256, "width": 144, "height": 32 },
                            { "thing": "FenceWide", "x": 104, "y": 256, "height": 32 },
                            { "thing": "FenceWide", "x": 152, "y": 256, "height": 32 },
                            { "thing": "FenceWide", "x": 176, "y": 256, "height": 32 },
                            { "thing": "FenceWide", "x": 224, "y": 256, "height": 32 },
                            { "thing": "ThemePlayer", "x": 160, "y": 272, "width": 16, "theme": "Pewter City" },
                            { "thing": "AreaSpawner", "y": 288, "width": 320, "map": "Route 1", "area": "Land", "direction": 1, "offsetX": -240 }
                        ]
                    },
                    "Nicknamer House": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "Cabinet", "width": 16 },
                            { "thing": "Painting", "x": 24, "dialog": "A TOWN MAP." },
                            { "thing": "Clipboard", "x": 32, "dialog": "SPEAROW \n Name: SPEARY" },
                            { "thing": "Window", "x": 40 },
                            { "thing": "Bookshelf", "x": 56 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "Table2x3", "x": 24, "y": 24 },
                            { "thing": "Dad", "x": 40, "y": 24, "direction": 3, "roaming": true, "roamingDirections": [], "dialog": ["Coming up with nicknames is fun, but hard.", "Simple names are the easiest to remember."] },
                            { "thing": "Stool", "x": 16, "y": 24 },
                            { "thing": "Stool", "x": 40, "y": 24 },
                            { "thing": "Stool", "x": 16, "y": 32 },
                            { "thing": "Stool", "x": 40, "y": 32 },
                            { "thing": "LittleGirl", "x": 8, "y": 32, "roaming": true, "roamingDirections": [0, 2], "dialog": "My daddy loves %%%%%%%POKEMON%%%%%%% too." },
                            { "thing": "BirdPokemon", "x": 48, "y": 40, "direction": 3, "roaming": true, "roamingDirections": [1, 3], "dialog": "SPEARY: Tetweet!" },
                            { "thing": "PottedPalmTree", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 56, "y": 48 },
                            { "thing": "DoormatDashed", "x": 16, "y": 56, "width": 16, "entrance": "Nicknamer House Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "location": "Nicknamer House Front Door" }, "requireDirection": 2 }
                        ]
                    },
                    "School": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorHorizontalBands", "width": 64 },
                            { "thing": "InvisibleWall", "width": 64 },
                            { "thing": "Window", "x": 8 },
                            { "thing": "Blackboard", "x": 24 },
                            { "thing": "Bookshelf", "x": 56 },
                            { "thing": "FloorTiledDiagonal", "y": 8, "width": 64, "height": 56 },
                            { "thing": "Lass", "x": 32, "y": 8, "direction": 2, "directionPreferred": 2, "dialog": ["Okay!", "Be sure to read the blackboard carefully!"] },
                            { "thing": "Table2x3", "x": 24, "y": 24 },
                            { "thing": "Notepad", "x": 24, "y": 28 },
                            {
                                "thing": "DialogResponder", "x": 24, "y": 28, "dialog": ["Looked at the notebook!", "First page...", "%%%%%%%POKE%%%%%%% BALLs are used to catch %%%%%%%POKEMON%%%%%%%.", "Up to 6 %%%%%%%POKEMON%%%%%%% can be carried.", "People who raise and make %%%%%%%POKEMON%%%%%%% fight are called %%%%%%%POKEMON%%%%%%% trainers.", "Turn the page?"], "dialogOptions": {
                                    "options": {
                                        "Yes": {
                                            "words": ["Second page...", "A healty %%%%%%%POKEMON%%%%%%% may be hard to catch, so weaken it first!", "Poison, burns, and other damage are effective!", "Turn the page?"],
                                            "options": {
                                                "Yes": {
                                                    "words": ["Third page...", "%%%%%%%POKEMON%%%%%%% trainers seek others to engage in %%%%%%%POKEMON%%%%%%% fights.", "Battles are constantly fought at %%%%%%%POKEMON%%%%%%% GYMs.", "Turn the page?"],
                                                    "options": {
                                                        "Yes": {
                                                            "words": ["Fourth page...", "The goal for %%%%%%%POKEMON%%%%%%% trainers is to beat the top 8 %%%%%%%POKEMON%%%%%%% GYM LEADERs.", "Do so to earn the right to face...", "The ELITE FOUR of %%%%%%%POKEMON%%%%%%% LEAGUE!", "GIRL: Hey! Don't look at my notes!"]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            { "thing": "Stool", "x": 24, "y": 40 },
                            { "thing": "Girl", "x": 24, "y": 40, "direction": 0, "dialog": "Whew! I'm trying to memorize all my notes." },
                            { "thing": "PottedPalmTree", "y": 48 },
                            { "thing": "PottedPalmTree", "x": 56, "y": 48 },
                            { "thing": "DoormatDashed", "x": 16, "y": 56, "width": 16, "entrance": "School Floor 1 Door" },
                            { "thing": "HiddenTransporter", "x": 16, "y": 56, "width": 16, "transport": { "location": "School Front Door" }, "requireDirection": 2 }
                        ]
                    },
                    "PokeCenter": {
                        "allowCycling": false,
                        "width": 112,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "macro": "PokeCenter", "entrance": "PokeCenter Inside Door", "transport": "PokeCenter Outside Door" },
                            { "thing": "CoolTrainerM", "x": 32, "y": 24, "roaming": true, "roamingDirections": [], "dialog": ["There's a %%%%%%%POKEMON%%%%%%% CENTER in every town ahead.", "They don't charge any money either!"] },
                            { "thing": "Gentleman", "x": 80, "y": 40, "direction": 0, "roaming": true, "roamingDirections": [0, 2], "dialog": ["You can use that PC in the corner.", "The receptionist told me. So kind!"] }
                        ]
                    },
                    "PokeMart": {
                        "allowCycling": false,
                        "width": 64,
                        "height": 64,
                        "invisibleWallBorders": true,
                        "creation": [
                            { "macro": "PokeMart", "entrance": "PokeMart Inside Door", "transport": "PokeMart Outside Door", "responderId": "CashierDetector", "responderDialog": "Okay! Say hi to PROF. Oak for me!", "items": [{ "item": "Pokeball", "cost": 200 }, { "item": "Antidote", "cost": 100 }, { "item": "Parlyz Heal", "cost": 200 }, { "item": "Burn Heal", "cost": 250 }] },
                            { "thing": "CoolTrainerM", "x": 24, "y": 24, "direction": 2, "roaming": true, "roamingDirections": [], "dialog": "No! POTIONS are all sold out." },
                            { "thing": "BugCatcher", "x": 48, "y": 40, "direction": 0, "roaming": true, "roamingDirections": [0, 2], "dialog": "This shop sells many ANTIDOTEs." },
                            { "thing": "CutsceneTriggerer", "x": 24, "y": 56, "width": 16, "id": "OakParcelPickup", "active": true, "cutscene": "OakParcelPickup" }
                        ]
                    }
                }
            };
            /* tslint:disable max-line-length */
            MapsLibrary.ViridianForest = {
                "name": "Viridian Forest",
                "theme": "Viridian Forest",
                "locationDefault": "Forest Top",
                "locations": {
                    "Gate North Door North": {
                        "area": "Gate North",
                        "direction": 2,
                        "push": true
                    },
                    "Gate North Door South": {
                        "area": "Gate North",
                        "direction": 0
                    },
                    "Forest Bottom": {
                        "area": "Forest",
                        "xloc": 136,
                        "yloc": 376,
                        "direction": 0
                    },
                    "Forest Top": {
                        "area": "Forest",
                        "xloc": 8,
                        "direction": 2
                    },
                    "Gate South Door North": {
                        "area": "Gate South",
                        "direction": 2,
                        "push": true
                    },
                    "Gate South Door South": {
                        "area": "Gate South",
                        "direction": 0
                    }
                },
                "areas": {
                    "Gate North": {
                        "allowCycling": false,
                        "width": 80,
                        "height": 64,
                        "theme": "Pewter City",
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorFancyWithDarkBottom", "width": 40 },
                            { "thing": "InvisibleWall", "width": 40 },
                            { "thing": "Door", "x": 40, "indoor": true, "transport": { "map": "Route 2", "location": "Viridian Forest Top" }, "entrance": "Gate North Door North" },
                            { "thing": "WallIndoorFancyWithDarkBottom", "x": 48, "width": 32 },
                            { "thing": "InvisibleWall", "x": 48, "width": 32 },
                            { "thing": "FloorCheckered", "y": 8, "width": 80, "height": 56 },
                            { "thing": "PottedPalmTree", "y": 16, "height": 48 },
                            { "thing": "Guy", "x": 24, "y": 16, "roaming": true, "roamingDirections": [], "dialog": ["Many %%%%%%%POKEMON%%%%%%% live only in forests and caves.", "You need to look everywhere to get different kinds!"] },
                            { "thing": "Table1x2", "x": 48, "y": 16 },
                            { "thing": "Table1x2", "x": 64, "y": 16 },
                            { "thing": "PottedPalmTree", "x": 72, "y": 16, "height": 48 },
                            { "thing": "OldMan", "x": 16, "y": 40, "roaming": true, "roamingDirections": [], "dialog": ["Have you noticed the bushes on the roadside?", "They can be cut down by a special %%%%%%%POKEMON%%%%%%% move."] },
                            { "thing": "Table1x2", "x": 48, "y": 40 },
                            { "thing": "Table1x2", "x": 64, "y": 40 },
                            { "thing": "Doormat", "x": 32, "y": 56, "width": 16, "entrance": "Gate North Door South" },
                            { "thing": "HiddenTransporter", "x": 32, "y": 56, "width": 16, "directionRequired": 2, "transport": { "map": "Viridian Forest", "location": "Forest Top" } }
                        ]
                    },
                    "Forest": {
                        "allowCycling": true,
                        "width": 272,
                        "height": 384,
                        "wildPokemon": {
                            "grass": [{
                                    "title": "CATERPIE".split(""),
                                    "levels": [3, 5],
                                    "rate": .5
                                }, {
                                    "title": "METAPOD".split(""),
                                    "levels": [4, 5, 6],
                                    "rate": .35
                                }, {
                                    "title": "WEEDLE".split(""),
                                    "level": 3,
                                    "rate": .05
                                }, {
                                    "title": "KAKUNA".split(""),
                                    "level": 4,
                                    "rate": .05
                                }, {
                                    "title": "PIKACHU".split(""),
                                    "levels": [3, 5],
                                    "rate": .05
                                }]
                        },
                        "creation": [
                            { "thing": "HiddenTransporter", "x": 8, "width": 16, "directionRequired": 0, "transport": "Gate North Door South" },
                            { "thing": "DirtForest", "width": 272, "height": 384 },
                            { "thing": "Stump", "height": 208 },
                            { "thing": "Stump", "x": 24, "height": 176 },
                            { "thing": "PlantLarge", "x": 32, "height": 176 },
                            { "thing": "Stump", "x": 48, "width": 64 },
                            { "thing": "PlantLarge", "x": 112, "height": 128 },
                            { "thing": "Stump", "x": 128, "width": 144 },
                            { "thing": "Sign", "x": 16, "y": 8, "forest": true, "dialog": "LEAVING \n VIRIDIAN FOREST PEWTER CITY AHEAD" },
                            { "thing": "Stump", "x": 264, "y": 8, "height": 264 },
                            { "thing": "Stump", "x": 160, "y": 24, "width": 80 },
                            { "thing": "ForestDirt", "x": 104, "y": 28 },
                            { "thing": "ForestDirt", "x": 152, "y": 28 },
                            { "thing": "ForestDirt", "x": 248, "y": 28 },
                            { "thing": "Stump", "x": 72, "y": 32, "height": 160 },
                            { "thing": "Stump", "x": 80, "y": 32, "height": 128 },
                            { "thing": "Stump", "x": 152, "y": 32, "height": 32 },
                            { "thing": "PlantLarge", "x": 160, "y": 32, "width": 80, "height": 32 },
                            { "thing": "Stump", "x": 240, "y": 32, "height": 32 },
                            { "thing": "Grass", "x": 8, "y": 48, "width": 16, "height": 144 },
                            { "thing": "Grass", "x": 48, "y": 48, "width": 24, "height": 144 },
                            { "thing": "Grass", "x": 88, "y": 48, "width": 24, "height": 96 },
                            { "thing": "Grass", "x": 128, "y": 48, "width": 24, "height": 96 },
                            { "thing": "Grass", "x": 152, "y": 64, "width": 40, "height": 16 },
                            { "thing": "ForestDirt", "x": 216, "y": 76 },
                            { "thing": "Stump", "x": 152, "y": 80, "height": 80 },
                            { "thing": "PlantLarge", "x": 160, "y": 80, "width": 32, "height": 80 },
                            { "thing": "Stump", "x": 192, "y": 80, "height": 240 },
                            { "thing": "Stump", "x": 216, "y": 80, "height": 64 },
                            { "thing": "PlantLarge", "x": 224, "y": 80, "height": 64 },
                            { "thing": "Grass", "x": 240, "y": 80, "width": 24, "height": 64 },
                            { "thing": "Pokeball", "x": 200, "y": 88, "name": "Item One", "item": "Antidote" },
                            { "thing": "Sign", "x": 208, "y": 136, "forest": true, "dialog": ["TRAINER TIPS", "Contact PROF. OAK via PC to get your %%%%%%%POKEDEX%%%%%%% evaluated!"] },
                            {
                                "thing": "BugCatcher", "x": 240, "y": 152, "name": "Trainer Two", "direction": 3, "sight": 4, "trainer": true,
                                "reward": 70,
                                "dialog": "Yo! You can't jam out if you're a %%%%%%%POKEMON%%%%%%% trainer!",
                                "textDefeat": "BUG CATCHER: No! CATERPIE can't cut it!",
                                "dialogNext": "Ssh! You'll scare the bugs away!",
                                "actors": [{
                                        "title": ["W", "E", "E", "D", "L", "E"],
                                        "level": 7
                                    }, {
                                        "title": ["K", "A", "K", "U", "N", "A"],
                                        "level": 7
                                    }, {
                                        "title": ["W", "E", "E", "D", "L", "E"],
                                        "level": 7
                                    }]
                            },
                            { "thing": "ForestDirt", "x": 104, "y": 156 },
                            { "thing": "ForestDirt", "x": 216, "y": 156 },
                            { "thing": "PlantLarge", "x": 80, "y": 160, "width": 112, "height": 32 },
                            { "thing": "Grass", "x": 200, "y": 160, "width": 24, "height": 96 },
                            { "thing": "PlantLarge", "x": 224, "y": 160, "height": 96 },
                            { "thing": "Stump", "x": 240, "y": 160, "height": 96 },
                            { "thing": "Grass", "x": 24, "y": 176, "height": 16 },
                            {
                                "thing": "BugCatcher", "x": 16, "y": 144, "name": "Trainer Three", "direction": 3, "sight": 1,
                                "reward": 90,
                                "dialog": "Hey, wait up! What's the hurry?",
                                "textDefeat": "BUG CATCHER: I give! You're good at this!",
                                "dialogNext": ["Sometimes, you can find stuff on the ground!", "I'm looking for the stuff I dropped!"],
                                "actors": [{
                                        "title": "Weedle",
                                        "level": 9
                                    }]
                            },
                            { "thing": "Sign", "x": 32, "y": 192, "forest": true, "dialog": ["TRAINER TIPS", "No stealing of %%%%%%%POKEMON%%%%%%% from other trainers! Catch only wild %%%%%%%POKEMON%%%%%%%!"] },
                            { "thing": "ForestDirt", "x": 56, "y": 204 },
                            { "thing": "Stump", "x": 104, "y": 192, "height": 48 },
                            { "thing": "PlantLarge", "x": 112, "y": 192, "width": 80, "height": 48 },
                            { "thing": "PlantLarge", "y": 208, "width": 80, "height": 32 },
                            { "thing": "Stump", "x": 80, "y": 208, "height": 32 },
                            { "thing": "Pokeball", "x": 96, "y": 224, "name": "Item Two", "item": "Potion" },
                            { "thing": "Stump", "y": 240, "height": 16 },
                            { "thing": "Grass", "x": 8, "y": 240, "width": 64, "height": 16 },
                            { "thing": "Stump", "x": 72, "y": 240, "height": 16 },
                            { "thing": "PlantLarge", "x": 80, "y": 240, "width": 112 },
                            { "thing": "PlantLarge", "y": 256, "width": 48, "height": 64 },
                            { "thing": "Grass", "x": 64, "y": 256, "width": 64, "height": 16 },
                            { "thing": "Sign", "x": 128, "y": 256, "forest": true },
                            { "thing": "Grass", "x": 144, "y": 256, "height": 80 },
                            { "thing": "Stump", "x": 152, "y": 256, "height": 64 },
                            { "thing": "PlantLarge", "x": 160, "y": 256, "width": 32, "height": 64 },
                            { "thing": "Grass", "x": 200, "y": 256, "height": 80 },
                            {
                                "thing": "BugCatcher", "x": 232, "y": 264, "name": "Trainer One", "direction": 3, "sight": 3, "trainer": true,
                                "reward": 60,
                                "dialog": "Hey! You have %%%%%%%POKEMON%%%%%%%! Come on! Let's battle' em!",
                                "textDefeat": "BUG CATCHER: No! CATERPIE can't cut it!",
                                "dialogNext": "Ssh! You'll scare the bugs away!",
                                "actors": [{
                                        "title": ["W", "E", "E", "D", "L", "E"],
                                        "level": 6
                                    }, {
                                        "title": ["C", "A", "T", "E", "R", "P", "I", "E"],
                                        "level": 6
                                    }]
                            },
                            { "thing": "ForestDirt", "x": 56, "y": 268 },
                            { "thing": "ForestDirt", "x": 248, "y": 268 },
                            { "thing": "Grass", "x": 64, "y": 272, "height": 64 },
                            { "thing": "Stump", "x": 72, "y": 272, "height": 48 },
                            { "thing": "PlantLarge", "x": 80, "y": 272, "width": 32, "height": 48 },
                            { "thing": "Stump", "x": 112, "y": 272, "height": 48 },
                            { "thing": "Grass", "x": 120, "y": 272, "height": 64 },
                            { "thing": "PlantLarge", "x": 224, "y": 272, "width": 48, "height": 48 },
                            { "thing": "Stump", "y": 320, "height": 32 },
                            { "thing": "Grass", "x": 8, "y": 320, "width": 32, "height": 32 },
                            { "thing": "Grass", "x": 72, "y": 320, "width": 48, "height": 16 },
                            { "thing": "Grass", "x": 152, "y": 320, "width": 48, "height": 16 },
                            { "thing": "Sign", "x": 192, "y": 320, "forest": true, "dialog": ["TRAINER TIPS", "If you want to avoid battles", "stay away from grassy areas!"] },
                            { "thing": "BugCatcher", "x": 216, "y": 320, "roaming": true, "roamingDirections": [], "dialog": ["I ran out of %%%%%%%POKE%%%%%%% BALLs to catch %%%%%%%POKEMON%%%%%%% with!", "You should carry extras!"] },
                            { "thing": "Grass", "x": 224, "y": 320, "width": 40, "height": 32 },
                            { "thing": "Stump", "x": 264, "y": 320, "height": 32 },
                            { "thing": "PlantLarge", "x": 128, "y": 328 },
                            { "thing": "PlantLarge", "y": 352, "width": 112, "height": 32 },
                            { "thing": "Stump", "x": 112, "y": 352, "height": 32 },
                            { "thing": "Stump", "x": 152, "y": 352, "height": 32 },
                            { "thing": "PlantLarge", "x": 160, "y": 352, "width": 112, "height": 32 },
                            { "thing": "BugCatcher", "x": 160, "y": 368, "direction": 2, "directionPreferred": 2, "dialog": ["I cam here with some friends!", "They're out for %%%%%%%POKEMON%%%%%%% fights!"] },
                            { "thing": "Sign", "x": 144, "y": 360, "forest": true, "dialog": ["TRAINER TIPS", "Weaken %%%%%%%POKEMON%%%%%%% before attempting capture!", "When healthy, they may escape!"] },
                            { "thing": "GroundArrow", "x": 132, "y": 368, "width": 8 },
                            { "thing": "HiddenTransporter", "x": 120, "y": 376, "width": 32, "directionRequired": 2, "transport": "Gate South Door North" }
                        ]
                    },
                    "Gate South": {
                        "allowCycling": false,
                        "width": 80,
                        "height": 64,
                        "theme": "Pewter City",
                        "invisibleWallBorders": true,
                        "creation": [
                            { "thing": "WallIndoorFancyWithDarkBottom", "width": 40 },
                            { "thing": "InvisibleWall", "width": 40 },
                            { "thing": "Door", "x": 40, "indoor": true, "transport": "Forest Bottom", "entrance": "Gate South Door North" },
                            { "thing": "WallIndoorFancyWithDarkBottom", "x": 48, "width": 32 },
                            { "thing": "InvisibleWall", "x": 48, "width": 32 },
                            { "thing": "FloorCheckered", "y": 8, "width": 80, "height": 56 },
                            { "thing": "PottedPalmTree", "y": 16, "height": 48 },
                            { "thing": "Table1x2", "x": 48, "y": 16 },
                            { "thing": "Table1x2", "x": 64, "y": 16 },
                            { "thing": "PottedPalmTree", "x": 72, "y": 16, "height": 48 },
                            { "thing": "Table1x2", "x": 48, "y": 40 },
                            { "thing": "Table1x2", "x": 64, "y": 40 },
                            { "thing": "Lady", "x": 64, "y": 32, "direction": 3, "dialog": "Are you going to VIRIDIAN FOREST? Be careful, it's a natural maze!" },
                            { "thing": "LittleGirl", "x": 16, "y": 40, "direction": 0, "roaming": true, "roamingDirections": [0, 2], "dialog": "RATTATA may be small, but its bite is wicked! Did you get one?" },
                            { "thing": "Doormat", "x": 32, "y": 56, "width": 16, "entrance": "Gate South Door South" },
                            { "thing": "HiddenTransporter", "x": 32, "y": 56, "width": 16, "directionRequired": 2, "transport": { "map": "Route 2", "location": "Viridian Forest Bottom" } }
                        ]
                    }
                }
            };
        })(MapsLibrary = Settings.MapsLibrary || (Settings.MapsLibrary = {}));
    })(Settings = FullScreenPokemon.Settings || (FullScreenPokemon.Settings = {}));
})(FullScreenPokemon || (FullScreenPokemon = {}));
var FullScreenPokemon;
(function (FullScreenPokemon) {
    var Settings;
    (function (Settings) {
        var PalletTown = Settings.MapsLibrary.PalletTown;
        var PewterCity = Settings.MapsLibrary.PewterCity;
        var Route1 = Settings.MapsLibrary.Route1;
        var Route2 = Settings.MapsLibrary.Route2;
        var Route21 = Settings.MapsLibrary.Route21;
        var Route22 = Settings.MapsLibrary.Route22;
        var ViridianCity = Settings.MapsLibrary.ViridianCity;
        var ViridianForest = Settings.MapsLibrary.ViridianForest;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateAudioSettings() {
            "use strict";
            return {
                directory: "Sounds",
                fileTypes: ["mp3"],
                library: {
                    Sounds: [
                        "Menu Bleep",
                        "Open Pause Menu"
                    ],
                    Themes: [
                        "Battle Gym Leader",
                        "Battle Trainer",
                        "Battle Wild Pokemon",
                        "Bill Origin from Cerulean",
                        "Casino",
                        "Celadon City",
                        "Cerulean City",
                        "Cerulean from Mount Moon",
                        "Cinnabor Island",
                        "Cycling",
                        "Ending",
                        "Evolution",
                        "Guide",
                        "Gym",
                        "Into the Hall",
                        "Item Fanfare",
                        "Jigglypuff Song",
                        "Last Battle Rival",
                        "Lavender Town from Vermilion",
                        "Lavender Town",
                        "Level Up Fanfare",
                        "Mt Moon Cave",
                        "Oak Research Lab",
                        "Ocean",
                        "Opening Part 1",
                        "Opening Part 2",
                        "Pallet Town",
                        "Pewter City",
                        "PokeCenter",
                        "Pokemon Capture Fanfare",
                        "Pokemon Fanfare 1",
                        "Pokemon Fanfare 2",
                        "Pokemon Mansion",
                        "Pokemon Received Fanfare",
                        "Pokemon Recovery",
                        "Pokemon Tower",
                        "Professor Oak",
                        "Rival Appears",
                        "St Anne",
                        "Sylph Company",
                        "Team Rocket Hideout",
                        "The Last Road",
                        "Trainer Appears Bad Guy",
                        "Trainer Appears Boy",
                        "Trainer Appears Girl",
                        "Vermilion City",
                        "Victory Gym Leader",
                        "Victory Trainer",
                        "Victory Wild Pokemon",
                        "Viridian City from Pallet Town",
                        "Viridian Forest"
                    ]
                }
            };
        }
        Settings.GenerateAudioSettings = GenerateAudioSettings;
        function GenerateBattlesSettings() {
            "use strict";
            return {
                menuNames: {
                    battle: "Battle",
                    battleDisplayInitial: "BattleDisplayInitial",
                    generalText: "GeneralText",
                    player: "BattleOptions"
                },
                backgroundType: "DirtWhite",
                defaults: {
                    exitDialog: "Got away safely!",
                    textStart: [
                        "A wild ".split(""),
                        " appeared!".split("")
                    ],
                    textEntry: [
                        "Go! ".split(""),
                        "!".split("")
                    ],
                    textOpponentSendOut: [
                        "".split(""),
                        " sent out ".split(""),
                        "!".split("")
                    ],
                    textPlayerSendOut: [
                        "Go! ".split(""),
                        "!".split("")
                    ]
                },
                positions: {
                    player: {
                        left: 4,
                        top: 20
                    },
                    opponent: {
                        left: 52,
                        top: 8
                    }
                }
            };
        }
        Settings.GenerateBattlesSettings = GenerateBattlesSettings;
        function GenerateCollisionsSettings() {
            "use strict";
            return {
                groupNames: ["Solid", "Character"],
                keyGroupName: "groupType",
                keyTypeName: "title",
                globalCheckGenerators: {
                    Character: FullScreenPokemon.Collisions.prototype.generateCanThingCollide,
                    Solid: FullScreenPokemon.Collisions.prototype.generateCanThingCollide
                },
                hitCheckGenerators: {
                    Character: {
                        Character: FullScreenPokemon.Collisions.prototype.generateIsCharacterTouchingCharacter,
                        Solid: FullScreenPokemon.Collisions.prototype.generateIsCharacterTouchingSolid
                    }
                },
                hitCallbackGenerators: {
                    Character: {
                        Solid: FullScreenPokemon.Collisions.prototype.generateHitCharacterThing,
                        Character: FullScreenPokemon.Collisions.prototype.generateHitCharacterThing
                    }
                }
            };
        }
        Settings.GenerateCollisionsSettings = GenerateCollisionsSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateDevicesSettings() {
            "use strict";
            return {
                triggers: {
                    a: {
                        trigger: "a"
                    },
                    b: {
                        trigger: "b"
                    },
                    dpadUp: {
                        trigger: "up"
                    },
                    dpadDown: {
                        trigger: "down"
                    },
                    dpadLeft: {
                        trigger: "left"
                    },
                    dpadRight: {
                        trigger: "right"
                    },
                    select: {
                        trigger: "pause"
                    },
                    start: {
                        trigger: "pause"
                    },
                    leftJoystick: {
                        x: {
                            negative: "left",
                            positive: "right"
                        },
                        y: {
                            negative: "up",
                            positive: "down"
                        }
                    },
                    rightJoystick: {
                        x: {
                            negative: "left",
                            positive: "right"
                        },
                        y: {
                            negative: "up",
                            positive: "down"
                        }
                    }
                },
                aliases: {
                    on: "onkeydown",
                    off: "onkeyup"
                }
            };
        }
        Settings.GenerateDevicesSettings = GenerateDevicesSettings;
        function GenerateEditorSettings() {
            "use strict";
            return {
                blocksize: FullScreenPokemon.Unitsize * 4,
                mapDefault: {
                    name: "New Map",
                    locations: {
                        StartGame: {}
                    },
                    areas: [
                        {
                            setting: "Blank",
                            creation: [
                                { location: "StartGame" }
                            ]
                        }
                    ]
                },
                mapEntryDefault: undefined,
                mapSettingDefault: "Blank",
                prethings: {
                    Text: {},
                    Characters: {},
                    Solids: {},
                    Scenery: {},
                    Terrain: {}
                },
                thingGroups: ["Character", "Solid", "Scenery"],
                thingKeys: undefined,
                things: {},
                macros: {}
            };
        }
        Settings.GenerateEditorSettings = GenerateEditorSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateEventsSettings() {
            "use strict";
            return {
                keyOnClassCycleStart: "onThingAdd",
                keyDoClassCycleStart: "placed",
                keyCycleCheckValidity: "alive",
                timingDefault: 9
            };
        }
        Settings.GenerateEventsSettings = GenerateEventsSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateGeneratorSettings() {
            "use strict";
            return {
                possibilities: {}
            };
        }
        Settings.GenerateGeneratorSettings = GenerateGeneratorSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateGroupsSettings() {
            "use strict";
            return {
                groupNames: ["Solid", "Character", "Scenery", "Terrain", "Text", "Thing"],
                groupTypes: {
                    Solid: "Array",
                    Character: "Array",
                    Scenery: "Array",
                    Terrain: "Array",
                    Text: "Array",
                    Thing: "Object"
                }
            };
        }
        Settings.GenerateGroupsSettings = GenerateGroupsSettings;
        function GenerateInputSettings() {
            "use strict";
            return {
                InputWritrArgs: {
                    aliases: {
                        // Keyboard aliases
                        left: [65, 37],
                        right: [68, 39],
                        up: [87, 38],
                        down: [83, 40],
                        a: [90, 13],
                        b: [88, 8],
                        pause: [80, 27],
                        select: [17, 16],
                        // Mouse aliases
                        rightclick: [3]
                    },
                    triggers: {
                        onkeydown: {
                            left: FullScreenPokemon.Inputs.prototype.keyDownLeft,
                            right: FullScreenPokemon.Inputs.prototype.keyDownRight,
                            up: FullScreenPokemon.Inputs.prototype.keyDownUp,
                            down: FullScreenPokemon.Inputs.prototype.keyDownDown,
                            a: FullScreenPokemon.Inputs.prototype.keyDownA,
                            b: FullScreenPokemon.Inputs.prototype.keyDownB,
                            pause: FullScreenPokemon.Inputs.prototype.keyDownPause,
                            mute: FullScreenPokemon.Inputs.prototype.keyDownMute,
                            select: FullScreenPokemon.Inputs.prototype.keyDownSelect
                        },
                        onkeyup: {
                            left: FullScreenPokemon.Inputs.prototype.keyUpLeft,
                            right: FullScreenPokemon.Inputs.prototype.keyUpRight,
                            up: FullScreenPokemon.Inputs.prototype.keyUpUp,
                            down: FullScreenPokemon.Inputs.prototype.keyUpDown,
                            a: FullScreenPokemon.Inputs.prototype.keyUpA,
                            b: FullScreenPokemon.Inputs.prototype.keyUpB,
                            pause: FullScreenPokemon.Inputs.prototype.keyUpPause
                        },
                        onmousedown: {
                            rightclick: FullScreenPokemon.Inputs.prototype.mouseDownRight
                        },
                        oncontextmenu: {},
                        ondevicemotion: {}
                    }
                }
            };
        }
        Settings.GenerateInputSettings = GenerateInputSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateItemsSettings() {
            "use strict";
            return {
                allowAutoSave: true,
                autoSave: false,
                containersArguments: undefined,
                defaults: {
                    storeLocally: {
                        value: true
                    }
                },
                prefix: "FullScreenPokemon::",
                values: {
                    area: {
                        valueDefault: ""
                    },
                    badges: {
                        valueDefault: {
                            Boulder: false,
                            Cascade: false,
                            Thunder: false,
                            Rainbow: false,
                            Soul: false,
                            Marsh: false,
                            Volcano: false,
                            Earth: false
                        }
                    },
                    gameStarted: {
                        valueDefault: false
                    },
                    hasPokedex: {
                        valueDefault: false
                    },
                    items: {
                        valueDefault: []
                    },
                    lastPokecenter: {
                        valueDefault: {
                            map: "Pallet Town",
                            location: "Player's House Door"
                        }
                    },
                    location: {
                        valueDefault: ""
                    },
                    map: {
                        valueDefault: ""
                    },
                    money: {
                        valueDefault: 0,
                        minimum: 0
                    },
                    name: {},
                    nameRival: {},
                    Pokedex: {
                        valueDefault: {}
                    },
                    PokemonInParty: {
                        valueDefault: []
                    },
                    PokemonInPC: {
                        valueDefault: []
                    },
                    starter: {},
                    starterRival: {},
                    time: {
                        valueDefault: 0
                    }
                }
            };
        }
        Settings.GenerateItemsSettings = GenerateItemsSettings;
        function GenerateMapsSettings() {
            "use strict";
            return {
                mapDefault: "Blank",
                locationDefault: "Black",
                groupTypes: ["Text", "Character", "Solid", "Scenery", "Terrain", "Thing"],
                requireEntrance: true,
                screenAttributes: [
                    "allowCycling"
                ],
                screenVariables: {
                    boundaries: FullScreenPokemon.Scrolling.prototype.getAreaBoundariesReal,
                    scrollability: FullScreenPokemon.Scrolling.prototype.getScreenScrollability
                },
                onSpawn: FullScreenPokemon.Maps.prototype.addPreThing,
                afterAdd: FullScreenPokemon.Maps.prototype.addAfter,
                macros: {
                    Checkered: FullScreenPokemon.Macros.prototype.macroCheckered,
                    Water: FullScreenPokemon.Macros.prototype.macroWater,
                    House: FullScreenPokemon.Macros.prototype.macroHouse,
                    HouseLarge: FullScreenPokemon.Macros.prototype.macroHouseLarge,
                    Building: FullScreenPokemon.Macros.prototype.macroBuilding,
                    Gym: FullScreenPokemon.Macros.prototype.macroGym,
                    Mountain: FullScreenPokemon.Macros.prototype.macroMountain,
                    PokeCenter: FullScreenPokemon.Macros.prototype.macroPokeCenter,
                    PokeMart: FullScreenPokemon.Macros.prototype.macroPokeMart
                },
                entrances: {
                    Blank: FullScreenPokemon.Maps.prototype.entranceBlank,
                    Normal: FullScreenPokemon.Maps.prototype.entranceNormal
                },
                library: {
                    Blank: {
                        name: "Blank",
                        locationDefault: "Black",
                        locations: {
                            Black: {
                                area: "Black",
                                entry: "Blank"
                            },
                            White: {
                                area: "White",
                                entry: "Blank"
                            }
                        },
                        areas: {
                            Black: {
                                creation: []
                            },
                            White: {
                                background: "white",
                                creation: []
                            }
                        }
                    },
                    "Pallet Town": PalletTown,
                    "Pewter City": PewterCity,
                    "Route 1": Route1,
                    "Route 2": Route2,
                    "Route 21": Route21,
                    "Route 22": Route22,
                    "Viridian City": ViridianCity,
                    "Viridian Forest": ViridianForest
                }
            };
        }
        Settings.GenerateMapsSettings = GenerateMapsSettings;
        /* tslint:disable:max-line-length */
        /* tslint:disable object-literal-key-quotes */
        function GenerateMathSettings() {
            "use strict";
            return {
                "equations": {
                    "averageLevel": function (constants, equations, actors) {
                        var average = 0;
                        for (var i = 0; i < actors.length; i += 1) {
                            average += actors[i].level;
                        }
                        return Math.round(average / actors.length);
                    },
                    "speedCycling": function (constants, equations, thing) {
                        return thing.speed * 2;
                    },
                    "speedWalking": function (constants, equations, thing) {
                        return Math.round(8 * FullScreenPokemon.Unitsize / thing.speed);
                    },
                    "newPokemon": function (constants, equations, title, level, moves, iv, ev) {
                        var statisticNames = constants.statisticNames;
                        var pokemon = {
                            "title": title,
                            "nickname": title,
                            "level": level || 1,
                            "moves": moves || this.compute("newPokemonMoves", title, level || 1),
                            "types": constants.pokemon[title.join("")].types,
                            "status": "",
                            "IV": iv || this.compute("newPokemonIVs"),
                            "EV": ev || this.compute("newPokemonEVs"),
                            "experience": this.compute("newPokemonExperience", title, level || 1)
                        };
                        for (var _i = 0, statisticNames_1 = statisticNames; _i < statisticNames_1.length; _i++) {
                            var statistic = statisticNames_1[_i];
                            pokemon[statistic] = this.compute("pokemonStatistic", pokemon, statistic);
                            pokemon[statistic + "Normal"] = pokemon[statistic];
                        }
                        return pokemon;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/XXXXXXX_(Pok%C3%A9mon)/Generation_I_learnset
                    "newPokemonMoves": function (constants, equations, title, level) {
                        var possibilities = constants.pokemon[title.join("")].moves.natural;
                        var output = [];
                        var move;
                        var newMove;
                        var end;
                        for (end = 0; end < possibilities.length; end += 1) {
                            if (possibilities[end].level > level) {
                                break;
                            }
                        }
                        for (var i = Math.max(end - 4, 0); i < end; i += 1) {
                            move = possibilities[i];
                            newMove = {
                                title: move.move,
                                remaining: constants.moves[move.move].PP,
                                uses: constants.moves[move.move].PP
                            };
                            output.push(newMove);
                        }
                        return output;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Individual_values
                    "newPokemonIVs": function (constants, equations) {
                        var attack = constants.NumberMaker.randomIntWithin(0, 15);
                        var defense = constants.NumberMaker.randomIntWithin(0, 15);
                        var speed = constants.NumberMaker.randomIntWithin(0, 15);
                        var special = constants.NumberMaker.randomIntWithin(0, 15);
                        var output = {
                            "Attack": attack,
                            "Defense": defense,
                            "Speed": speed,
                            "Special": special
                        };
                        output.HP = (8 * (attack % 2)
                            + 4 * (defense % 2)
                            + 2 * (speed % 2)
                            + (special % 2));
                        return output;
                    },
                    "newPokemonEVs": function (constants, equations) {
                        return {
                            "Attack": 0,
                            "Defense": 0,
                            "Speed": 0,
                            "Special": 0
                        };
                    },
                    "newPokemonExperience": function (constants, equations, title, level) {
                        return {
                            current: this.compute("experienceStarting", title, level),
                            next: this.compute("experienceStarting", title, level + 1)
                        };
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Individual_values
                    // Note: the page mentions rounding errors... 
                    "pokemonStatistic": function (constants, equations, pokemon, statistic) {
                        var topExtra = 0;
                        var added = 5;
                        var base = constants.pokemon[pokemon.title.join("")][statistic];
                        var iv = pokemon.IV[statistic] || 0;
                        var ev = pokemon.EV[statistic] || 0;
                        var level = pokemon.level;
                        if (statistic === "HP") {
                            topExtra = 50;
                            added = 10;
                        }
                        var numerator = (iv + base + (Math.sqrt(ev) / 8) + topExtra) * level;
                        return (numerator / 50 + added) | 0;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Tall_grass
                    "doesGrassEncounterHappen": function (constants, equations, grass) {
                        return constants.NumberMaker.randomBooleanFraction(grass.rarity, 187.5);
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Catch_rate#Capture_method_.28Generation_I.29
                    "canCatchPokemon": function (constants, equations, pokemon, ball) {
                        // 1. If a Master Ball is used, the Pokemon is caught.
                        if (ball.type === "Master") {
                            return true;
                        }
                        // 2. Generate a random number, N, depending on the type of ball used.
                        var n = constants.NumberMaker.randomInt(ball.probabilityMax);
                        // 3. The Pokemon is caught if...
                        if (pokemon.status) {
                            if (n < 25) {
                                if (constants.statuses.probability25[pokemon.status]) {
                                    return true;
                                }
                            }
                            else if (n < 12) {
                                if (constants.statuses.probability12[pokemon.status]) {
                                    return true;
                                }
                            }
                        }
                        // 4. Otherwise, if N minus the status value is greater than the Pokemon's catch rate, the Pokemon breaks free.
                        if (n - constants.statuses.levels[pokemon.status] > pokemon.catchRate) {
                            return false;
                        }
                        // 5. If not, generate a random value, M, between 0 and 255.
                        var m = constants.NumberMaker.randomInt(255);
                        // 6. Calculate f.
                        var f = Math.max(Math.min((pokemon.HPNormal * 255 * 4) | 0 / (pokemon.HP * ball.rate) | 0, 255), 1);
                        // 7. If f is greater than or equal to M, the Pokemon is caught. Otherwise, the Pokemon breaks free.
                        return f > m;
                    },
                    // @todo Add functionality.
                    "canLandFish": function (constants, equations) {
                        return true;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Escape#Generation_I_and_II
                    "canEscapePokemon": function (constants, equations, pokemon, enemy, battleInfo) {
                        var a = pokemon.Speed;
                        var b = (enemy.Speed / 4) % 256;
                        var c = battleInfo.currentEscapeAttempts;
                        var f = (a * 32) / b + 30 * c;
                        if (f > 255 || b === 0) {
                            return true;
                        }
                        return constants.NumberMaker.randomInt(256) < f;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Catch_rate#Capture_method_.28Generation_I.29
                    "numBallShakes": function (constants, equations, pokemon, ball) {
                        // 1. Calculate d.
                        var d = pokemon.catchRate * 100 / ball.rate;
                        // 2. If d is greater than or equal to 256, the ball shakes three times before the Pokemon breaks free.
                        if (d >= 256) {
                            return 3;
                        }
                        // 3. If not, calculate x = d * f / 255 + s, where s is 10 if the Pokemon is asleep or frozen or 5 if it is paralyzed, poisoned, or burned.
                        var f = Math.max(Math.min((pokemon.HPNormal * 255 * 4) | 0 / (pokemon.HP * ball.rate) | 0, 255), 1);
                        var x = d * f / 255 + constants.statuses.shaking[pokemon.status];
                        // 4. If... 
                        if (x < 10) {
                            return 0;
                        }
                        // x < 30: the Ball shakes once before the Pokemon breaks free.
                        if (x < 30) {
                            return 1;
                        }
                        // x < 70: the Ball shakes twice before the Pokemon breaks free.
                        if (x < 70) {
                            return 2;
                        }
                        // Otherwise, the Ball shakes three times before the Pokemon breaks free.
                        return 3;
                    },
                    // http://wiki.pokemonspeedruns.com/index.php/Pok%C3%A9mon_Red/Blue/Yellow_Trainer_AI
                    // TO DO: Also filter for moves with > 0 remaining remaining...
                    "opponentMove": function (constants, equations, player, opponent) {
                        var possibilities = opponent.selectedActor.moves.map(function (move) {
                            return {
                                "move": move.title,
                                "priority": 10
                            };
                        });
                        // Wild Pokemon just choose randomly
                        if (opponent.category === "Wild") {
                            return constants.NumberMaker.randomArrayMember(possibilities).move;
                        }
                        // Modification 1: Do not use a move that only statuses (e.g. Thunder Wave) if the player's pokémon already has a status.
                        if (player.selectedActor.status && !opponent.dumb) {
                            for (var _i = 0, possibilities_1 = possibilities; _i < possibilities_1.length; _i++) {
                                var possibility = possibilities_1[_i];
                                if (this.compute("moveOnlyStatuses", possibility.move)) {
                                    possibility.priority += 5;
                                }
                            }
                        }
                        // Modification 2: On the second turn the pokémon is out, prefer a move with one of the following effects...
                        if (this.compute("pokemonMatchesTypes", opponent, constants.battleModifications["Turn 2"])) {
                            for (var _a = 0, possibilities_2 = possibilities; _a < possibilities_2.length; _a++) {
                                var possibility = possibilities_2[_a];
                                this.compute("applyMoveEffectPriority", possibility, constants.battleModifications["Turn 2"], player.selectedActor, 1);
                            }
                        }
                        // Modification 3 (Good AI): Prefer a move that is super effective. Do not use moves that are not very effective as long as there is an alternative.
                        if (this.compute("pokemonMatchesTypes", opponent, constants.battleModifications["Good AI"])) {
                            for (var i = 0; i < possibilities.length; i += 1) {
                                this.compute("applyMoveEffectPriority", possibilities[i], constants.battleModifications["Good AI"], player.selectedActor, 1);
                            }
                        }
                        // The AI uses rejection sampling on the four moves with ratio 63:64:63:66, with only the moves that are most favored after applying the modifications being acceptable.
                        var lowest = possibilities[0].priority;
                        if (possibilities.length > 1) {
                            for (var i = 1; i < possibilities.length; i += 1) {
                                if (possibilities[i].priority < lowest) {
                                    lowest = possibilities[i].priority;
                                }
                            }
                            possibilities = possibilities.filter(function (possibility) {
                                return possibility.priority === lowest;
                            });
                        }
                        return constants.NumberMaker.randomArrayMember(possibilities).move;
                    },
                    "pokemonMatchesTypes": function (constants, equations, pokemon, types) {
                        for (var i = 0; i < types.length; i += 1) {
                            if (pokemon.types.indexOf(types[i]) !== -1) {
                                return true;
                            }
                        }
                        return false;
                    },
                    "moveOnlyStatuses": function (constants, equations, move) {
                        return move.damage === "Non-Damaging" && move.effect === "Status";
                    },
                    "applyMoveEffectPriority": function (constants, equations, possibility, modification, target, amount) {
                        var preferences = modification.preferences;
                        var move = constants.moves[possibility.move];
                        for (var i = 0; i < preferences.length; i += 1) {
                            var preference = preferences[i];
                            switch (preference[0]) {
                                // ["Move", String]
                                // Favorable match
                                case "Move":
                                    if (possibility.move === preference[1]) {
                                        possibility.priority -= amount;
                                        return;
                                    }
                                    break;
                                // ["Raise", String, Number]
                                // Favorable match
                                case "Raise":
                                    if (move.effect === "Raise"
                                        && move.raise === preference[1]
                                        && move.amount === preference[2]) {
                                        possibility.priority -= amount;
                                        return;
                                    }
                                    break;
                                // ["Lower", String, Number]
                                // Favorable match
                                case "Lower":
                                    if (move.effect === "Lower"
                                        && move.lower === preference[1]
                                        && move.amount === preference[2]) {
                                        possibility.priority -= amount;
                                        return;
                                    }
                                    break;
                                // ["Super", String, String]
                                // Favorable match
                                case "Super":
                                    if (move.damage !== "Non-Damaging"
                                        && move.type === preference[0]
                                        && target.types.indexOf(preference[1]) !== -1) {
                                        possibility.priority -= amount;
                                        return;
                                    }
                                    break;
                                // ["Weak", String, String]
                                // Unfavorable match
                                case "Weak":
                                    if (move.damage !== "Non-Damaging"
                                        && move.type === preference[0]
                                        && target.types.indexOf(preference[1]) !== -1) {
                                        possibility.priority += amount;
                                        return;
                                    }
                                    break;
                                // By default, do nothing
                                default:
                                    break;
                            }
                        }
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Priority
                    // TO DO: Account for items, switching, etc.
                    // TO DO: Factor in spec differences from paralyze, etc.
                    "playerMovesFirst": function (constants, equations, player, choicePlayer, opponent, choiceOpponent) {
                        var movePlayer = constants.moves[choicePlayer];
                        var moveOpponent = constants.moves[choiceOpponent];
                        if (movePlayer.priority === moveOpponent.priority) {
                            return player.selectedActor.Speed > opponent.selectedActor.Speed;
                        }
                        return movePlayer.priority > moveOpponent.priority;
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Damage#Damage_formula
                    // http://bulbapedia.bulbagarden.net/wiki/Critical_hit
                    // TO DO: Factor in spec differences from burns, etc.
                    "damage": function (constants, equations, move, attacker, defender) {
                        var base = constants.moves[move].power;
                        // A base attack that's not numeric means no damage, no matter what
                        if (!base || isNaN(base)) {
                            return 0;
                        }
                        // Don't bother calculating infinite damage: it's going to be infinite
                        if (base === Infinity) {
                            return Infinity;
                        }
                        var critical = this.compute("criticalHit", move, attacker);
                        var level = attacker.level * Number(critical);
                        var attack = attacker.Attack;
                        var defense = defender.Defense;
                        var modifier = this.compute("damageModifier", move, critical, attacker, defender);
                        return Math.round(Math.max(((((2 * level + 10) / 250) * (attack / defense) * base + 2) | 0) * modifier, 1));
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Damage#Damage_formula
                    // http://bulbapedia.bulbagarden.net/wiki/Critical_hit
                    "damageModifier": function (constants, equations, move, critical, attacker, defender) {
                        var stab = attacker.types.indexOf(move.type) !== -1 ? 1.5 : 1;
                        var type = this.compute("typeEffectiveness", move, defender);
                        return stab * type * constants.NumberMaker.randomWithin(.85, 1);
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Critical_hit
                    "criticalHit": function (constants, equations, move, attacker) {
                        var moveInfo = constants.moves[move];
                        var baseSpeed = constants.pokemon[attacker.title.join("")].Speed;
                        var denominator = 512;
                        // Moves with a high critical-hit ratio, such as Slash, are eight times more likely to land a critical hit, resulting in a probability of BaseSpeed / 64.
                        if (moveInfo.criticalRaised) {
                            denominator /= 8;
                        }
                        // "Focus Energy and Dire Hit were intended to increase the critical hit rate, ..."
                        // In FullScreenPokemon, they work as intended! Fans who prefer the
                        // original behavior are free to fork the repo. As the original
                        // behavior is a glitch (and conflicts with creators' intentions),
                        // it is not duplicated here.
                        if (attacker.criticalHitProbability) {
                            denominator /= 4;
                        }
                        // As with move accuracy in the handheld games, if the probability of landing a critical hit would be 100%, it instead becomes 255/256 or about 99.6%.
                        return constants.NumberMaker.randomBooleanProbability(Math.max(baseSpeed / denominator, 255 / 256));
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Type/Type_chart#Generation_I
                    "typeEffectiveness": function (constants, equations, move, defender) {
                        var defenderTypes = constants.pokemon[defender.title.join("")].types;
                        var moveIndex = constants.types.indices[constants.moves[move].type];
                        var total = 1;
                        for (var i = 0; i < defenderTypes.length; i += 1) {
                            total *= constants.types.table[moveIndex][constants.types.indices[defenderTypes[i]]];
                        }
                        return total;
                    },
                    // http://m.bulbapedia.bulbagarden.net/wiki/Experience#Relation_to_level
                    // Wild Pokémon of any level will always have the base amount of experience required to reach that level when caught, as will Pokémon hatched from Eggs.
                    "experienceStarting": function (constants, equations, title, level) {
                        var reference = constants.pokemon[title.join("")];
                        // TODO: remove defaulting to mediumFast
                        switch (reference.experienceType) {
                            case "fast":
                                return (4 * Math.pow(level, 3)) / 5;
                            case "mediumSlow":
                                return ((6 / 5) * Math.pow(level, 3)
                                    - (15 * Math.pow(level, 2))
                                    + (100 * level)
                                    - 140);
                            case "slow":
                                return (5 * Math.pow(level, 3)) / 4;
                            // case "mediumFast":
                            default:
                                return Math.pow(level, 3);
                        }
                    },
                    // http://bulbapedia.bulbagarden.net/wiki/Experience#Gain_formula
                    "experienceGained": function (constants, equations, player, opponent) {
                        // a is equal to 1 if the fainted Pokemon is wild, or 1.5 if the fainted Pokemon is owned by a Trainer
                        var a = opponent.category === "Trainer" ? 1.5 : 1;
                        // b is the base experience yield of the fainted Pokemon's species
                        var b = 64; // (Bulbasaur) TO DO: add this in
                        // lf is the level of the fainted Pokemon
                        var lf = opponent.selectedActor.level;
                        // s is equal to (in Gen I), if Exp. All is not in the player's Bag...
                        // TO DO: Account for modifies like Exp. All
                        var s = 1;
                        // t is equal to 1 if the winning Pokemon's curent owner is its OT, or 1.5 if the Pokemon was gained in a domestic trade
                        var t = player.selectedActor.traded ? 1.5 : 1;
                        return (((a * t * b * lf) | 0) / ((7 * s) | 0)) | 0;
                    },
                    "widthHealthBar": function (constants, equations, widthFullBar, hp, hpNormal) {
                        return (widthFullBar - 1) * hp / hpNormal;
                    }
                },
                "constants": {
                    "statisticNames": ["HP", "Attack", "Defense", "Speed", "Special"],
                    "statisticNamesDisplayed": ["Attack", "Defense", "Speed", "Special"],
                    "unitsize": FullScreenPokemon.Unitsize,
                    "statuses": {
                        "names": ["Sleep", "Freeze", "Paralyze", "Burn", "Poison"],
                        "probability25": {
                            "Sleep": true,
                            "Freeze": true
                        },
                        "probability12": {
                            "Paralyze": true,
                            "Burn": true,
                            "Poison": true
                        },
                        // where to get?
                        "levels": {
                            "Normal": -1,
                            "Sleep": -1,
                            "Freeze": -1,
                            "Paralyze": -1,
                            "Burn": -1,
                            "Poison": -1
                        },
                        "shaking": {
                            "Normal": 0,
                            "Sleep": 10,
                            "Freeze": 10,
                            "Paralyze": 5,
                            "Burn": 5,
                            "Poison": 5
                        }
                    },
                    "townMapLocations": {
                        "Pallet Town": [18, 48],
                        "Pewter City": [18, 16],
                        "Serebii Islands": [18, 64],
                        "Viridian City": [18, 36]
                    },
                    /**
                     * @see http://bulbapedia.bulbagarden.net/wiki/Type/Type_chart#Generation_I
                     */
                    "types": {
                        "names": ["Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon"],
                        "indices": {
                            "Normal": 0,
                            "Fighting": 1,
                            "Flying": 2,
                            "Poison": 3,
                            "Ground": 4,
                            "Rock": 5,
                            "Bug": 6,
                            "Ghost": 7,
                            "Fire": 8,
                            "Water": 9,
                            "Grass": 10,
                            "Electric": 11,
                            "Psychic": 12,
                            "Ice": 13,
                            "Dragon": 14
                        },
                        "table": [
                            [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
                            [2.0, 1.0, 0.5, 0.5, 1.0, 2.0, 0.5, 0.0, 1.0, 1.0, 1.0, 1.0, 0.5, 2.0, 1.0],
                            [1.0, 2.0, 1.0, 1.0, 1.0, 0.5, 2.0, 1.0, 1.0, 1.0, 2.0, 0.5, 1.0, 1.0, 1.0],
                            [1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 2.0, 0.5, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0],
                            [1.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.5, 1.0, 2.0, 1.0, 0.5, 2.0, 1.0, 1.0, 1.0],
                            [1.0, 0.5, 2.0, 1.0, 0.5, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0],
                            [1.0, 0.5, 0.5, 2.0, 1.0, 1.0, 1.0, 0.5, 0.5, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0],
                            [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0],
                            [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 2.0, 1.0, 0.5, 0.5, 2.0, 1.0, 1.0, 2.0, 0.5],
                            [1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 0.5, 0.5, 1.0, 1.0, 1.0, 0.5],
                            [1.0, 1.0, 0.5, 0.5, 2.0, 2.0, 0.5, 1.0, 0.5, 2.0, 0.5, 1.0, 1.0, 1.0, 0.5],
                            [1.0, 1.0, 2.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.5, 0.5, 1.0, 1.0, 0.5],
                            [1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0],
                            [1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.5, 2.0, 1.0, 1.0, 0.5, 2.0],
                            [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0]
                        ]
                    },
                    /**
                     * @see http://www.smogon.com/dex/rb/pokemon/
                     */
                    "pokemon": {
                        "ABRA": {
                            "label": "Psi",
                            "sprite": "Water",
                            "info": [
                                "Using its ability to read minds, it will identify impending danger and TELEPORT to safety."
                            ],
                            "evolvesInto": "Kadabra",
                            "evolvesVia": "Level 16",
                            "number": 63,
                            "height": ["2", "11"],
                            "weight": 43,
                            "types": ["Psychic"],
                            "HP": 25,
                            "Attack": 20,
                            "Defense": 15,
                            "Special": 105,
                            "Speed": 90,
                            "moves": {
                                "natural": [{
                                        "move": "Teleport",
                                        "level": 1
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "AERODACTYL": {
                            "label": "Fossil",
                            "sprite": "Water",
                            "info": [
                                "A ferocious, prehistoric %%%%%%%POKEMON%%%%%%% that goes for the enemy's throat with its serrated saw-like fangs."
                            ],
                            "number": 142,
                            "height": ["5", "11"],
                            "weight": 130.1,
                            "types": ["Rock", "Flying"],
                            "HP": 80,
                            "Attack": 105,
                            "Defense": 65,
                            "Special": 60,
                            "Speed": 130,
                            "moves": {
                                "natural": [{
                                        "move": "Agility",
                                        "level": 1
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 33
                                    }, {
                                        "move": "Bite",
                                        "level": 38
                                    }, {
                                        "move": "Take Down",
                                        "level": 45
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 54
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [{
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ALAKAZAM": {
                            "label": "Psi",
                            "sprite": "Water",
                            "info": [
                                "Its brain can outperform a supercomputer. Its intelligence quotient is said to be 5,000."
                            ],
                            "number": 65,
                            "height": ["4", "11"],
                            "weight": 105.8,
                            "types": ["Psychic"],
                            "HP": 55,
                            "Attack": 50,
                            "Defense": 45,
                            "Special": 135,
                            "Speed": 120,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Teleport",
                                        "level": 1
                                    }, {
                                        "move": "Confusion",
                                        "level": 16
                                    }, {
                                        "move": "Disable",
                                        "level": 20
                                    }, {
                                        "move": "Psybeam",
                                        "level": 27
                                    }, {
                                        "move": "Recover",
                                        "level": 31
                                    }, {
                                        "move": "Psychic",
                                        "level": 38
                                    }, {
                                        "move": "Reflect",
                                        "level": 42
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ARBOK": {
                            "label": "Cobra",
                            "sprite": "Water",
                            "info": [
                                "It is rumored that the ferocious warning markings on its belly differ from area to area."
                            ],
                            "number": 24,
                            "height": ["11", "6"],
                            "weight": 143.3,
                            "types": ["Poison"],
                            "HP": 60,
                            "Attack": 85,
                            "Defense": 69,
                            "Special": 65,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 17
                                    }, {
                                        "move": "Glare",
                                        "level": 27
                                    }, {
                                        "move": "Screech",
                                        "level": 36
                                    }, {
                                        "move": "Acid",
                                        "level": 47
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ARCANINE": {
                            "label": "Legendary",
                            "sprite": "Water",
                            "info": [
                                "A %%%%%%%POKEMON%%%%%%% that has been admired since the past for its beauty. It runs agilely as if on wings."
                            ],
                            "number": 59,
                            "height": ["6", "3"],
                            "weight": 341.7,
                            "types": ["Fire"],
                            "HP": 90,
                            "Attack": 110,
                            "Defense": 80,
                            "Special": 100,
                            "Speed": 95,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Roar",
                                        "level": 1
                                    }, {
                                        "move": "Take Down",
                                        "level": 1
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ARTICUNO": {
                            "label": "Freeze",
                            "sprite": "Water",
                            "info": [
                                "A legendary bird %%%%%%%POKEMON%%%%%%% that is said to appear to doomed people who are lost in icy mountains."
                            ],
                            "number": 144,
                            "height": ["5", "7"],
                            "weight": 122.1,
                            "types": ["Ice", "Flying"],
                            "HP": 90,
                            "Attack": 85,
                            "Defense": 100,
                            "Special": 95,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ice Beam",
                                        "level": 1
                                    }, {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Blizzard",
                                        "level": 51
                                    }, {
                                        "move": "Agility",
                                        "level": 55
                                    }, {
                                        "move": "Mist",
                                        "level": 60
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "BEEDRILL": {
                            "label": "Poison Bee",
                            "sprite": "Water",
                            "info": [
                                "Flies at high speed and attacks using its large venomous stingers on its forelegs and tail."
                            ],
                            "number": 15,
                            "height": ["3", "3"],
                            "weight": 65,
                            "types": ["Bug", "Poison"],
                            "HP": 65,
                            "Attack": 90,
                            "Defense": 40,
                            "Special": 45,
                            "Speed": 75,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Fury Attack",
                                        "level": 1
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 12
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 16
                                    }, {
                                        "move": "Twineedle",
                                        "level": 20
                                    }, {
                                        "move": "Rage",
                                        "level": 25
                                    }, {
                                        "move": "Pin Missile",
                                        "level": 30
                                    }, {
                                        "move": "Agility",
                                        "level": 35
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }]
                            }
                        },
                        "BELLSPROUT": {
                            "label": "Flower",
                            "sprite": "Water",
                            "info": [
                                "A carnivorous %%%%%%%POKEMON%%%%%%% that traps and eats bugs. It uses its root feet to soak up needed moisture."
                            ],
                            "evolvesInto": "Weepinbell",
                            "evolvesVia": "Level 21",
                            "number": 69,
                            "height": ["2", "4"],
                            "weight": 8.8,
                            "types": ["Grass", "Poison"],
                            "HP": 50,
                            "Attack": 75,
                            "Defense": 35,
                            "Special": 70,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growth",
                                        "level": 1
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 18
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 21
                                    }, {
                                        "move": "Acid",
                                        "level": 26
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 33
                                    }, {
                                        "move": "Slam",
                                        "level": 42
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "BLASTOISE": {
                            "label": "Shellfish",
                            "sprite": "Water",
                            "info": [
                                "A brutal %%%%%%%POKEMON%%%%%%% with pressurized water jets on its shell. They are used for high speed tackles."
                            ],
                            "number": 9,
                            "height": ["5", "3"],
                            "weight": 188.5,
                            "types": ["Water"],
                            "HP": 79,
                            "Attack": 83,
                            "Defense": 100,
                            "Special": 85,
                            "Speed": 78,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Bubble",
                                        "level": 8
                                    }, {
                                        "move": "Water Gun",
                                        "level": 15
                                    }, {
                                        "move": "Bite",
                                        "level": 24
                                    }, {
                                        "move": "Withdraw",
                                        "level": 31
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 42
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 52
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "BULBASAUR": {
                            "label": "Seed",
                            "sprite": "Water",
                            "info": [
                                "A strange seed was planted on its back at birth.",
                                "The plant sprouts and grows with this %%%%%%%POKEMON%%%%%%%."
                            ],
                            "evolvesInto": "Ivysaur",
                            "evolvesVia": "Level 16",
                            "number": 1,
                            "height": ["2", "4"],
                            "weight": 15.2,
                            "types": ["Grass", "Poison"],
                            "HP": 45,
                            "Attack": 49,
                            "Defense": 49,
                            "Special": 65,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 7
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 20
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 27
                                    }, {
                                        "move": "Growth",
                                        "level": 34
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 41
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 48
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "BUTTERFREE": {
                            "label": "Butterfly",
                            "sprite": "Water",
                            "info": [
                                "In battle, it flaps its wings at high speed to release highly toxic dust into the air."
                            ],
                            "number": 12,
                            "height": ["3", "7"],
                            "weight": 70.5,
                            "types": ["Bug", "Flying"],
                            "HP": 60,
                            "Attack": 45,
                            "Defense": 50,
                            "Special": 90,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Confusion",
                                        "level": 12
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 16
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 17
                                    }, {
                                        "move": "Supersonic",
                                        "level": 21
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 26
                                    }, {
                                        "move": "Psybeam",
                                        "level": 32
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CATERPIE": {
                            "label": "Worm",
                            "sprite": "Water",
                            "info": [
                                "Its short feet are tipped with suction pads that enable it to tirelessly climb slopes and walls."
                            ],
                            "evolvesInto": "Metapod",
                            "evolvesVia": "Level 7",
                            "number": 10,
                            "height": ["1", "0"],
                            "weight": 6.4,
                            "types": ["Bug"],
                            "HP": 45,
                            "Attack": 30,
                            "Defense": 35,
                            "Special": 20,
                            "Speed": 45,
                            "moves": {
                                "natural": [{
                                        "move": "String Shot",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": []
                            }
                        },
                        "CHANSEY": {
                            "label": "Egg",
                            "sprite": "Water",
                            "info": [
                                "A rare and elusive %%%%%%%POKEMON%%%%%%% that is said to bring happiness to those who manage to get it."
                            ],
                            "evolvesInto": "Blissey",
                            "evolvesVia": "Happiness",
                            "number": 113,
                            "height": ["3", "7"],
                            "weight": 76.3,
                            "types": ["Normal"],
                            "HP": 250,
                            "Attack": 5,
                            "Defense": 5,
                            "Special": 35,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Double Slap",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Sing",
                                        "level": 24
                                    }, {
                                        "move": "Growl",
                                        "level": 30
                                    }, {
                                        "move": "Minimize",
                                        "level": 38
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 44
                                    }, {
                                        "move": "Light Screen",
                                        "level": 48
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 54
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Egg Bomb",
                                        "level": 37
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Soft-Boiled",
                                        "level": 41
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CHARIZARD": {
                            "label": "Flame",
                            "sprite": "Water",
                            "info": [
                                "Spits fire that is hot enough to melt boulders. Known to cause forest fires unintentionally."
                            ],
                            "number": 6,
                            "height": ["5", "7"],
                            "weight": 199.5,
                            "types": ["Fire", "Flying"],
                            "HP": 78,
                            "Attack": 84,
                            "Defense": 78,
                            "Special": 109,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Ember",
                                        "level": 9
                                    }, {
                                        "move": "Leer",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 36
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 46
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 55
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CHARMANDER": {
                            "label": "Lizard",
                            "sprite": "Water",
                            "info": [
                                "Obviously prefers hot places.",
                                "When it rains, steam is said to spout from the tip of its tail."
                            ],
                            "evolvesInto": "Charmeleon",
                            "evolvesVia": "Level 16",
                            "number": 4,
                            "height": ["2", "0"],
                            "weight": 18.7,
                            "types": ["Fire"],
                            "HP": 39,
                            "Attack": 52,
                            "Defense": 43,
                            "Special": 60,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Ember",
                                        "level": 9
                                    }, {
                                        "move": "Leer",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 22
                                    }, {
                                        "move": "Slash",
                                        "level": 30
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 38
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 46
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CHARMELEON": {
                            "label": "Flame",
                            "sprite": "Water",
                            "info": [
                                "When it swings its burning tail, it elevates the temperature to unbearably high levels."
                            ],
                            "evolvesInto": "Charizard",
                            "evolvesVia": "Level 36",
                            "number": 5,
                            "height": ["3", "7"],
                            "weight": 41.9,
                            "types": ["Fire"],
                            "HP": 58,
                            "Attack": 64,
                            "Defense": 58,
                            "Special": 80,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Ember",
                                        "level": 9
                                    }, {
                                        "move": "Leer",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 33
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 42
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 56
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CLEFABLE": {
                            "label": "Fairy",
                            "sprite": "Water",
                            "info": [
                                "A timid fairy %%%%%%%POKEMON%%%%%%% that is rarely seen. It will run and hide the moment it senses people."
                            ],
                            "number": 36,
                            "height": ["4", "3"],
                            "weight": 88.2,
                            "types": ["Fairy"],
                            "HP": 95,
                            "Attack": 70,
                            "Defense": 73,
                            "Special": 95,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Double Slap",
                                        "level": 1
                                    }, {
                                        "move": "Metronome",
                                        "level": 1
                                    }, {
                                        "move": "Minimize",
                                        "level": 1
                                    }, {
                                        "move": "Sing",
                                        "level": 1
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }]
                            }
                        },
                        "CLEFAIRY": {
                            "label": "Fairy",
                            "sprite": "Water",
                            "info": [
                                "Its magical and cute appeal has many admirers. It is rare and found only in certain areas."
                            ],
                            "evolvesInto": "Clefable",
                            "evolvesVia": "use Moon Stone",
                            "number": 35,
                            "height": ["2", "0"],
                            "weight": 16.5,
                            "types": ["Fairy"],
                            "HP": 70,
                            "Attack": 45,
                            "Defense": 48,
                            "Special": 60,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Sing",
                                        "level": 13
                                    }, {
                                        "move": "Double Slap",
                                        "level": 18
                                    }, {
                                        "move": "Minimize",
                                        "level": 24
                                    }, {
                                        "move": "Metronome",
                                        "level": 31
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 39
                                    }, {
                                        "move": "Light Screen",
                                        "level": 48
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "CLOYSTER": {
                            "label": "Bivalve",
                            "sprite": "Water",
                            "info": [
                                "When attacked, it launches its horns in quick volleys. Its innards have never been seen."
                            ],
                            "number": 91,
                            "height": ["4", "11"],
                            "weight": 292.1,
                            "types": ["Water", "Ice"],
                            "HP": 50,
                            "Attack": 95,
                            "Defense": 180,
                            "Special": 85,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Aurora Beam",
                                        "level": 1
                                    }, {
                                        "move": "Clamp",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 1
                                    }, {
                                        "move": "Withdraw",
                                        "level": 1
                                    }, {
                                        "move": "Spike Cannon",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }]
                            }
                        },
                        "CUBONE": {
                            "label": "Lonely",
                            "sprite": "Water",
                            "info": [
                                "Because it never removes its skull helmet, no one has ever seen this %%%%%%%POKEMON%%%%%%%'s real face."
                            ],
                            "evolvesInto": "Marowak",
                            "evolvesVia": "Level 28",
                            "number": 104,
                            "height": ["1", "4"],
                            "weight": 14.3,
                            "types": ["Ground"],
                            "HP": 50,
                            "Attack": 50,
                            "Defense": 95,
                            "Special": 40,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bone Club",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 25
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 31
                                    }, {
                                        "move": "Thrash",
                                        "level": 38
                                    }, {
                                        "move": "Bonemerang",
                                        "level": 43
                                    }, {
                                        "move": "Rage",
                                        "level": 46
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DEWGONG": {
                            "label": "Sea Lion",
                            "sprite": "Water",
                            "info": [
                                "Stores thermal energy in its body. Swims at a steady 8 knots even in intensely cold waters."
                            ],
                            "number": 87,
                            "height": ["5", "7"],
                            "weight": 264.6,
                            "types": ["Water", "Ice"],
                            "HP": 90,
                            "Attack": 70,
                            "Defense": 80,
                            "Special": 70,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Aurora Beam",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Headbutt",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 30
                                    }, {
                                        "move": "Aurora Beam",
                                        "level": 35
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Take Down",
                                        "level": 50
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 56
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DIGLETT": {
                            "label": "Mole",
                            "sprite": "Water",
                            "info": [
                                "Lives about one yard underground where it feeds on plant roots. It sometimes appears above ground."
                            ],
                            "evolvesInto": "Dugtrio",
                            "evolvesVia": "Level 26",
                            "number": 50,
                            "height": ["0", "8"],
                            "weight": 1.8,
                            "types": ["Ground"],
                            "HP": 10,
                            "Attack": 55,
                            "Defense": 25,
                            "Special": 35,
                            "Speed": 95,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 15
                                    }, {
                                        "move": "Dig",
                                        "level": 19
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 31
                                    }, {
                                        "move": "Earthquake",
                                        "level": 40
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 15
                                    }, {
                                        "move": "Dig",
                                        "level": 19
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 31
                                    }, {
                                        "move": "Earthquake",
                                        "level": 40
                                    }]
                            }
                        },
                        "DITTO": {
                            "label": "Transform",
                            "sprite": "Water",
                            "info": [
                                "Capable of copying an enemy's genetic code to instantly transform itself into a duplicate of the enemy."
                            ],
                            "number": 132,
                            "height": ["1", "0"],
                            "weight": 8.8,
                            "types": ["Normal"],
                            "HP": 48,
                            "Attack": 48,
                            "Defense": 48,
                            "Special": 48,
                            "Speed": 48,
                            "moves": {
                                "natural": [{
                                        "move": "Transform",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": []
                            }
                        },
                        "DODRIO": {
                            "label": "Triple Bird",
                            "sprite": "Water",
                            "info": [
                                "Uses its three brains to execute complex plans. While two heads sleep, one head stays awake."
                            ],
                            "number": 85,
                            "height": ["5", "11"],
                            "weight": 187.8,
                            "types": ["Normal", "Flying"],
                            "HP": 60,
                            "Attack": 110,
                            "Defense": 70,
                            "Special": 60,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Fury Attack",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 20
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 24
                                    }, {
                                        "move": "Drill Peck",
                                        "level": 30
                                    }, {
                                        "move": "Rage",
                                        "level": 39
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 45
                                    }, {
                                        "move": "Agility",
                                        "level": 51
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DODUO": {
                            "label": "Twin Bird",
                            "sprite": "Water",
                            "info": [
                                "A bird that makes up for its poor flying with its fast foot speed. Leaves giant footprints."
                            ],
                            "evolvesInto": "Dodrio",
                            "evolvesVia": "Level 31",
                            "number": 84,
                            "height": ["4", "7"],
                            "weight": 86.4,
                            "types": ["Normal", "Flying"],
                            "HP": 35,
                            "Attack": 85,
                            "Defense": 45,
                            "Special": 35,
                            "Speed": 75,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 20
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 24
                                    }, {
                                        "move": "Drill Peck",
                                        "level": 30
                                    }, {
                                        "move": "Rage",
                                        "level": 36
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 40
                                    }, {
                                        "move": "Agility",
                                        "level": 44
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [
                                    {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DRAGONAIR": {
                            "label": "Dragon",
                            "sprite": "Water",
                            "info": [
                                "A mystical %%%%%%%POKEMON%%%%%%% that exudes a gentle aura. Has the ability to change climate conditions."
                            ],
                            "evolvesInto": "Dragonite",
                            "evolvesVia": "Level 55",
                            "number": 148,
                            "height": ["13", "1"],
                            "weight": 36.4,
                            "types": ["Dragon"],
                            "HP": 61,
                            "Attack": 84,
                            "Defense": 65,
                            "Special": 70,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 10
                                    }, {
                                        "move": "Agility",
                                        "level": 20
                                    }, {
                                        "move": "Slam",
                                        "level": 35
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 45
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 55
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DRAGONITE": {
                            "label": "Dragon",
                            "sprite": "Water",
                            "info": [
                                "An extremely rarely seen marine %%%%%%%POKEMON%%%%%%%. Its intelligence is said to match that of humans."
                            ],
                            "number": 149,
                            "height": ["7", "3"],
                            "weight": 463,
                            "types": ["Dragon", "Flying"],
                            "HP": 91,
                            "Attack": 134,
                            "Defense": 95,
                            "Special": 100,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Agility",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 10
                                    }, {
                                        "move": "Agility",
                                        "level": 20
                                    }, {
                                        "move": "Slam",
                                        "level": 35
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 45
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 60
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DRATINI": {
                            "label": "Dragon",
                            "sprite": "Water",
                            "info": [
                                "Long considered a mythical %%%%%%%POKEMON%%%%%%% until recently when a small colony was found living underwater."
                            ],
                            "evolvesInto": "Dragonair",
                            "evolvesVia": "Level 30",
                            "number": 147,
                            "height": ["5", "11"],
                            "weight": 7.3,
                            "types": ["Dragon"],
                            "HP": 41,
                            "Attack": 64,
                            "Defense": 45,
                            "Special": 50,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 10
                                    }, {
                                        "move": "Agility",
                                        "level": 20
                                    }, {
                                        "move": "Slam",
                                        "level": 30
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 40
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 50
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DROWZEE": {
                            "label": "Hypnosis",
                            "sprite": "Water",
                            "info": [
                                "Puts enemies to sleep then eats their dreams. Occasionally gets sick from eating bad dreams."
                            ],
                            "evolvesInto": "Hypno",
                            "evolvesVia": "Level 26",
                            "number": 96,
                            "height": ["3", "3"],
                            "weight": 71.4,
                            "types": ["Psychic"],
                            "HP": 60,
                            "Attack": 48,
                            "Defense": 45,
                            "Special": 43,
                            "Speed": 42,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 12
                                    }, {
                                        "move": "Confusion",
                                        "level": 17
                                    }, {
                                        "move": "Headbutt",
                                        "level": 24
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 29
                                    }, {
                                        "move": "Psychic",
                                        "level": 32
                                    }, {
                                        "move": "Meditate",
                                        "level": 37
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 42
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "DUGTRIO": {
                            "label": "Mole",
                            "sprite": "Water",
                            "info": [
                                "A team of DIGLETT triplets. It triggers huge earthquakes by burrowing 60 miles underground."
                            ],
                            "number": 51,
                            "height": ["2", "4"],
                            "weight": 73.4,
                            "types": ["Ground"],
                            "HP": 35,
                            "Attack": 80,
                            "Defense": 50,
                            "Special": 50,
                            "Speed": 120,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Dig",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 15
                                    }, {
                                        "move": "Dig",
                                        "level": 19
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 35
                                    }, {
                                        "move": "Earthquake",
                                        "level": 47
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Dig",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 15
                                    }, {
                                        "move": "Dig",
                                        "level": 19
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 35
                                    }, {
                                        "move": "Earthquake",
                                        "level": 47
                                    }]
                            }
                        },
                        "EEVEE": {
                            "label": "Evolution",
                            "sprite": "Water",
                            "info": [
                                "Its genetic code is irregular. It may mutate if it is exposed to radiation from element STONEs."
                            ],
                            "evolvesInto": "Espeon",
                            "evolvesVia": "↗",
                            "number": 133,
                            "height": ["1", "0"],
                            "weight": 14.3,
                            "types": ["Normal"],
                            "HP": 55,
                            "Attack": 55,
                            "Defense": 50,
                            "Special": 45,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 27
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 31
                                    }, {
                                        "move": "Bite",
                                        "level": 37
                                    }, {
                                        "move": "Take Down",
                                        "level": 45
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 8
                                    }, {
                                        "move": "Growl",
                                        "level": 16
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 23
                                    }, {
                                        "move": "Bite",
                                        "level": 30
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 36
                                    }, {
                                        "move": "Take Down",
                                        "level": 42
                                    }]
                            }
                        },
                        "EKANS": {
                            "label": "Snake",
                            "sprite": "Water",
                            "info": [
                                "Moves silently and stealthily. Eats the eggs of birds, such as PIDGEY and SPEAROW, whole."
                            ],
                            "evolvesInto": "Arbok",
                            "evolvesVia": "Level 22",
                            "number": 23,
                            "height": ["6", "7"],
                            "weight": 15.2,
                            "types": ["Poison"],
                            "HP": 35,
                            "Attack": 60,
                            "Defense": 44,
                            "Special": 40,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 17
                                    }, {
                                        "move": "Glare",
                                        "level": 24
                                    }, {
                                        "move": "Screech",
                                        "level": 31
                                    }, {
                                        "move": "Acid",
                                        "level": 38
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ELECTABUZZ": {
                            "label": "Electric",
                            "sprite": "Water",
                            "info": [
                                "Normally found near power plants, they can wander away and cause major blackouts in cities."
                            ],
                            "evolvesInto": "Electivire",
                            "evolvesVia": "trade holdingElectrizer",
                            "number": 125,
                            "height": ["3", "7"],
                            "weight": 66.1,
                            "types": ["Electric"],
                            "HP": 65,
                            "Attack": 83,
                            "Defense": 57,
                            "Special": 95,
                            "Speed": 105,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 34
                                    }, {
                                        "move": "Screech",
                                        "level": 37
                                    }, {
                                        "move": "Thunder Punch",
                                        "level": 42
                                    }, {
                                        "move": "Light Screen",
                                        "level": 49
                                    }, {
                                        "move": "Thunder",
                                        "level": 54
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ELECTRODE": {
                            "label": "Ball",
                            "sprite": "Water",
                            "info": [
                                "It stores electric energy under very high pressure. It often explodes with little or no provocation."
                            ],
                            "number": 101,
                            "height": ["3", "11"],
                            "weight": 146.8,
                            "types": ["Electric"],
                            "HP": 60,
                            "Attack": 50,
                            "Defense": 70,
                            "Special": 80,
                            "Speed": 140,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Sonic Boom",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sonic Boom",
                                        "level": 17
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 22
                                    }, {
                                        "move": "Light Screen",
                                        "level": 29
                                    }, {
                                        "move": "Swift",
                                        "level": 40
                                    }, {
                                        "move": "Explosion",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [{
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "EXEGGCUTE": {
                            "label": "Egg",
                            "sprite": "Water",
                            "info": [
                                "Often mistaken for eggs. When disturbed, they quickly gather and attack in swarms."
                            ],
                            "evolvesInto": "Exeggutor",
                            "evolvesVia": "use Leaf Stone",
                            "number": 102,
                            "height": ["1", "4"],
                            "weight": 5.5,
                            "types": ["Grass", "Psychic"],
                            "HP": 60,
                            "Attack": 40,
                            "Defense": 80,
                            "Special": 60,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Barrage",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Reflect",
                                        "level": 25
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 28
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 32
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 37
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 42
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 48
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Barrage",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Reflect",
                                        "level": 25
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 28
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 32
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 37
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 42
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 48
                                    }]
                            }
                        },
                        "EXEGGUTOR": {
                            "label": "Coconut",
                            "sprite": "Water",
                            "info": [
                                "Legend has it that on rare occasions, one of its heads will drop off and continue on as an EXEGGCUTE."
                            ],
                            "number": 103,
                            "height": ["6", "7"],
                            "weight": 264.6,
                            "types": ["Grass", "Psychic"],
                            "HP": 95,
                            "Attack": 95,
                            "Defense": 85,
                            "Special": 125,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Barrage",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 28
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }]
                            }
                        },
                        "FARFETCHD": {
                            "label": "Wild Duck",
                            "sprite": "Water",
                            "info": [
                                "The sprig of green onions it holds is its weapon. It is used much like a metal sword."
                            ],
                            "number": 83,
                            "height": ["2", "7"],
                            "weight": 33.1,
                            "types": ["Normal", "Flying"],
                            "HP": 52,
                            "Attack": 65,
                            "Defense": 55,
                            "Special": 58,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 7
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 15
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 23
                                    }, {
                                        "move": "Agility",
                                        "level": 31
                                    }, {
                                        "move": "Slash",
                                        "level": 39
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "FEAROW": {
                            "label": "Beak",
                            "sprite": "Water",
                            "info": [
                                "With its huge and magnificent wings, it can keep aloft without ever having to land for rest."
                            ],
                            "number": 22,
                            "height": ["3", "11"],
                            "weight": 83.8,
                            "types": ["Normal", "Flying"],
                            "HP": 65,
                            "Attack": 90,
                            "Defense": 65,
                            "Special": 61,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 9
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 15
                                    }, {
                                        "move": "Mirror Move",
                                        "level": 25
                                    }, {
                                        "move": "Drill Peck",
                                        "level": 34
                                    }, {
                                        "move": "Agility",
                                        "level": 43
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "FLAREON": {
                            "label": "Flame",
                            "sprite": "Water",
                            "info": [
                                "When storing thermal energy in its body, its temperature could soar to over 1600 degrees."
                            ],
                            "evolvesInto": "Sylveon",
                            "evolvesVia": "use Fire Stone",
                            "number": 136,
                            "height": ["2", "11"],
                            "weight": 55.1,
                            "types": ["Fire"],
                            "HP": 65,
                            "Attack": 130,
                            "Defense": 60,
                            "Special": 95,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 27
                                    }, {
                                        "move": "Ember",
                                        "level": 31
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 37
                                    }, {
                                        "move": "Bite",
                                        "level": 40
                                    }, {
                                        "move": "Leer",
                                        "level": 42
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 44
                                    }, {
                                        "move": "Rage",
                                        "level": 48
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 54
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GASTLY": {
                            "label": "Gas",
                            "sprite": "Water",
                            "info": [
                                "Almost invisible, this gaseous %%%%%%%POKEMON%%%%%%% cloaks the target and puts it to sleep without notice."
                            ],
                            "evolvesInto": "Haunter",
                            "evolvesVia": "Level 25",
                            "number": 92,
                            "height": ["4", "3"],
                            "weight": 0.2,
                            "types": ["Ghost", "Poison"],
                            "HP": 30,
                            "Attack": 35,
                            "Defense": 30,
                            "Special": 100,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confuse Ray",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 1
                                    }, {
                                        "move": "Night Shade",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 27
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 35
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Confuse Ray",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 1
                                    }, {
                                        "move": "Night Shade",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 27
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 35
                                    }]
                            }
                        },
                        "GENGAR": {
                            "label": "Shadow",
                            "sprite": "Water",
                            "info": [
                                "Under a full moon, this %%%%%%%POKEMON%%%%%%% likes to mimic the shadows of people and laugh at their fright."
                            ],
                            "number": 94,
                            "height": ["4", "11"],
                            "weight": 89.3,
                            "types": ["Ghost", "Poison"],
                            "HP": 60,
                            "Attack": 65,
                            "Defense": 60,
                            "Special": 130,
                            "Speed": 110,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confuse Ray",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 1
                                    }, {
                                        "move": "Night Shade",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 29
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 38
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 42
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GEODUDE": {
                            "label": "Rock",
                            "sprite": "Water",
                            "info": [
                                "Found in fields and mountains. Mistaking them for boulders, people often step or trip on them."
                            ],
                            "evolvesInto": "Graveler",
                            "evolvesVia": "Level 25",
                            "number": 74,
                            "height": ["1", "4"],
                            "weight": 44.1,
                            "types": ["Rock", "Ground"],
                            "HP": 40,
                            "Attack": 80,
                            "Defense": 100,
                            "Special": 30,
                            "Speed": 20,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 11
                                    }, {
                                        "move": "Rock Throw",
                                        "level": 16
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 21
                                    }, {
                                        "move": "Harden",
                                        "level": 26
                                    }, {
                                        "move": "Earthquake",
                                        "level": 31
                                    }, {
                                        "move": "Explosion",
                                        "level": 36
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GLOOM": {
                            "label": "Weed",
                            "sprite": "Water",
                            "info": [
                                "The fluid that oozes from its mouth isn't drool. It is a nectar that is used to attract prey."
                            ],
                            "evolvesInto": "Vileplume",
                            "evolvesVia": "↗",
                            "number": 44,
                            "height": ["2", "7"],
                            "weight": 19,
                            "types": ["Grass", "Poison"],
                            "HP": 60,
                            "Attack": 65,
                            "Defense": 70,
                            "Special": 85,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Absorb",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 17
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 19
                                    }, {
                                        "move": "Acid",
                                        "level": 28
                                    }, {
                                        "move": "Petal Dance",
                                        "level": 38
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 52
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GOLBAT": {
                            "label": "Bat",
                            "sprite": "Water",
                            "info": [
                                "Once it strikes, it will not stop draining energy from the victim even if it gets too heavy to fly."
                            ],
                            "evolvesInto": "Crobat",
                            "evolvesVia": "Happiness",
                            "number": 42,
                            "height": ["5", "3"],
                            "weight": 121.3,
                            "types": ["Poison", "Flying"],
                            "HP": 75,
                            "Attack": 80,
                            "Defense": 70,
                            "Special": 65,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 15
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 32
                                    }, {
                                        "move": "Haze",
                                        "level": 43
                                    }],
                                "hm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 15
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 32
                                    }, {
                                        "move": "Haze",
                                        "level": 43
                                    }]
                            }
                        },
                        "GOLDEEN": {
                            "label": "Goldfish",
                            "sprite": "Water",
                            "info": [
                                "Its tail fin billows like an elegant ballroom dress, giving it the nickname of the Water Queen."
                            ],
                            "evolvesInto": "Seaking",
                            "evolvesVia": "Level 33",
                            "number": 118,
                            "height": ["2", "0"],
                            "weight": 33.1,
                            "types": ["Water"],
                            "HP": 45,
                            "Attack": 67,
                            "Defense": 60,
                            "Special": 35,
                            "Speed": 63,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 19
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 24
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 30
                                    }, {
                                        "move": "Waterfall",
                                        "level": 37
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 45
                                    }, {
                                        "move": "Agility",
                                        "level": 54
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GOLDUCK": {
                            "label": "Duck",
                            "sprite": "Water",
                            "info": [
                                "Often seen swimming elegantly by lake shores. It is often mistaken for the Japanese monster, Kappa."
                            ],
                            "number": 55,
                            "height": ["5", "7"],
                            "weight": 168.9,
                            "types": ["Water"],
                            "HP": 80,
                            "Attack": 82,
                            "Defense": 78,
                            "Special": 95,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 28
                                    }, {
                                        "move": "Disable",
                                        "level": 31
                                    }, {
                                        "move": "Confusion",
                                        "level": 39
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 48
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 59
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GOLEM": {
                            "label": "Megaton",
                            "sprite": "Water",
                            "info": [
                                "Its boulder-like body is extremely hard. It can easily withstand dynamite blasts without damage."
                            ],
                            "number": 76,
                            "height": ["4", "7"],
                            "weight": 661.4,
                            "types": ["Rock", "Ground"],
                            "HP": 80,
                            "Attack": 120,
                            "Defense": 130,
                            "Special": 55,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Defense Curl",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 11
                                    }, {
                                        "move": "Rock Throw",
                                        "level": 16
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 21
                                    }, {
                                        "move": "Harden",
                                        "level": 29
                                    }, {
                                        "move": "Earthquake",
                                        "level": 36
                                    }, {
                                        "move": "Explosion",
                                        "level": 43
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GRAVELER": {
                            "label": "Rock",
                            "sprite": "Water",
                            "info": [
                                "Rolls down slopes to move. It rolls over any obstacle without slowing or changing its direction."
                            ],
                            "evolvesInto": "Golem",
                            "evolvesVia": "Trade",
                            "number": 75,
                            "height": ["3", "3"],
                            "weight": 231.5,
                            "types": ["Rock", "Ground"],
                            "HP": 55,
                            "Attack": 95,
                            "Defense": 115,
                            "Special": 45,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Defense Curl",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 11
                                    }, {
                                        "move": "Rock Throw",
                                        "level": 16
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 21
                                    }, {
                                        "move": "Harden",
                                        "level": 29
                                    }, {
                                        "move": "Earthquake",
                                        "level": 36
                                    }, {
                                        "move": "Explosion",
                                        "level": 43
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "GRIMER": {
                            "label": "Sludge",
                            "sprite": "Water",
                            "info": [
                                "Appears in filthy areas. Thrives by sucking up polluted sludge that is pumped out of factories."
                            ],
                            "evolvesInto": "Muk",
                            "evolvesVia": "Level 38",
                            "number": 88,
                            "height": ["2", "11"],
                            "weight": 66.1,
                            "types": ["Poison"],
                            "HP": 80,
                            "Attack": 80,
                            "Defense": 50,
                            "Special": 40,
                            "Speed": 25,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 30
                                    }, {
                                        "move": "Minimize",
                                        "level": 33
                                    }, {
                                        "move": "Sludge",
                                        "level": 37
                                    }, {
                                        "move": "Harden",
                                        "level": 42
                                    }, {
                                        "move": "Screech",
                                        "level": 48
                                    }, {
                                        "move": "Acid Armor",
                                        "level": 55
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 30
                                    }, {
                                        "move": "Minimize",
                                        "level": 33
                                    }, {
                                        "move": "Sludge",
                                        "level": 37
                                    }, {
                                        "move": "Harden",
                                        "level": 42
                                    }, {
                                        "move": "Screech",
                                        "level": 48
                                    }, {
                                        "move": "Acid Armor",
                                        "level": 55
                                    }]
                            }
                        },
                        "GROWLITHE": {
                            "label": "Puppy",
                            "sprite": "Water",
                            "info": [
                                "Very protective of its territory. It will bark and bite to repel intruders from its space."
                            ],
                            "evolvesInto": "Arcanine",
                            "evolvesVia": "use Fire Stone",
                            "number": 58,
                            "height": ["2", "4"],
                            "weight": 41.9,
                            "types": ["Fire"],
                            "HP": 55,
                            "Attack": 70,
                            "Defense": 45,
                            "Special": 70,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Roar",
                                        "level": 1
                                    }, {
                                        "move": "Ember",
                                        "level": 18
                                    }, {
                                        "move": "Leer",
                                        "level": 23
                                    }, {
                                        "move": "Take Down",
                                        "level": 30
                                    }, {
                                        "move": "Agility",
                                        "level": 39
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Roar",
                                        "level": 1
                                    }, {
                                        "move": "Ember",
                                        "level": 18
                                    }, {
                                        "move": "Leer",
                                        "level": 23
                                    }, {
                                        "move": "Take Down",
                                        "level": 30
                                    }, {
                                        "move": "Agility",
                                        "level": 39
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 50
                                    }]
                            }
                        },
                        "GYARADOS": {
                            "label": "Atrocious",
                            "sprite": "Water",
                            "info": [
                                "Rarely seen in the wild. Huge and vicious, it is capable of destroying entire cities in a rage."
                            ],
                            "number": 130,
                            "height": ["21", "4"],
                            "weight": 518.1,
                            "types": ["Water", "Flying"],
                            "HP": 95,
                            "Attack": 125,
                            "Defense": 79,
                            "Special": 60,
                            "Speed": 81,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 1
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 20
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 25
                                    }, {
                                        "move": "Leer",
                                        "level": 32
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 41
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 52
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }]
                            }
                        },
                        "HAUNTER": {
                            "label": "Gas",
                            "sprite": "Water",
                            "info": [
                                "Because of its ability to slip through block walls, it is said to be from another dimension."
                            ],
                            "evolvesInto": "Gengar",
                            "evolvesVia": "Trade",
                            "number": 93,
                            "height": ["5", "3"],
                            "weight": 0.2,
                            "types": ["Ghost", "Poison"],
                            "HP": 45,
                            "Attack": 50,
                            "Defense": 45,
                            "Special": 115,
                            "Speed": 95,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confuse Ray",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 1
                                    }, {
                                        "move": "Night Shade",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 29
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 38
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Confuse Ray",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 1
                                    }, {
                                        "move": "Night Shade",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 29
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 38
                                    }]
                            }
                        },
                        "HITMONCHAN": {
                            "label": "Punching",
                            "sprite": "Water",
                            "info": [
                                "While apparently doing nothing, it fires punches in lightning fast volleys that are impossible to see."
                            ],
                            "evolvesInto": "Hitmontop",
                            "evolvesVia": "Level 20,Attack = Defense",
                            "number": 107,
                            "height": ["4", "7"],
                            "weight": 110.7,
                            "types": ["Fighting"],
                            "HP": 50,
                            "Attack": 105,
                            "Defense": 79,
                            "Special": 35,
                            "Speed": 76,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Agility",
                                        "level": 1
                                    }, {
                                        "move": "Comet Punch",
                                        "level": 1
                                    }, {
                                        "move": "Fire Punch",
                                        "level": 33
                                    }, {
                                        "move": "Ice Punch",
                                        "level": 38
                                    }, {
                                        "move": "Thunder Punch",
                                        "level": 43
                                    }, {
                                        "move": "Mega Punch",
                                        "level": 48
                                    }, {
                                        "move": "Counter",
                                        "level": 53
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "HITMONLEE": {
                            "label": "Kicking",
                            "sprite": "Water",
                            "info": [
                                "When in a hurry, its legs lengthen progressively. It runs smoothly with extra long, loping strides."
                            ],
                            "evolvesInto": "Hitmonchan",
                            "evolvesVia": "Level 20,Attack < Defense",
                            "number": 106,
                            "height": ["4", "11"],
                            "weight": 109.8,
                            "types": ["Fighting"],
                            "HP": 50,
                            "Attack": 120,
                            "Defense": 53,
                            "Special": 35,
                            "Speed": 87,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Double Kick",
                                        "level": 1
                                    }, {
                                        "move": "Meditate",
                                        "level": 1
                                    }, {
                                        "move": "Rolling Kick",
                                        "level": 33
                                    }, {
                                        "move": "Jump Kick",
                                        "level": 38
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 43
                                    }, {
                                        "move": "High Jump Kick",
                                        "level": 48
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 53
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "HORSEA": {
                            "label": "Dragon",
                            "sprite": "Water",
                            "info": [
                                "Known to shoot down flying bugs with precision blasts of ink from the surface of the water."
                            ],
                            "evolvesInto": "Seadra",
                            "evolvesVia": "Level 32",
                            "number": 116,
                            "height": ["1", "4"],
                            "weight": 17.6,
                            "types": ["Water"],
                            "HP": 30,
                            "Attack": 40,
                            "Defense": 70,
                            "Special": 70,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 19
                                    }, {
                                        "move": "Leer",
                                        "level": 24
                                    }, {
                                        "move": "Water Gun",
                                        "level": 30
                                    }, {
                                        "move": "Agility",
                                        "level": 37
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 45
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "HYPNO": {
                            "label": "Hypnosis",
                            "sprite": "Water",
                            "info": [
                                "When it locks eyes with an enemy, it will use a mix of PSI moves such as HYPNOSIS and CONFUSION."
                            ],
                            "number": 97,
                            "height": ["5", "3"],
                            "weight": 166.7,
                            "types": ["Psychic"],
                            "HP": 85,
                            "Attack": 73,
                            "Defense": 70,
                            "Special": 73,
                            "Speed": 67,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 12
                                    }, {
                                        "move": "Confusion",
                                        "level": 17
                                    }, {
                                        "move": "Headbutt",
                                        "level": 24
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 33
                                    }, {
                                        "move": "Psychic",
                                        "level": 37
                                    }, {
                                        "move": "Meditate",
                                        "level": 43
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 42
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "IVYSAUR": {
                            "label": "Seed",
                            "sprite": "Water",
                            "info": [
                                "When the bulb on its back grows large, it appears to lose the ability to stand on its hind legs."
                            ],
                            "evolvesInto": "Venusaur",
                            "evolvesVia": "Level 32",
                            "number": 2,
                            "height": ["3", "3"],
                            "weight": 28.7,
                            "types": ["Grass", "Poison"],
                            "HP": 60,
                            "Attack": 62,
                            "Defense": 63,
                            "Special": 80,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 7
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 22
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 30
                                    }, {
                                        "move": "Growth",
                                        "level": 38
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 46
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 54
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "JIGGLYPUFF": {
                            "label": "Balloon",
                            "sprite": "Water",
                            "info": [
                                "When its huge eyes light up, it sings a mysteriously soothing melody that lulls its enemies to sleep."
                            ],
                            "evolvesInto": "Wigglytuff",
                            "evolvesVia": "use Moon Stone",
                            "number": 39,
                            "height": ["1", "8"],
                            "weight": 12.1,
                            "types": ["Normal", "Fairy"],
                            "HP": 115,
                            "Attack": 45,
                            "Defense": 20,
                            "Special": 45,
                            "Speed": 20,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Sing",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 9
                                    }, {
                                        "move": "Disable",
                                        "level": 14
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 19
                                    }, {
                                        "move": "Double Slap",
                                        "level": 24
                                    }, {
                                        "move": "Rest",
                                        "level": 29
                                    }, {
                                        "move": "Body Slam",
                                        "level": 34
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 39
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "JOLTEON": {
                            "label": "Lightning",
                            "sprite": "Water",
                            "info": [
                                "It accumulates negative ions in the atmosphere to blast out 10000-volt lightning bolts."
                            ],
                            "evolvesInto": "Flareon",
                            "evolvesVia": "use Thunderstone",
                            "number": 135,
                            "height": ["2", "7"],
                            "weight": 54,
                            "types": ["Electric"],
                            "HP": 65,
                            "Attack": 65,
                            "Defense": 60,
                            "Special": 110,
                            "Speed": 130,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 27
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 31
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 37
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 40
                                    }, {
                                        "move": "Double Kick",
                                        "level": 42
                                    }, {
                                        "move": "Agility",
                                        "level": 44
                                    }, {
                                        "move": "Pin Missile",
                                        "level": 48
                                    }, {
                                        "move": "Thunder",
                                        "level": 54
                                    }],
                                "hm": [],
                                "tm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }]
                            }
                        },
                        "JYNX": {
                            "label": "Human Shape",
                            "sprite": "Water",
                            "info": [
                                "It seductively wiggles its hips as it walks. It can cause people to dance in unison with it."
                            ],
                            "number": 124,
                            "height": ["4", "7"],
                            "weight": 89.5,
                            "types": ["Ice", "Psychic"],
                            "HP": 65,
                            "Attack": 50,
                            "Defense": 35,
                            "Special": 115,
                            "Speed": 95,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Lovely Kiss",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 18
                                    }, {
                                        "move": "Double Slap",
                                        "level": 23
                                    }, {
                                        "move": "Ice Punch",
                                        "level": 31
                                    }, {
                                        "move": "Body Slam",
                                        "level": 39
                                    }, {
                                        "move": "Thrash",
                                        "level": 47
                                    }, {
                                        "move": "Blizzard",
                                        "level": 58
                                    }],
                                "hm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Lovely Kiss",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Lick",
                                        "level": 18
                                    }, {
                                        "move": "Double Slap",
                                        "level": 23
                                    }, {
                                        "move": "Ice Punch",
                                        "level": 31
                                    }, {
                                        "move": "Body Slam",
                                        "level": 39
                                    }, {
                                        "move": "Thrash",
                                        "level": 47
                                    }, {
                                        "move": "Blizzard",
                                        "level": 58
                                    }]
                            }
                        },
                        "KABUTO": {
                            "label": "Shellfish",
                            "sprite": "Water",
                            "info": [
                                "A %%%%%%%POKEMON%%%%%%% that was resurrected from a fossil found in what was once the ocean floor eons ago."
                            ],
                            "evolvesInto": "Kabutops",
                            "evolvesVia": "Level 40",
                            "number": 140,
                            "height": ["1", "8"],
                            "weight": 25.4,
                            "types": ["Rock", "Water"],
                            "HP": 30,
                            "Attack": 80,
                            "Defense": 90,
                            "Special": 55,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Harden",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Absorb",
                                        "level": 34
                                    }, {
                                        "move": "Slash",
                                        "level": 39
                                    }, {
                                        "move": "Leer",
                                        "level": 44
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 49
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "KABUTOPS": {
                            "label": "Shellfish",
                            "sprite": "Water",
                            "info": [
                                "Its sleek shape is perfect for swimming. It slashes prey with its claws and drains the body fluids."
                            ],
                            "number": 141,
                            "height": ["4", "3"],
                            "weight": 89.3,
                            "types": ["Rock", "Water"],
                            "HP": 60,
                            "Attack": 115,
                            "Defense": 105,
                            "Special": 65,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Absorb",
                                        "level": 1
                                    }, {
                                        "move": "Harden",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Absorb",
                                        "level": 34
                                    }, {
                                        "move": "Slash",
                                        "level": 39
                                    }, {
                                        "move": "Leer",
                                        "level": 46
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 53
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "KADABRA": {
                            "label": "Psi",
                            "sprite": "Water",
                            "info": [
                                "It emits special alpha waves from its body that induce headaches just by being close by."
                            ],
                            "evolvesInto": "Alakazam",
                            "evolvesVia": "Trade",
                            "number": 64,
                            "height": ["4", "3"],
                            "weight": 124.6,
                            "types": ["Psychic"],
                            "HP": 40,
                            "Attack": 35,
                            "Defense": 30,
                            "Special": 120,
                            "Speed": 105,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Teleport",
                                        "level": 1
                                    }, {
                                        "move": "Confusion",
                                        "level": 16
                                    }, {
                                        "move": "Disable",
                                        "level": 20
                                    }, {
                                        "move": "Psybeam",
                                        "level": 27
                                    }, {
                                        "move": "Recover",
                                        "level": 31
                                    }, {
                                        "move": "Psychic",
                                        "level": 38
                                    }, {
                                        "move": "Reflect",
                                        "level": 42
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "KAKUNA": {
                            "label": "Cocoon",
                            "sprite": "Water",
                            "info": [
                                "Almost incapable of moving, this %%%%%%%POKEMON%%%%%%% can only harden its shell to protect itself from predators."
                            ],
                            "evolvesInto": "Beedrill",
                            "evolvesVia": "Level 10",
                            "number": 14,
                            "height": ["2", "0"],
                            "weight": 22,
                            "types": ["Bug", "Poison"],
                            "HP": 45,
                            "Attack": 25,
                            "Defense": 50,
                            "Special": 25,
                            "Speed": 35,
                            "moves": {
                                "natural": [{
                                        "move": "Harden",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": [{
                                        "move": "Harden",
                                        "level": 1
                                    }]
                            }
                        },
                        "KANGASKHAN": {
                            "label": "Parent",
                            "sprite": "Water",
                            "info": [
                                "The infant rarely ventures out of its mother's protective pouch until it is 3 years old."
                            ],
                            "number": 115,
                            "height": ["7", "3"],
                            "weight": 176.4,
                            "types": ["Normal"],
                            "HP": 105,
                            "Attack": 95,
                            "Defense": 80,
                            "Special": 40,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Comet Punch",
                                        "level": 1
                                    }, {
                                        "move": "Rage",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 26
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 31
                                    }, {
                                        "move": "Mega Punch",
                                        "level": 36
                                    }, {
                                        "move": "Leer",
                                        "level": 41
                                    }, {
                                        "move": "Dizzy Punch",
                                        "level": 46
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "KINGLER": {
                            "label": "Pincer",
                            "sprite": "Water",
                            "info": [
                                "The large pincer has 10000 hp of crushing power. However, its huge size makes it unwieldy to use."
                            ],
                            "number": 99,
                            "height": ["4", "3"],
                            "weight": 132.3,
                            "types": ["Water"],
                            "HP": 55,
                            "Attack": 130,
                            "Defense": 115,
                            "Special": 50,
                            "Speed": 75,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Vice Grip",
                                        "level": 1
                                    }, {
                                        "move": "Vice Grip",
                                        "level": 20
                                    }, {
                                        "move": "Guillotine",
                                        "level": 25
                                    }, {
                                        "move": "Stomp",
                                        "level": 34
                                    }, {
                                        "move": "Crabhammer",
                                        "level": 42
                                    }, {
                                        "move": "Harden",
                                        "level": 49
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "KOFFING": {
                            "label": "Poison Gas",
                            "sprite": "Water",
                            "info": [
                                "Because it stores several kinds of toxic gases in its body, it is prone to exploding without warning."
                            ],
                            "evolvesInto": "Weezing",
                            "evolvesVia": "Level 35",
                            "number": 109,
                            "height": ["2", "0"],
                            "weight": 2.2,
                            "types": ["Poison"],
                            "HP": 40,
                            "Attack": 65,
                            "Defense": 95,
                            "Special": 60,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Smog",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sludge",
                                        "level": 32
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 37
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 40
                                    }, {
                                        "move": "Haze",
                                        "level": 45
                                    }, {
                                        "move": "Explosion",
                                        "level": 48
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Smog",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sludge",
                                        "level": 32
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 37
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 40
                                    }, {
                                        "move": "Haze",
                                        "level": 45
                                    }, {
                                        "move": "Explosion",
                                        "level": 48
                                    }]
                            }
                        },
                        "KRABBY": {
                            "label": "River Crab",
                            "sprite": "Water",
                            "info": [
                                "Its pincers are not only powerful weapons, they are used for balance when walking sideways."
                            ],
                            "evolvesInto": "Kingler",
                            "evolvesVia": "Level 28",
                            "number": 98,
                            "height": ["1", "4"],
                            "weight": 14.3,
                            "types": ["Water"],
                            "HP": 30,
                            "Attack": 105,
                            "Defense": 90,
                            "Special": 25,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Vice Grip",
                                        "level": 20
                                    }, {
                                        "move": "Guillotine",
                                        "level": 25
                                    }, {
                                        "move": "Stomp",
                                        "level": 30
                                    }, {
                                        "move": "Crabhammer",
                                        "level": 35
                                    }, {
                                        "move": "Harden",
                                        "level": 40
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "LAPRAS": {
                            "label": "Transport",
                            "sprite": "Water",
                            "info": [
                                "A %%%%%%%POKEMON%%%%%%% that has been overhunted almost to extinction. It can ferry people across the water."
                            ],
                            "number": 131,
                            "height": ["8", "2"],
                            "weight": 485,
                            "types": ["Water", "Ice"],
                            "HP": 130,
                            "Attack": 85,
                            "Defense": 80,
                            "Special": 85,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Sing",
                                        "level": 16
                                    }, {
                                        "move": "Mist",
                                        "level": 20
                                    }, {
                                        "move": "Body Slam",
                                        "level": 25
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 31
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 38
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 46
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "LICKITUNG": {
                            "label": "Licking",
                            "sprite": "Water",
                            "info": [
                                "Its tongue can be extended like a chameleon's. It leaves a tingling sensation when it licks enemies."
                            ],
                            "evolvesInto": "Lickilicky",
                            "evolvesVia": "after Rolloutlearned",
                            "number": 108,
                            "height": ["3", "11"],
                            "weight": 144.4,
                            "types": ["Normal"],
                            "HP": 90,
                            "Attack": 55,
                            "Defense": 75,
                            "Special": 60,
                            "Speed": 30,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Supersonic",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 7
                                    }, {
                                        "move": "Disable",
                                        "level": 15
                                    }, {
                                        "move": "Defense Curl",
                                        "level": 23
                                    }, {
                                        "move": "Slam",
                                        "level": 31
                                    }, {
                                        "move": "Screech",
                                        "level": 39
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MACHAMP": {
                            "label": "Superpower",
                            "sprite": "Water",
                            "info": [
                                "Using its heavy muscles, it throws powerful punches that can send the victim clear over the horizon."
                            ],
                            "number": 68,
                            "height": ["5", "3"],
                            "weight": 286.6,
                            "types": ["Fighting"],
                            "HP": 90,
                            "Attack": 130,
                            "Defense": 80,
                            "Special": 65,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Karate Chop",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Low Kick",
                                        "level": 1
                                    }, {
                                        "move": "Low Kick",
                                        "level": 20
                                    }, {
                                        "move": "Leer",
                                        "level": 25
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 36
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 44
                                    }, {
                                        "move": "Submission",
                                        "level": 52
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MACHOKE": {
                            "label": "Superpower",
                            "sprite": "Water",
                            "info": [
                                "Its muscular body is so powerful, it must wear a power save belt to be able to regulate its motions."
                            ],
                            "evolvesInto": "Machamp",
                            "evolvesVia": "Trade",
                            "number": 67,
                            "height": ["4", "11"],
                            "weight": 155.4,
                            "types": ["Fighting"],
                            "HP": 80,
                            "Attack": 100,
                            "Defense": 70,
                            "Special": 50,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Karate Chop",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Low Kick",
                                        "level": 1
                                    }, {
                                        "move": "Low Kick",
                                        "level": 20
                                    }, {
                                        "move": "Leer",
                                        "level": 25
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 36
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 44
                                    }, {
                                        "move": "Submission",
                                        "level": 52
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MACHOP": {
                            "label": "Superpower",
                            "sprite": "Water",
                            "info": [
                                "Loves to build its muscles. It trains in all styles of martial arts to become even stronger."
                            ],
                            "evolvesInto": "Machoke",
                            "evolvesVia": "Level 28",
                            "number": 66,
                            "height": ["2", "7"],
                            "weight": 43,
                            "types": ["Fighting"],
                            "HP": 70,
                            "Attack": 80,
                            "Defense": 50,
                            "Special": 35,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Karate Chop",
                                        "level": 1
                                    }, {
                                        "move": "Low Kick",
                                        "level": 20
                                    }, {
                                        "move": "Leer",
                                        "level": 25
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 32
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 39
                                    }, {
                                        "move": "Submission",
                                        "level": 46
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MAGIKARP": {
                            "label": "Fish",
                            "sprite": "Water",
                            "info": [
                                "In the distant past, it was somewhat stronger than the horribly weak descendants that exist today."
                            ],
                            "evolvesInto": "Gyarados",
                            "evolvesVia": "Level 20",
                            "number": 129,
                            "height": ["2", "11"],
                            "weight": 22,
                            "types": ["Water"],
                            "HP": 20,
                            "Attack": 10,
                            "Defense": 55,
                            "Special": 15,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Splash",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 15
                                    }],
                                "hm": [],
                                "tm": []
                            }
                        },
                        "MAGMAR": {
                            "label": "Spitfire",
                            "sprite": "Water",
                            "info": [
                                "Its body always burns with an orange glow that enables it to hide perfectly among flames."
                            ],
                            "evolvesInto": "Magmortar",
                            "evolvesVia": "trade holdingMagmarizer",
                            "number": 126,
                            "height": ["4", "3"],
                            "weight": 98.1,
                            "types": ["Fire"],
                            "HP": 65,
                            "Attack": 95,
                            "Defense": 57,
                            "Special": 100,
                            "Speed": 93,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 36
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 39
                                    }, {
                                        "move": "Fire Punch",
                                        "level": 43
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 48
                                    }, {
                                        "move": "Smog",
                                        "level": 52
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 55
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MAGNEMITE": {
                            "label": "Magnet",
                            "sprite": "Water",
                            "info": [
                                "Uses anti-gravity to stay suspended. Appears without warning and uses THUNDER WAVE and similar moves."
                            ],
                            "evolvesInto": "Magneton",
                            "evolvesVia": "Level 30",
                            "number": 81,
                            "height": ["1", "0"],
                            "weight": 13.2,
                            "types": ["Electric", "Steel"],
                            "HP": 25,
                            "Attack": 35,
                            "Defense": 70,
                            "Special": 95,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sonic Boom",
                                        "level": 21
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 25
                                    }, {
                                        "move": "Supersonic",
                                        "level": 29
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 41
                                    }, {
                                        "move": "Screech",
                                        "level": 47
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MAGNETON": {
                            "label": "Magnet",
                            "sprite": "Water",
                            "info": [
                                "Formed by several MAGNEMITEs linked together. They frequently appear when sunspots flare up."
                            ],
                            "evolvesInto": "Magnezone",
                            "evolvesVia": "in a Magnetic Field area",
                            "number": 82,
                            "height": ["3", "3"],
                            "weight": 132.3,
                            "types": ["Electric", "Steel"],
                            "HP": 50,
                            "Attack": 60,
                            "Defense": 95,
                            "Special": 120,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Sonic Boom",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 1
                                    }, {
                                        "move": "Sonic Boom",
                                        "level": 21
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 25
                                    }, {
                                        "move": "Supersonic",
                                        "level": 29
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 46
                                    }, {
                                        "move": "Screech",
                                        "level": 54
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MANKEY": {
                            "label": "Pig Monkey",
                            "sprite": "Water",
                            "info": [
                                "Extremely quick to anger. It could be docile one moment then thrashing away the next instant."
                            ],
                            "evolvesInto": "Primeape",
                            "evolvesVia": "Level 28",
                            "number": 56,
                            "height": ["1", "8"],
                            "weight": 61.7,
                            "types": ["Fighting"],
                            "HP": 40,
                            "Attack": 80,
                            "Defense": 35,
                            "Special": 35,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Karate Chop",
                                        "level": 15
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 21
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 27
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 33
                                    }, {
                                        "move": "Thrash",
                                        "level": 39
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MAROWAK": {
                            "label": "Bone Keeper",
                            "sprite": "Water",
                            "info": [
                                "The bone it holds is its key weapon. It throws the bone skillfully like a boomerang to KO targets."
                            ],
                            "number": 105,
                            "height": ["3", "3"],
                            "weight": 99.2,
                            "types": ["Ground"],
                            "HP": 60,
                            "Attack": 80,
                            "Defense": 110,
                            "Special": 50,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bone Club",
                                        "level": 1
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 25
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 33
                                    }, {
                                        "move": "Thrash",
                                        "level": 41
                                    }, {
                                        "move": "Bonemerang",
                                        "level": 48
                                    }, {
                                        "move": "Rage",
                                        "level": 55
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MEOWTH": {
                            "label": "Scratch Cat",
                            "sprite": "Water",
                            "info": [
                                "Adores circular objects. Wanders the streets on a nightly basis to look for dropped loose change."
                            ],
                            "evolvesInto": "Persian",
                            "evolvesVia": "Level 28",
                            "number": 52,
                            "height": ["1", "4"],
                            "weight": 9.3,
                            "types": ["Normal"],
                            "HP": 40,
                            "Attack": 45,
                            "Defense": 35,
                            "Special": 40,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 12
                                    }, {
                                        "move": "Pay Day",
                                        "level": 17
                                    }, {
                                        "move": "Screech",
                                        "level": 24
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 33
                                    }, {
                                        "move": "Slash",
                                        "level": 44
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 12
                                    }, {
                                        "move": "Pay Day",
                                        "level": 17
                                    }, {
                                        "move": "Screech",
                                        "level": 24
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 33
                                    }, {
                                        "move": "Slash",
                                        "level": 44
                                    }]
                            }
                        },
                        "METAPOD": {
                            "label": "Cocoon",
                            "sprite": "Water",
                            "info": [
                                "This %%%%%%%POKEMON%%%%%%% is vulnerable to attack while its shell is soft, exposing its weak and tender body."
                            ],
                            "evolvesInto": "Butterfree",
                            "evolvesVia": "Level 10",
                            "number": 11,
                            "height": ["2", "4"],
                            "weight": 21.8,
                            "types": ["Bug"],
                            "HP": 50,
                            "Attack": 20,
                            "Defense": 55,
                            "Special": 25,
                            "Speed": 30,
                            "moves": {
                                "natural": [{
                                        "move": "Harden",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Harden",
                                        "level": 1
                                    }, {
                                        "move": "Harden",
                                        "level": 7
                                    }]
                            }
                        },
                        "MEW": {
                            "label": "New Species",
                            "sprite": "Water",
                            "info": [
                                "So rare that it is still said to be a mirage by many experts. Only a few people have seen it worldwide."
                            ],
                            "number": 151,
                            "height": ["1", "4"],
                            "weight": 8.8,
                            "types": ["Psychic"],
                            "HP": 100,
                            "Attack": 100,
                            "Defense": 100,
                            "Special": 100,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Transform",
                                        "level": 10
                                    }, {
                                        "move": "Mega Punch",
                                        "level": 20
                                    }, {
                                        "move": "Metronome",
                                        "level": 30
                                    }, {
                                        "move": "Psychic",
                                        "level": 40
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Fly",
                                        "level": 2
                                    }, {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Dragon Rage",
                                        "level": 23
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Egg Bomb",
                                        "level": 37
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Soft-Boiled",
                                        "level": 41
                                    }, {
                                        "move": "Dream Eater",
                                        "level": 42
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MEWTWO": {
                            "label": "Genetic",
                            "sprite": "Water",
                            "info": [
                                "It was created by a scientist after years of horrific gene splicing and DNA engineering experiments."
                            ],
                            "number": 150,
                            "height": ["6", "7"],
                            "weight": 269,
                            "types": ["Psychic"],
                            "HP": 106,
                            "Attack": 110,
                            "Defense": 90,
                            "Special": 154,
                            "Speed": 130,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Psychic",
                                        "level": 1
                                    }, {
                                        "move": "Swift",
                                        "level": 1
                                    }, {
                                        "move": "Barrier",
                                        "level": 63
                                    }, {
                                        "move": "Psychic",
                                        "level": 66
                                    }, {
                                        "move": "Recover",
                                        "level": 70
                                    }, {
                                        "move": "Mist",
                                        "level": 75
                                    }, {
                                        "move": "Amnesia",
                                        "level": 81
                                    }],
                                "hm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MOLTRES": {
                            "label": "Flame",
                            "sprite": "Water",
                            "info": [
                                "Known as the legendary bird of fire. Every flap of its wings creates a dazzling flash of flames."
                            ],
                            "number": 146,
                            "height": ["6", "7"],
                            "weight": 132.3,
                            "types": ["Fire", "Flying"],
                            "HP": 90,
                            "Attack": 100,
                            "Defense": 90,
                            "Special": 125,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Fire Spin",
                                        "level": 1
                                    }, {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 51
                                    }, {
                                        "move": "Agility",
                                        "level": 55
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 60
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MrHyphenMime": {
                            "label": "Barrier",
                            "sprite": "Water",
                            "info": [
                                "If interrupted while it is miming, it will slap around the offender with its broad hands."
                            ],
                            "number": 122,
                            "height": ["4", "3"],
                            "weight": 120.2,
                            "types": ["Psychic", "Fairy"],
                            "HP": 40,
                            "Attack": 45,
                            "Defense": 65,
                            "Special": 100,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Barrier",
                                        "level": 1
                                    }, {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Confusion",
                                        "level": 15
                                    }, {
                                        "move": "Light Screen",
                                        "level": 23
                                    }, {
                                        "move": "Double Slap",
                                        "level": 31
                                    }, {
                                        "move": "Meditate",
                                        "level": 39
                                    }, {
                                        "move": "Substitute",
                                        "level": 47
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "MUK": {
                            "label": "Sludge",
                            "sprite": "Water",
                            "info": [
                                "Thickly covered with a filthy, vile sludge. It is so toxic, even its footprints contain poison."
                            ],
                            "number": 89,
                            "height": ["3", "11"],
                            "weight": 66.1,
                            "types": ["Poison"],
                            "HP": 105,
                            "Attack": 105,
                            "Defense": 75,
                            "Special": 65,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 30
                                    }, {
                                        "move": "Minimize",
                                        "level": 33
                                    }, {
                                        "move": "Sludge",
                                        "level": 37
                                    }, {
                                        "move": "Harden",
                                        "level": 45
                                    }, {
                                        "move": "Screech",
                                        "level": 53
                                    }, {
                                        "move": "Acid Armor",
                                        "level": 60
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 1
                                    }, {
                                        "move": "Pound",
                                        "level": 1
                                    }, {
                                        "move": "Poison Gas",
                                        "level": 30
                                    }, {
                                        "move": "Minimize",
                                        "level": 33
                                    }, {
                                        "move": "Sludge",
                                        "level": 37
                                    }, {
                                        "move": "Harden",
                                        "level": 45
                                    }, {
                                        "move": "Screech",
                                        "level": 53
                                    }, {
                                        "move": "Acid Armor",
                                        "level": 60
                                    }]
                            }
                        },
                        "NIDOKING": {
                            "label": "Drill",
                            "sprite": "Water",
                            "info": [
                                "It uses its powerful tail in battle to smash, constrict, then break the prey's bones."
                            ],
                            "number": 34,
                            "height": ["4", "7"],
                            "weight": 136.7,
                            "types": ["Poison", "Ground"],
                            "HP": 81,
                            "Attack": 102,
                            "Defense": 77,
                            "Special": 85,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Thrash",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 8
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 14
                                    }, {
                                        "move": "Thrash",
                                        "level": 23
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }]
                            }
                        },
                        "NIDOQUEEN": {
                            "label": "Drill",
                            "sprite": "Water",
                            "info": [
                                "Its hard scales provide strong protection. It uses its hefty bulk to execute powerful moves."
                            ],
                            "number": 31,
                            "height": ["4", "3"],
                            "weight": 132.3,
                            "types": ["Poison", "Ground"],
                            "HP": 90,
                            "Attack": 92,
                            "Defense": 87,
                            "Special": 75,
                            "Speed": 76,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Body Slam",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 8
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 14
                                    }, {
                                        "move": "Body Slam",
                                        "level": 23
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }]
                            }
                        },
                        "NIDORANFemaleSymbol": {
                            "label": "Poison Pin",
                            "sprite": "Water",
                            "info": [
                                "Although small, its venomous barbs render this %%%%%%%POKEMON%%%%%%% dangerous. The female has smaller horns."
                            ],
                            "evolvesInto": "Nidorina",
                            "evolvesVia": "Level 16",
                            "number": 29,
                            "height": ["1", "4"],
                            "weight": 15.4,
                            "types": ["Poison"],
                            "HP": 55,
                            "Attack": 47,
                            "Defense": 52,
                            "Special": 40,
                            "Speed": 41,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    },
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    },
                                    {
                                        "move": "Scratch",
                                        "level": 8
                                    },
                                    {
                                        "move": "Double Kick",
                                        "level": 12
                                    },
                                    {
                                        "move": "Poison Sting",
                                        "level": 17
                                    },
                                    {
                                        "move": "Tail Whip",
                                        "level": 23
                                    },
                                    {
                                        "move": "Bite",
                                        "level": 30
                                    },
                                    {
                                        "move": "Fury Swipes",
                                        "level": 38
                                    },
                                ],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "NIDORANMaleSymbol": {
                            "label": "Poison Pin",
                            "sprite": "Water",
                            "info": [
                                "Stiffens its ears to sense danger. The larger its horns, the more powerful its secreted venom."
                            ],
                            "evolvesInto": "Nidorino",
                            "evolvesVia": "Level 16",
                            "number": 32,
                            "height": ["1", "8"],
                            "weight": 19.8,
                            "types": ["Poison"],
                            "HP": 46,
                            "Attack": 57,
                            "Defense": 40,
                            "Special": 40,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "NIDORINA": {
                            "label": "Poison Pin",
                            "sprite": "Water",
                            "info": [
                                "The female's horn develops slowly. Prefers physical attacks such as clawing and biting."
                            ],
                            "evolvesInto": "Nidoqueen",
                            "evolvesVia": "use Moon Stone",
                            "number": 30,
                            "height": ["2", "7"],
                            "weight": 44.1,
                            "types": ["Poison"],
                            "HP": 70,
                            "Attack": 62,
                            "Defense": 67,
                            "Special": 55,
                            "Speed": 56,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 8
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 14
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 23
                                    }, {
                                        "move": "Bite",
                                        "level": 32
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 41
                                    }, {
                                        "move": "Double Kick",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 8
                                    }, {
                                        "move": "Double Kick",
                                        "level": 12
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 19
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 27
                                    }, {
                                        "move": "Bite",
                                        "level": 36
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 46
                                    }]
                            }
                        },
                        "NIDORINO": {
                            "label": "Poison Pin",
                            "sprite": "Water",
                            "info": [
                                "An aggressive %%%%%%%POKEMON%%%%%%% that is quick to attack. The horn on its head secretes a powerful venom."
                            ],
                            "evolvesInto": "Nidoking",
                            "evolvesVia": "use Moon Stone",
                            "number": 33,
                            "height": ["2", "11"],
                            "weight": 43,
                            "types": ["Poison"],
                            "HP": 61,
                            "Attack": 72,
                            "Defense": 57,
                            "Special": 55,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 8
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 14
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 23
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 32
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 41
                                    }, {
                                        "move": "Double Kick",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 8
                                    }, {
                                        "move": "Double Kick",
                                        "level": 12
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 19
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 27
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 36
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 46
                                    }]
                            }
                        },
                        "NINETALES": {
                            "label": "Fox",
                            "sprite": "Water",
                            "info": [
                                "Very smart and very vengeful. Grabbing one of its many tails could result in a 1000-year curse."
                            ],
                            "number": 38,
                            "height": ["3", "7"],
                            "weight": 43.9,
                            "types": ["Fire"],
                            "HP": 73,
                            "Attack": 76,
                            "Defense": 75,
                            "Special": 81,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Roar",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ODDISH": {
                            "label": "Weed",
                            "sprite": "Water",
                            "info": [
                                "During the day, it keeps its face buried in the ground. At night, it wanders around sowing its seeds."
                            ],
                            "evolvesInto": "Gloom",
                            "evolvesVia": "Level 21",
                            "number": 43,
                            "height": ["1", "8"],
                            "weight": 11.9,
                            "types": ["Grass", "Poison"],
                            "HP": 45,
                            "Attack": 50,
                            "Defense": 55,
                            "Special": 75,
                            "Speed": 30,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Absorb",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 17
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 19
                                    }, {
                                        "move": "Acid",
                                        "level": 24
                                    }, {
                                        "move": "Petal Dance",
                                        "level": 33
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 46
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "OMANYTE": {
                            "label": "Spiral",
                            "sprite": "Water",
                            "info": [
                                "Although long extinct, in rare cases, it can be genetically resurrected from fossils."
                            ],
                            "evolvesInto": "Omastar",
                            "evolvesVia": "Level 40",
                            "number": 138,
                            "height": ["1", "4"],
                            "weight": 16.5,
                            "types": ["Rock", "Water"],
                            "HP": 35,
                            "Attack": 40,
                            "Defense": 100,
                            "Special": 90,
                            "Speed": 35,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Withdraw",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 34
                                    }, {
                                        "move": "Leer",
                                        "level": 39
                                    }, {
                                        "move": "Spike Cannon",
                                        "level": 46
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 53
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "OMASTAR": {
                            "label": "Spiral",
                            "sprite": "Water",
                            "info": [
                                "A prehistoric %%%%%%%POKEMON%%%%%%% that died out when its heavy shell made it impossible to catch prey."
                            ],
                            "number": 139,
                            "height": ["3", "3"],
                            "weight": 77.2,
                            "types": ["Rock", "Water"],
                            "HP": 70,
                            "Attack": 60,
                            "Defense": 125,
                            "Special": 115,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Withdraw",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 34
                                    }, {
                                        "move": "Leer",
                                        "level": 39
                                    }, {
                                        "move": "Spike Cannon",
                                        "level": 44
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 49
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ONIX": {
                            "label": "Rock Snake",
                            "sprite": "Water",
                            "info": [
                                "As it grows, the stone portions of its body harden to become similar to a diamond, but colored black."
                            ],
                            "evolvesInto": "Steelix",
                            "evolvesVia": "trade holdingMetal Coat",
                            "number": 95,
                            "height": ["28", "10"],
                            "weight": 463,
                            "types": ["Rock", "Ground"],
                            "HP": 35,
                            "Attack": 45,
                            "Defense": 160,
                            "Special": 30,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Bind",
                                        "level": 15
                                    }, {
                                        "move": "Rock Throw",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 25
                                    }, {
                                        "move": "Slam",
                                        "level": 33
                                    }, {
                                        "move": "Harden",
                                        "level": 43
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PARAS": {
                            "label": "Mushroom",
                            "sprite": "Water",
                            "info": [
                                "Burrows to suck tree roots. The mushrooms on its back grow by drawing nutrients from the bug host."
                            ],
                            "evolvesInto": "Parasect",
                            "evolvesVia": "Level 24",
                            "number": 46,
                            "height": ["1", "0"],
                            "weight": 11.9,
                            "types": ["Bug", "Grass"],
                            "HP": 35,
                            "Attack": 70,
                            "Defense": 55,
                            "Special": 45,
                            "Speed": 25,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 13
                                    }, {
                                        "move": "Leech Life",
                                        "level": 20
                                    }, {
                                        "move": "Spore",
                                        "level": 27
                                    }, {
                                        "move": "Slash",
                                        "level": 34
                                    }, {
                                        "move": "Growth",
                                        "level": 41
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PARASECT": {
                            "label": "Mushroom",
                            "sprite": "Water",
                            "info": [
                                "A host-parasite pair in which the parasite mushroom has taken over the host bug. Prefers damp places."
                            ],
                            "number": 47,
                            "height": ["3", "3"],
                            "weight": 65,
                            "types": ["Bug", "Grass"],
                            "HP": 60,
                            "Attack": 95,
                            "Defense": 80,
                            "Special": 60,
                            "Speed": 30,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 13
                                    }, {
                                        "move": "Leech Life",
                                        "level": 20
                                    }, {
                                        "move": "Spore",
                                        "level": 30
                                    }, {
                                        "move": "Slash",
                                        "level": 39
                                    }, {
                                        "move": "Growth",
                                        "level": 48
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PERSIAN": {
                            "label": "Classy Cat",
                            "sprite": "Water",
                            "info": [
                                "Although its fur has many admirers, it is tough to raise as a pet because of its fickle meanness."
                            ],
                            "number": 53,
                            "height": ["3", "3"],
                            "weight": 70.5,
                            "types": ["Normal"],
                            "HP": 65,
                            "Attack": 70,
                            "Defense": 60,
                            "Special": 65,
                            "Speed": 115,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 12
                                    }, {
                                        "move": "Pay Day",
                                        "level": 17
                                    }, {
                                        "move": "Screech",
                                        "level": 24
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 37
                                    }, {
                                        "move": "Slash",
                                        "level": 51
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Bite",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Bite",
                                        "level": 12
                                    }, {
                                        "move": "Pay Day",
                                        "level": 17
                                    }, {
                                        "move": "Screech",
                                        "level": 24
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 37
                                    }, {
                                        "move": "Slash",
                                        "level": 51
                                    }]
                            }
                        },
                        "PIDGEOT": {
                            "label": "Bird",
                            "sprite": "Water",
                            "info": [
                                "When hunting, it skims the surface of water at high speed to pick off unwary prey such as MAGIKARP."
                            ],
                            "number": 18,
                            "height": ["4", "11"],
                            "weight": 87.1,
                            "types": ["Normal", "Flying"],
                            "HP": 83,
                            "Attack": 80,
                            "Defense": 75,
                            "Special": 70,
                            "Speed": 101,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Gust",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 5
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 12
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 31
                                    }, {
                                        "move": "Agility",
                                        "level": 44
                                    }, {
                                        "move": "Mirror Move",
                                        "level": 54
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PIDGEOTTO": {
                            "label": "Bird",
                            "sprite": "Water",
                            "info": [
                                "Very protective of its sprawling territorial area, this %%%%%%%POKEMON%%%%%%% will fiercely peck at any intruder."
                            ],
                            "evolvesInto": "Pidgeot",
                            "evolvesVia": "Level 36",
                            "number": 17,
                            "height": ["3", "7"],
                            "weight": 66.1,
                            "types": ["Normal", "Flying"],
                            "HP": 63,
                            "Attack": 60,
                            "Defense": 55,
                            "Special": 50,
                            "Speed": 71,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Gust",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 5
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 12
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 31
                                    }, {
                                        "move": "Agility",
                                        "level": 40
                                    }, {
                                        "move": "Mirror Move",
                                        "level": 49
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PIDGEY": {
                            "label": "Tiny Bird",
                            "sprite": "Water",
                            "info": [
                                "A common sight in forests and woods. It flaps its wings at ground level to kick up blinding sand."
                            ],
                            "evolvesInto": "Pidgeotto",
                            "evolvesVia": "Level 18",
                            "number": 16,
                            "height": ["1", "0"],
                            "weight": 4,
                            "types": ["Normal", "Flying"],
                            "HP": 40,
                            "Attack": 45,
                            "Defense": 40,
                            "Special": 35,
                            "Speed": 56,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Gust",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 5
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 12
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 19
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 28
                                    }, {
                                        "move": "Agility",
                                        "level": 36
                                    }, {
                                        "move": "Mirror Move",
                                        "level": 44
                                    }],
                                "hm": [{
                                        "move": "Fly",
                                        "level": 2
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PIKACHU": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "When several of these %%%%%%%POKEMON%%%%%%% gather, their electricity could build and cause lightning storms."
                            ],
                            "evolvesInto": "Raichu",
                            "evolvesVia": "use Thunderstone",
                            "number": 25,
                            "height": ["1", "4"],
                            "weight": 13.2,
                            "types": ["Electric"],
                            "HP": 35,
                            "Attack": 55,
                            "Defense": 40,
                            "Special": 50,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 9
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 16
                                    }, {
                                        "move": "Swift",
                                        "level": 26
                                    }, {
                                        "move": "Agility",
                                        "level": 33
                                    }, {
                                        "move": "Thunder",
                                        "level": 43
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PINSIR": {
                            "label": "Stag Beetle",
                            "sprite": "Water",
                            "info": [
                                "If it fails to crush the victim in its pincers, it will swing it around and toss it hard."
                            ],
                            "number": 127,
                            "height": ["4", "11"],
                            "weight": 121.3,
                            "types": ["Bug"],
                            "HP": 65,
                            "Attack": 125,
                            "Defense": 100,
                            "Special": 55,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Vice Grip",
                                        "level": 1
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 25
                                    }, {
                                        "move": "Guillotine",
                                        "level": 30
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 36
                                    }, {
                                        "move": "Harden",
                                        "level": 43
                                    }, {
                                        "move": "Slash",
                                        "level": 49
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 54
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "POLIWAG": {
                            "label": "Tadpole",
                            "sprite": "Water",
                            "info": [
                                "Its newly grown legs prevent it from running. It appears to prefer swimming than trying to stand."
                            ],
                            "evolvesInto": "Poliwhirl",
                            "evolvesVia": "Level 25",
                            "number": 60,
                            "height": ["2", "0"],
                            "weight": 27.3,
                            "types": ["Water"],
                            "HP": 40,
                            "Attack": 50,
                            "Defense": 40,
                            "Special": 40,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 16
                                    }, {
                                        "move": "Water Gun",
                                        "level": 19
                                    }, {
                                        "move": "Double Slap",
                                        "level": 25
                                    }, {
                                        "move": "Body Slam",
                                        "level": 31
                                    }, {
                                        "move": "Amnesia",
                                        "level": 38
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 45
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "POLIWHIRL": {
                            "label": "Tadpole",
                            "sprite": "Water",
                            "info": [
                                "Capable of living in or out of water. When out of water, it sweats to keep its body slimy."
                            ],
                            "evolvesInto": "Poliwrath",
                            "evolvesVia": "↗",
                            "number": 61,
                            "height": ["3", "3"],
                            "weight": 44.1,
                            "types": ["Water"],
                            "HP": 65,
                            "Attack": 65,
                            "Defense": 65,
                            "Special": 50,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 16
                                    }, {
                                        "move": "Water Gun",
                                        "level": 19
                                    }, {
                                        "move": "Double Slap",
                                        "level": 26
                                    }, {
                                        "move": "Body Slam",
                                        "level": 33
                                    }, {
                                        "move": "Amnesia",
                                        "level": 41
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 49
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "POLIWRATH": {
                            "label": "Tadpole",
                            "sprite": "Water",
                            "info": [
                                "An adept swimmer at both the front crawl and breast stroke. Easily overtakes the best human swimmers."
                            ],
                            "evolvesInto": "Politoed",
                            "evolvesVia": "trade holdingKing's Rock",
                            "number": 62,
                            "height": ["4", "3"],
                            "weight": 119,
                            "types": ["Water", "Fighting"],
                            "HP": 90,
                            "Attack": 95,
                            "Defense": 95,
                            "Special": 70,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Body Slam",
                                        "level": 1
                                    }, {
                                        "move": "Double Slap",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Hypnosis",
                                        "level": 16
                                    }, {
                                        "move": "Water Gun",
                                        "level": 19
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }]
                            }
                        },
                        "PONYTA": {
                            "label": "Fire Horse",
                            "sprite": "Water",
                            "info": [
                                "Its hooves are 10 times harder than diamonds. It can trample anything completely flat in little time."
                            ],
                            "evolvesInto": "Rapidash",
                            "evolvesVia": "Level 40",
                            "number": 77,
                            "height": ["3", "3"],
                            "weight": 66.1,
                            "types": ["Fire"],
                            "HP": 50,
                            "Attack": 85,
                            "Defense": 55,
                            "Special": 65,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 30
                                    }, {
                                        "move": "Stomp",
                                        "level": 32
                                    }, {
                                        "move": "Growl",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 39
                                    }, {
                                        "move": "Take Down",
                                        "level": 43
                                    }, {
                                        "move": "Agility",
                                        "level": 48
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 30
                                    }, {
                                        "move": "Stomp",
                                        "level": 32
                                    }, {
                                        "move": "Growl",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 39
                                    }, {
                                        "move": "Take Down",
                                        "level": 43
                                    }, {
                                        "move": "Agility",
                                        "level": 48
                                    }]
                            }
                        },
                        "PORYGON": {
                            "label": "Virtual",
                            "sprite": "Water",
                            "info": [
                                "A %%%%%%%POKEMON%%%%%%% that consists entirely of programming code. Capable of moving freely in cyberspace."
                            ],
                            "evolvesInto": "Porygon2",
                            "evolvesVia": "trade holding Up-Grade",
                            "number": 137,
                            "height": ["2", "7"],
                            "weight": 80.5,
                            "types": ["Normal"],
                            "HP": 65,
                            "Attack": 60,
                            "Defense": 70,
                            "Special": 85,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Conversion",
                                        "level": 1
                                    }, {
                                        "move": "Sharpen",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Psybeam",
                                        "level": 23
                                    }, {
                                        "move": "Recover",
                                        "level": 28
                                    }, {
                                        "move": "Agility",
                                        "level": 35
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 42
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PRIMEAPE": {
                            "label": "Pig Monkey",
                            "sprite": "Water",
                            "info": [
                                "Always furious and tenacious to boot. It will not abandon chasing its quarry until it is caught."
                            ],
                            "number": 57,
                            "height": ["3", "3"],
                            "weight": 70.5,
                            "types": ["Fighting"],
                            "HP": 65,
                            "Attack": 105,
                            "Defense": 60,
                            "Special": 60,
                            "Speed": 95,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Fury Swipes",
                                        "level": 1
                                    }, {
                                        "move": "Karate Chop",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Karate Chop",
                                        "level": 15
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 21
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 27
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 37
                                    }, {
                                        "move": "Thrash",
                                        "level": 46
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "PSYDUCK": {
                            "label": "Duck",
                            "sprite": "Water",
                            "info": [
                                "While lulling its enemies with its vacant look, this wily %%%%%%%POKEMON%%%%%%% will use psychokinetic powers."
                            ],
                            "evolvesInto": "Golduck",
                            "evolvesVia": "Level 33",
                            "number": 54,
                            "height": ["2", "7"],
                            "weight": 43.2,
                            "types": ["Water"],
                            "HP": 50,
                            "Attack": 52,
                            "Defense": 48,
                            "Special": 65,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 28
                                    }, {
                                        "move": "Disable",
                                        "level": 31
                                    }, {
                                        "move": "Confusion",
                                        "level": 36
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 43
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 52
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "RAICHU": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "Its long tail serves as a ground to protect itself from its own high voltage power."
                            ],
                            "number": 26,
                            "height": ["2", "7"],
                            "weight": 66.1,
                            "types": ["Electric"],
                            "HP": 60,
                            "Attack": 90,
                            "Defense": 55,
                            "Special": 90,
                            "Speed": 110,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 1
                                    }],
                                "hm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [{
                                        "move": "Flash",
                                        "level": 5
                                    }]
                            }
                        },
                        "RAPIDASH": {
                            "label": "Fire Horse",
                            "sprite": "Water",
                            "info": [
                                "Very competitive, this %%%%%%%POKEMON%%%%%%% will chase anything that moves fast in the hopes of racing it."
                            ],
                            "number": 78,
                            "height": ["5", "7"],
                            "weight": 209.4,
                            "types": ["Fire"],
                            "HP": 65,
                            "Attack": 100,
                            "Defense": 70,
                            "Special": 80,
                            "Speed": 105,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 30
                                    }, {
                                        "move": "Stomp",
                                        "level": 32
                                    }, {
                                        "move": "Growl",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 39
                                    }, {
                                        "move": "Take Down",
                                        "level": 47
                                    }, {
                                        "move": "Agility",
                                        "level": 55
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 30
                                    }, {
                                        "move": "Stomp",
                                        "level": 32
                                    }, {
                                        "move": "Growl",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 39
                                    }, {
                                        "move": "Take Down",
                                        "level": 47
                                    }, {
                                        "move": "Agility",
                                        "level": 55
                                    }]
                            }
                        },
                        "RATICATE": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "It uses its whiskers to maintain its balance. It apparently slows down if they are cut off."
                            ],
                            "number": 20,
                            "height": ["2", "4"],
                            "weight": 40.8,
                            "types": ["Normal"],
                            "HP": 55,
                            "Attack": 81,
                            "Defense": 60,
                            "Special": 50,
                            "Speed": 97,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 7
                                    }, {
                                        "move": "Hyper Fang",
                                        "level": 14
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 27
                                    }, {
                                        "move": "Super Fang",
                                        "level": 41
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 7
                                    }, {
                                        "move": "Hyper Fang",
                                        "level": 14
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 27
                                    }, {
                                        "move": "Super Fang",
                                        "level": 41
                                    }]
                            }
                        },
                        "RATTATA": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "Bites anything when it attacks. Small and very quick, it is a common sight in many places."
                            ],
                            "evolvesInto": "Raticate",
                            "evolvesVia": "Level 20",
                            "number": 19,
                            "height": ["1", "0"],
                            "weight": 7.7,
                            "types": ["Normal"],
                            "HP": 30,
                            "Attack": 56,
                            "Defense": 35,
                            "Special": 25,
                            "Speed": 72,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 7
                                    }, {
                                        "move": "Hyper Fang",
                                        "level": 14
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 23
                                    }, {
                                        "move": "Super Fang",
                                        "level": 34
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 7
                                    }, {
                                        "move": "Hyper Fang",
                                        "level": 14
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 23
                                    }, {
                                        "move": "Super Fang",
                                        "level": 34
                                    }]
                            }
                        },
                        "RHYDON": {
                            "label": "Drill",
                            "sprite": "Water",
                            "info": [
                                "Protected by an armor-like hide, it is capable of living in molten lava of 3,600 degrees."
                            ],
                            "evolvesInto": "Rhyperior",
                            "evolvesVia": "trade holdingProtector",
                            "number": 112,
                            "height": ["6", "3"],
                            "weight": 264.6,
                            "types": ["Ground", "Rock"],
                            "HP": 105,
                            "Attack": 130,
                            "Defense": 120,
                            "Special": 45,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Fury Attack",
                                        "level": 1
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 30
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 35
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 40
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 48
                                    }, {
                                        "move": "Leer",
                                        "level": 55
                                    }, {
                                        "move": "Take Down",
                                        "level": 64
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "RHYHORN": {
                            "label": "Spikes",
                            "sprite": "Water",
                            "info": [
                                "Its massive bones are 1000 times harder than human bones. It can easily knock a trailer flying."
                            ],
                            "evolvesInto": "Rhydon",
                            "evolvesVia": "Level 42",
                            "number": 111,
                            "height": ["3", "3"],
                            "weight": 253.5,
                            "types": ["Ground", "Rock"],
                            "HP": 80,
                            "Attack": 85,
                            "Defense": 95,
                            "Special": 30,
                            "Speed": 25,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Horn Attack",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 30
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 35
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 40
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 45
                                    }, {
                                        "move": "Leer",
                                        "level": 50
                                    }, {
                                        "move": "Take Down",
                                        "level": 55
                                    }],
                                "hm": [{
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SANDSHREW": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "Burrows deep underground in arid locations far from water. It only emerges to hunt for food."
                            ],
                            "evolvesInto": "Sandslash",
                            "evolvesVia": "Level 22",
                            "number": 27,
                            "height": ["2", "0"],
                            "weight": 26.5,
                            "types": ["Ground"],
                            "HP": 50,
                            "Attack": 75,
                            "Defense": 85,
                            "Special": 20,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 10
                                    }, {
                                        "move": "Slash",
                                        "level": 17
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 24
                                    }, {
                                        "move": "Swift",
                                        "level": 31
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 38
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SANDSLASH": {
                            "label": "Mouse",
                            "sprite": "Water",
                            "info": [
                                "Curls up into a spiny ball when threatened. It can roll while curled up to attack or escape."
                            ],
                            "number": 28,
                            "height": ["3", "3"],
                            "weight": 65,
                            "types": ["Ground"],
                            "HP": 75,
                            "Attack": 100,
                            "Defense": 110,
                            "Special": 45,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Scratch",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 10
                                    }, {
                                        "move": "Slash",
                                        "level": 17
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 27
                                    }, {
                                        "move": "Swift",
                                        "level": 36
                                    }, {
                                        "move": "Fury Swipes",
                                        "level": 47
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SCYTHER": {
                            "label": "Mantis",
                            "sprite": "Water",
                            "info": [
                                "With ninja-like agility and speed, it can create the illusion that there is more than one."
                            ],
                            "evolvesInto": "Scizor",
                            "evolvesVia": "trade holdingMetal Coat",
                            "number": 123,
                            "height": ["4", "11"],
                            "weight": 123.5,
                            "types": ["Bug", "Flying"],
                            "HP": 70,
                            "Attack": 110,
                            "Defense": 80,
                            "Special": 55,
                            "Speed": 105,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 17
                                    }, {
                                        "move": "Focus Energy",
                                        "level": 20
                                    }, {
                                        "move": "Double Team",
                                        "level": 24
                                    }, {
                                        "move": "Slash",
                                        "level": 29
                                    }, {
                                        "move": "Swords Dance",
                                        "level": 35
                                    }, {
                                        "move": "Agility",
                                        "level": 42
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SEADRA": {
                            "label": "Dragon",
                            "sprite": "Water",
                            "info": [
                                "Capable of swimming backwards by rapidly flapping its wing-like pectoral fins and stout tail."
                            ],
                            "evolvesInto": "Kingdra",
                            "evolvesVia": "trade holdingDragon Scale",
                            "number": 117,
                            "height": ["3", "11"],
                            "weight": 55.1,
                            "types": ["Water"],
                            "HP": 55,
                            "Attack": 65,
                            "Defense": 95,
                            "Special": 95,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 1
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 19
                                    }, {
                                        "move": "Leer",
                                        "level": 24
                                    }, {
                                        "move": "Water Gun",
                                        "level": 30
                                    }, {
                                        "move": "Agility",
                                        "level": 41
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 52
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SEAKING": {
                            "label": "Goldfish",
                            "sprite": "Water",
                            "info": [
                                "In the autumn spawning season, they can be seen swimming powerfully up rivers and creeks."
                            ],
                            "number": 119,
                            "height": ["4", "3"],
                            "weight": 86,
                            "types": ["Water"],
                            "HP": 80,
                            "Attack": 92,
                            "Defense": 65,
                            "Special": 65,
                            "Speed": 68,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 19
                                    }, {
                                        "move": "Horn Attack",
                                        "level": 24
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 30
                                    }, {
                                        "move": "Waterfall",
                                        "level": 39
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 48
                                    }, {
                                        "move": "Agility",
                                        "level": 54
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SEEL": {
                            "label": "Sea Lion",
                            "sprite": "Water",
                            "info": [
                                "The protruding horn on its head is very hard. It is used for bashing through thick ice."
                            ],
                            "evolvesInto": "Dewgong",
                            "evolvesVia": "Level 34",
                            "number": 86,
                            "height": ["3", "7"],
                            "weight": 198.4,
                            "types": ["Water"],
                            "HP": 65,
                            "Attack": 45,
                            "Defense": 55,
                            "Special": 45,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Headbutt",
                                        "level": 1
                                    }, {
                                        "move": "Growl",
                                        "level": 30
                                    }, {
                                        "move": "Aurora Beam",
                                        "level": 35
                                    }, {
                                        "move": "Rest",
                                        "level": 40
                                    }, {
                                        "move": "Take Down",
                                        "level": 45
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SHELLDER": {
                            "label": "Bivalve",
                            "sprite": "Water",
                            "info": [
                                "Its hard shell repels any kind of attack. It is vulnerable only when its shell is open."
                            ],
                            "evolvesInto": "Cloyster",
                            "evolvesVia": "use Water Stone",
                            "number": 90,
                            "height": ["1", "0"],
                            "weight": 8.8,
                            "types": ["Water"],
                            "HP": 30,
                            "Attack": 65,
                            "Defense": 100,
                            "Special": 45,
                            "Speed": 40,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Withdraw",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 18
                                    }, {
                                        "move": "Clamp",
                                        "level": 23
                                    }, {
                                        "move": "Aurora Beam",
                                        "level": 30
                                    }, {
                                        "move": "Leer",
                                        "level": 39
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 50
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SLOWBRO": {
                            "label": "Hermit Crab",
                            "sprite": "Water",
                            "info": [
                                "The SHELLDER that is latched onto SLOWPOKE's tail is said to feed on the host's left over scraps."
                            ],
                            "evolvesInto": "Slowking",
                            "evolvesVia": "trade holdingKing's Rock",
                            "number": 80,
                            "height": ["5", "3"],
                            "weight": 173.1,
                            "types": ["Water", "Psychic"],
                            "HP": 95,
                            "Attack": 75,
                            "Defense": 110,
                            "Special": 100,
                            "Speed": 30,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Headbutt",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 18
                                    }, {
                                        "move": "Headbutt",
                                        "level": 22
                                    }, {
                                        "move": "Growl",
                                        "level": 27
                                    }, {
                                        "move": "Water Gun",
                                        "level": 33
                                    }, {
                                        "move": "Withdraw",
                                        "level": 37
                                    }, {
                                        "move": "Amnesia",
                                        "level": 44
                                    }, {
                                        "move": "Psychic",
                                        "level": 55
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "Slowpoke": {
                            "label": "Dopey",
                            "sprite": "Water",
                            "info": [
                                "Incredibly slow and dopey. It takes 5 seconds for it to feel pain when under attack."
                            ],
                            "evolvesInto": "Slowbro",
                            "evolvesVia": "↗",
                            "number": 79,
                            "height": ["3", "11"],
                            "weight": 79.4,
                            "types": ["Water", "Psychic"],
                            "HP": 90,
                            "Attack": 65,
                            "Defense": 65,
                            "Special": 40,
                            "Speed": 15,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 18
                                    }, {
                                        "move": "Headbutt",
                                        "level": 22
                                    }, {
                                        "move": "Growl",
                                        "level": 27
                                    }, {
                                        "move": "Water Gun",
                                        "level": 33
                                    }, {
                                        "move": "Amnesia",
                                        "level": 40
                                    }, {
                                        "move": "Psychic",
                                        "level": 48
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SNORLAX": {
                            "label": "Sleeping",
                            "sprite": "Water",
                            "info": [
                                "Very lazy. Just eats and sleeps. As its rotund bulk builds, it becomes steadily more slothful."
                            ],
                            "number": 143,
                            "height": ["6", "11"],
                            "weight": 1014.1,
                            "types": ["Normal"],
                            "HP": 160,
                            "Attack": 110,
                            "Defense": 65,
                            "Special": 65,
                            "Speed": 30,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Amnesia",
                                        "level": 1
                                    }, {
                                        "move": "Headbutt",
                                        "level": 1
                                    }, {
                                        "move": "Rest",
                                        "level": 1
                                    }, {
                                        "move": "Body Slam",
                                        "level": 35
                                    }, {
                                        "move": "Harden",
                                        "level": 41
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 48
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 56
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Strength",
                                        "level": 4
                                    }],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Pay Day",
                                        "level": 16
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Metronome",
                                        "level": 35
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Rock Slide",
                                        "level": 48
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SPEAROW": {
                            "label": "Tiny Bird",
                            "sprite": "Water",
                            "info": [
                                "Eats bugs in grassy areas. It has to flap its short wings at high speed to stay airborne."
                            ],
                            "evolvesInto": "Fearow",
                            "evolvesVia": "Level 20",
                            "number": 21,
                            "height": ["1", "0"],
                            "weight": 4.4,
                            "types": ["Normal", "Flying"],
                            "HP": 40,
                            "Attack": 60,
                            "Defense": 30,
                            "Special": 31,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Peck",
                                        "level": 1
                                    }, {
                                        "move": "Leer",
                                        "level": 9
                                    }, {
                                        "move": "Fury Attack",
                                        "level": 15
                                    }, {
                                        "move": "Mirror Move",
                                        "level": 22
                                    }, {
                                        "move": "Drill Peck",
                                        "level": 29
                                    }, {
                                        "move": "Agility",
                                        "level": 36
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "SQUIRTLE": {
                            "label": "TinyTurtle",
                            "sprite": "Water",
                            "info": [
                                "After birth, its back swells and hardens into a shell.",
                                "Powerfully sprays foam from its mouth."
                            ],
                            "evolvesInto": "Wartortle",
                            "evolvesVia": "Level 16",
                            "number": 7,
                            "height": ["1", "8"],
                            "weight": 19.8,
                            "types": ["Water"],
                            "HP": 44,
                            "Attack": 48,
                            "Defense": 65,
                            "Special": 50,
                            "Speed": 43,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Bubble",
                                        "level": 8
                                    }, {
                                        "move": "Water Gun",
                                        "level": 15
                                    }, {
                                        "move": "Bite",
                                        "level": 22
                                    }, {
                                        "move": "Withdraw",
                                        "level": 28
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 35
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 42
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "STARMIE": {
                            "label": "Mysterious",
                            "sprite": "Water",
                            "info": [
                                "Its central core glows with the seven colors of the rainbow. Some people value the core as a gem."
                            ],
                            "number": 121,
                            "height": ["3", "7"],
                            "weight": 176.4,
                            "types": ["Water", "Psychic"],
                            "HP": 60,
                            "Attack": 75,
                            "Defense": 85,
                            "Special": 100,
                            "Speed": 115,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Harden",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }],
                                "hm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Surf",
                                        "level": 3
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }]
                            }
                        },
                        "STARYU": {
                            "label": "Star Shape",
                            "sprite": "Water",
                            "info": [
                                "An enigmatic %%%%%%%POKEMON%%%%%%% that can effortlessly regenerate any appendage it loses in battle."
                            ],
                            "evolvesInto": "Starmie",
                            "evolvesVia": "use Water Stone",
                            "number": 120,
                            "height": ["2", "7"],
                            "weight": 76.1,
                            "types": ["Water"],
                            "HP": 30,
                            "Attack": 45,
                            "Defense": 55,
                            "Special": 70,
                            "Speed": 85,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 17
                                    }, {
                                        "move": "Harden",
                                        "level": 22
                                    }, {
                                        "move": "Recover",
                                        "level": 27
                                    }, {
                                        "move": "Swift",
                                        "level": 32
                                    }, {
                                        "move": "Minimize",
                                        "level": 37
                                    }, {
                                        "move": "Light Screen",
                                        "level": 42
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 47
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Tri Attack",
                                        "level": 49
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "TANGELA": {
                            "label": "Vine",
                            "sprite": "Water",
                            "info": [
                                "The whole body is swathed with wide vines that are similar to seaweed. Its vines shake as it walks."
                            ],
                            "evolvesInto": "Tangrowth",
                            "evolvesVia": "after AncientPowerlearned",
                            "number": 114,
                            "height": ["3", "3"],
                            "weight": 77.2,
                            "types": ["Grass"],
                            "HP": 65,
                            "Attack": 55,
                            "Defense": 115,
                            "Special": 100,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bind",
                                        "level": 1
                                    }, {
                                        "move": "Constrict",
                                        "level": 1
                                    }, {
                                        "move": "Absorb",
                                        "level": 29
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 32
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 36
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 39
                                    }, {
                                        "move": "Slam",
                                        "level": 45
                                    }, {
                                        "move": "Growth",
                                        "level": 49
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "TAUROS": {
                            "label": "Wild Bull",
                            "sprite": "Water",
                            "info": [
                                "When it targets an enemy, it charges furiously while whipping its body with its long tails."
                            ],
                            "number": 128,
                            "height": ["4", "7"],
                            "weight": 194.9,
                            "types": ["Normal"],
                            "HP": 75,
                            "Attack": 100,
                            "Defense": 95,
                            "Special": 40,
                            "Speed": 110,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Stomp",
                                        "level": 21
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 28
                                    }, {
                                        "move": "Leer",
                                        "level": 35
                                    }, {
                                        "move": "Rage",
                                        "level": 44
                                    }, {
                                        "move": "Take Down",
                                        "level": 51
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Horn Drill",
                                        "level": 7
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Earthquake",
                                        "level": 26
                                    }, {
                                        "move": "Fissure",
                                        "level": 27
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "TENTACOOL": {
                            "label": "Jellyfish",
                            "sprite": "Water",
                            "info": [
                                "Drifts in shallow seas. Anglers who hook them by accident are often punished by its stinging acid."
                            ],
                            "evolvesInto": "Tentacruel",
                            "evolvesVia": "Level 30",
                            "number": 72,
                            "height": ["2", "11"],
                            "weight": 100.3,
                            "types": ["Water", "Poison"],
                            "HP": 40,
                            "Attack": 40,
                            "Defense": 35,
                            "Special": 50,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Acid",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 7
                                    }, {
                                        "move": "Wrap",
                                        "level": 13
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 18
                                    }, {
                                        "move": "Water Gun",
                                        "level": 22
                                    }, {
                                        "move": "Constrict",
                                        "level": 27
                                    }, {
                                        "move": "Barrier",
                                        "level": 33
                                    }, {
                                        "move": "Screech",
                                        "level": 40
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 48
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "TENTACRUEL": {
                            "label": "Jellyfish",
                            "sprite": "Water",
                            "info": [
                                "The tentacles are normally kept short. On hunts, they are extended to ensnare and immobilize prey."
                            ],
                            "number": 73,
                            "height": ["5", "3"],
                            "weight": 121.3,
                            "types": ["Water", "Poison"],
                            "HP": 80,
                            "Attack": 70,
                            "Defense": 65,
                            "Special": 80,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Acid",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 7
                                    }, {
                                        "move": "Wrap",
                                        "level": 13
                                    }, {
                                        "move": "Poison Sting",
                                        "level": 18
                                    }, {
                                        "move": "Water Gun",
                                        "level": 22
                                    }, {
                                        "move": "Constrict",
                                        "level": 27
                                    }, {
                                        "move": "Barrier",
                                        "level": 35
                                    }, {
                                        "move": "Screech",
                                        "level": 43
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 50
                                    }],
                                "hm": [
                                    {
                                        "move": "Cut",
                                        "level": 1
                                    }, {
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "VAPOREON": {
                            "label": "Bubble Jet",
                            "sprite": "Water",
                            "info": [
                                "Lives close to water. Its long tail is ridged with a fin which is often mistaken for a mermaid's."
                            ],
                            "evolvesInto": "Jolteon",
                            "evolvesVia": "↖",
                            "number": 134,
                            "height": ["3", "3"],
                            "weight": 63.9,
                            "types": ["Water"],
                            "HP": 130,
                            "Attack": 65,
                            "Defense": 60,
                            "Special": 110,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Quick Attack",
                                        "level": 1
                                    }, {
                                        "move": "Sand Attack",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Water Gun",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 27
                                    }, {
                                        "move": "Water Gun",
                                        "level": 31
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 37
                                    }, {
                                        "move": "Bite",
                                        "level": 40
                                    }, {
                                        "move": "Acid Armor",
                                        "level": 42
                                    }, {
                                        "move": "Haze",
                                        "level": 44
                                    }, {
                                        "move": "Mist",
                                        "level": 48
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 54
                                    }],
                                "hm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }],
                                "tm": [{
                                        "move": "Surf",
                                        "level": 3
                                    }]
                            }
                        },
                        "VENOMOTH": {
                            "label": "Poison Moth",
                            "sprite": "Water",
                            "info": [
                                "The dust-like scales covering its wings are color coded to indicate the kinds of poison it has."
                            ],
                            "number": 49,
                            "height": ["4", "11"],
                            "weight": 27.6,
                            "types": ["Bug", "Poison"],
                            "HP": 70,
                            "Attack": 65,
                            "Defense": 60,
                            "Special": 90,
                            "Speed": 90,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 24
                                    }, {
                                        "move": "Leech Life",
                                        "level": 27
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 30
                                    }, {
                                        "move": "Psybeam",
                                        "level": 38
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 43
                                    }, {
                                        "move": "Psychic",
                                        "level": 50
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Confusion",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 22
                                    }, {
                                        "move": "Leech Life",
                                        "level": 27
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 30
                                    }, {
                                        "move": "Psybeam",
                                        "level": 38
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 43
                                    }, {
                                        "move": "Psychic",
                                        "level": 50
                                    }]
                            }
                        },
                        "VENONAT": {
                            "label": "Insect",
                            "sprite": "Water",
                            "info": [
                                "Lives in the shadows of tall trees where it eats insects. It is attracted by light at night."
                            ],
                            "evolvesInto": "Venomoth",
                            "evolvesVia": "Level 31",
                            "number": 48,
                            "height": ["3", "3"],
                            "weight": 66.1,
                            "types": ["Bug", "Poison"],
                            "HP": 60,
                            "Attack": 55,
                            "Defense": 50,
                            "Special": 40,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 24
                                    }, {
                                        "move": "Leech Life",
                                        "level": 27
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 30
                                    }, {
                                        "move": "Psybeam",
                                        "level": 35
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 38
                                    }, {
                                        "move": "Psychic",
                                        "level": 43
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Psychic",
                                        "level": 29
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Psywave",
                                        "level": 46
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 11
                                    }, {
                                        "move": "Confusion",
                                        "level": 19
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 22
                                    }, {
                                        "move": "Leech Life",
                                        "level": 27
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 30
                                    }, {
                                        "move": "Psybeam",
                                        "level": 35
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 38
                                    }, {
                                        "move": "Psychic",
                                        "level": 43
                                    }]
                            }
                        },
                        "VENUSAUR": {
                            "label": "Seed",
                            "sprite": "Water",
                            "info": [
                                "The plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight."
                            ],
                            "number": 3,
                            "height": ["6", "7"],
                            "weight": 220.5,
                            "types": ["Grass", "Poison"],
                            "HP": 80,
                            "Attack": 82,
                            "Defense": 83,
                            "Special": 100,
                            "Speed": 80,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growl",
                                        "level": 1
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 1
                                    }, {
                                        "move": "Leech Seed",
                                        "level": 7
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 22
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 30
                                    }, {
                                        "move": "Growth",
                                        "level": 43
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 55
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 65
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "VICTREEBEL": {
                            "label": "Flycatcher",
                            "sprite": "Water",
                            "info": [
                                "Said to live in huge colonies deep in jungles, although no one has ever returned from there."
                            ],
                            "number": 71,
                            "height": ["5", "7"],
                            "weight": 34.2,
                            "types": ["Grass", "Poison"],
                            "HP": 80,
                            "Attack": 105,
                            "Defense": 65,
                            "Special": 100,
                            "Speed": 70,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Acid",
                                        "level": 1
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 1
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 18
                                    }],
                                "hm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }],
                                "tm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }]
                            }
                        },
                        "VILEPLUME": {
                            "label": "Flower",
                            "sprite": "Water",
                            "info": [
                                "The larger its petals, the more toxic pollen it contains. Its big head is heavy and hard to hold up."
                            ],
                            "evolvesInto": "Bellossom",
                            "evolvesVia": "use Sun Stone",
                            "number": 45,
                            "height": ["3", "11"],
                            "weight": 41,
                            "types": ["Grass", "Poison"],
                            "HP": 75,
                            "Attack": 80,
                            "Defense": 85,
                            "Special": 110,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Acid",
                                        "level": 1
                                    }, {
                                        "move": "Petal Dance",
                                        "level": 1
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 1
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 1
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 17
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 19
                                    }],
                                "hm": [],
                                "tm": [{
                                        "move": "Cut",
                                        "level": 1
                                    }]
                            }
                        },
                        "VOLTORB": {
                            "label": "Ball",
                            "sprite": "Water",
                            "info": [
                                "Usually found in power plants. Easily mistaken for a POKÃ© BALL, they have zapped many people."
                            ],
                            "evolvesInto": "Electrode",
                            "evolvesVia": "Level 30",
                            "number": 100,
                            "height": ["1", "8"],
                            "weight": 22.9,
                            "types": ["Electric"],
                            "HP": 40,
                            "Attack": 30,
                            "Defense": 50,
                            "Special": 55,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Screech",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sonic Boom",
                                        "level": 17
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 22
                                    }, {
                                        "move": "Light Screen",
                                        "level": 29
                                    }, {
                                        "move": "Swift",
                                        "level": 36
                                    }, {
                                        "move": "Explosion",
                                        "level": 43
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Teleport",
                                        "level": 30
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "VULPIX": {
                            "label": "Fox",
                            "sprite": "Water",
                            "info": [
                                "At the time of birth, it has just one tail. The tail splits from its tip as it grows older."
                            ],
                            "evolvesInto": "Ninetales",
                            "evolvesVia": "use Fire Stone",
                            "number": 37,
                            "height": ["2", "0"],
                            "weight": 21.8,
                            "types": ["Fire"],
                            "HP": 38,
                            "Attack": 41,
                            "Defense": 40,
                            "Special": 50,
                            "Speed": 65,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 16
                                    }, {
                                        "move": "Roar",
                                        "level": 21
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 28
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 42
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Ember",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Quick Attack",
                                        "level": 16
                                    }, {
                                        "move": "Roar",
                                        "level": 21
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 28
                                    }, {
                                        "move": "Flamethrower",
                                        "level": 35
                                    }, {
                                        "move": "Fire Spin",
                                        "level": 42
                                    }]
                            }
                        },
                        "WARTORTLE": {
                            "label": "Turtle",
                            "sprite": "Water",
                            "info": [
                                "Often hides in water to stalk unwary prey. For swimming fast, it moves its ears to maintain balance."
                            ],
                            "evolvesInto": "Blastoise",
                            "evolvesVia": "Level 36",
                            "number": 8,
                            "height": ["3", "3"],
                            "weight": 49.6,
                            "types": ["Water"],
                            "HP": 59,
                            "Attack": 63,
                            "Defense": 80,
                            "Special": 65,
                            "Speed": 58,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Bubble",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Tail Whip",
                                        "level": 1
                                    }, {
                                        "move": "Bubble",
                                        "level": 8
                                    }, {
                                        "move": "Water Gun",
                                        "level": 15
                                    }, {
                                        "move": "Bite",
                                        "level": 24
                                    }, {
                                        "move": "Withdraw",
                                        "level": 31
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 39
                                    }, {
                                        "move": "Hydro Pump",
                                        "level": 47
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Mega Punch",
                                        "level": 1
                                    }, {
                                        "move": "Mega Kick",
                                        "level": 5
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Body Slam",
                                        "level": 8
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Bubble Beam",
                                        "level": 11
                                    }, {
                                        "move": "Water Gun",
                                        "level": 12
                                    }, {
                                        "move": "Ice Beam",
                                        "level": 13
                                    }, {
                                        "move": "Blizzard",
                                        "level": 14
                                    }, {
                                        "move": "Submission",
                                        "level": 17
                                    }, {
                                        "move": "Counter",
                                        "level": 18
                                    }, {
                                        "move": "Seismic Toss",
                                        "level": 19
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Dig",
                                        "level": 28
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Skull Bash",
                                        "level": 40
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "WEEDLE": {
                            "label": "Hairy Bug",
                            "sprite": "Water",
                            "info": [
                                "Often found in forests, eating leaves. It has a sharp venomous stinger on its head."
                            ],
                            "evolvesInto": "Kakuna",
                            "evolvesVia": "Level 7",
                            "number": 13,
                            "height": ["1", "0"],
                            "weight": 7.1,
                            "types": ["Bug", "Poison"],
                            "HP": 40,
                            "Attack": 35,
                            "Defense": 30,
                            "Special": 20,
                            "Speed": 50,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Poison Sting",
                                        "level": 1
                                    }, {
                                        "move": "String Shot",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": []
                            }
                        },
                        "WEEPINBELL": {
                            "label": "Flycatcher",
                            "sprite": "Water",
                            "info": [
                                "It spits out POISONPOWDER to immobilize the enemy and then finishes it with a spray of ACID."
                            ],
                            "evolvesInto": "Victreebel",
                            "evolvesVia": "use Leaf Stone",
                            "number": 70,
                            "height": ["3", "3"],
                            "weight": 14.1,
                            "types": ["Grass", "Poison"],
                            "HP": 65,
                            "Attack": 90,
                            "Defense": 50,
                            "Special": 85,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Growth",
                                        "level": 1
                                    }, {
                                        "move": "Vine Whip",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 1
                                    }, {
                                        "move": "Wrap",
                                        "level": 13
                                    }, {
                                        "move": "Poison Powder",
                                        "level": 15
                                    }, {
                                        "move": "Sleep Powder",
                                        "level": 18
                                    }, {
                                        "move": "Stun Spore",
                                        "level": 23
                                    }, {
                                        "move": "Acid",
                                        "level": 29
                                    }, {
                                        "move": "Razor Leaf",
                                        "level": 38
                                    }, {
                                        "move": "Slam",
                                        "level": 49
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Swords Dance",
                                        "level": 3
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Mega Drain",
                                        "level": 21
                                    }, {
                                        "move": "Solar Beam",
                                        "level": 22
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "WEEZING": {
                            "label": "Poison Gas",
                            "sprite": "Water",
                            "info": [
                                "Where two kinds of poison gases meet, 2 KOFFINGs can fuse into a WEEZING over many years."
                            ],
                            "number": 110,
                            "height": ["3", "11"],
                            "weight": 20.9,
                            "types": ["Poison"],
                            "HP": 65,
                            "Attack": 90,
                            "Defense": 120,
                            "Special": 85,
                            "Speed": 60,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Sludge",
                                        "level": 1
                                    }, {
                                        "move": "Smog",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sludge",
                                        "level": 32
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 39
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 43
                                    }, {
                                        "move": "Haze",
                                        "level": 49
                                    }, {
                                        "move": "Explosion",
                                        "level": 53
                                    }],
                                "hm": [
                                    {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 36
                                    }, {
                                        "move": "Fire Blast",
                                        "level": 38
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Explosion",
                                        "level": 47
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }],
                                "tm": [
                                    {
                                        "move": "Sludge",
                                        "level": 1
                                    }, {
                                        "move": "Smog",
                                        "level": 1
                                    }, {
                                        "move": "Tackle",
                                        "level": 1
                                    }, {
                                        "move": "Sludge",
                                        "level": 32
                                    }, {
                                        "move": "Smokescreen",
                                        "level": 39
                                    }, {
                                        "move": "Self-Destruct",
                                        "level": 43
                                    }, {
                                        "move": "Haze",
                                        "level": 49
                                    }, {
                                        "move": "Explosion",
                                        "level": 53
                                    }]
                            }
                        },
                        "WIGGLYTUFF": {
                            "label": "Balloon",
                            "sprite": "Water",
                            "info": [
                                "The body is soft and rubbery. When angered, it will suck in air and inflate itself to an enormous size."
                            ],
                            "number": 40,
                            "height": ["3", "3"],
                            "weight": 26.5,
                            "types": ["Normal", "Fairy"],
                            "HP": 140,
                            "Attack": 70,
                            "Defense": 45,
                            "Special": 85,
                            "Speed": 45,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Defense Curl",
                                        "level": 1
                                    }, {
                                        "move": "Disable",
                                        "level": 1
                                    }, {
                                        "move": "Double Slap",
                                        "level": 1
                                    }, {
                                        "move": "Sing",
                                        "level": 1
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Strength",
                                        "level": 4
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }]
                            }
                        },
                        "ZAPDOS": {
                            "label": "Electric",
                            "sprite": "Water",
                            "info": [
                                "A legendary bird %%%%%%%POKEMON%%%%%%% that is said to appear from clouds while dropping enormous lightning bolts."
                            ],
                            "number": 145,
                            "height": ["5", "3"],
                            "weight": 116,
                            "types": ["Electric", "Flying"],
                            "HP": 90,
                            "Attack": 90,
                            "Defense": 85,
                            "Special": 125,
                            "Speed": 100,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Drill Peck",
                                        "level": 1
                                    }, {
                                        "move": "Thunder Shock",
                                        "level": 1
                                    }, {
                                        "move": "Thunder",
                                        "level": 51
                                    }, {
                                        "move": "Agility",
                                        "level": 55
                                    }, {
                                        "move": "Light Screen",
                                        "level": 60
                                    }],
                                "hm": [
                                    {
                                        "move": "Fly",
                                        "level": 2
                                    }, {
                                        "move": "Flash",
                                        "level": 5
                                    }],
                                "tm": [
                                    {
                                        "move": "Razor Wind",
                                        "level": 2
                                    }, {
                                        "move": "Whirlwind",
                                        "level": 4
                                    }, {
                                        "move": "Toxic",
                                        "level": 6
                                    }, {
                                        "move": "Take Down",
                                        "level": 9
                                    }, {
                                        "move": "Double-Edge",
                                        "level": 10
                                    }, {
                                        "move": "Hyper Beam",
                                        "level": 15
                                    }, {
                                        "move": "Rage",
                                        "level": 20
                                    }, {
                                        "move": "Thunderbolt",
                                        "level": 24
                                    }, {
                                        "move": "Thunder",
                                        "level": 25
                                    }, {
                                        "move": "Mimic",
                                        "level": 31
                                    }, {
                                        "move": "Double Team",
                                        "level": 32
                                    }, {
                                        "move": "Reflect",
                                        "level": 33
                                    }, {
                                        "move": "Bide",
                                        "level": 34
                                    }, {
                                        "move": "Swift",
                                        "level": 39
                                    }, {
                                        "move": "Sky Attack",
                                        "level": 43
                                    }, {
                                        "move": "Rest",
                                        "level": 44
                                    }, {
                                        "move": "Thunder Wave",
                                        "level": 45
                                    }, {
                                        "move": "Substitute",
                                        "level": 50
                                    }]
                            }
                        },
                        "ZUBAT": {
                            "label": "Bat",
                            "sprite": "Water",
                            "info": [
                                "Forms colonies in perpetually dark places. Uses ultrasonic waves to identify and approach targets."
                            ],
                            "evolvesInto": "Golbat",
                            "evolvesVia": "Level 22",
                            "number": 41,
                            "height": ["2", "7"],
                            "weight": 16.5,
                            "types": ["Poison", "Flying"],
                            "HP": 40,
                            "Attack": 45,
                            "Defense": 35,
                            "Special": 30,
                            "Speed": 55,
                            "moves": {
                                "natural": [
                                    {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 15
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 28
                                    }, {
                                        "move": "Haze",
                                        "level": 36
                                    }],
                                "hm": [],
                                "tm": [
                                    {
                                        "move": "Leech Life",
                                        "level": 1
                                    }, {
                                        "move": "Supersonic",
                                        "level": 10
                                    }, {
                                        "move": "Bite",
                                        "level": 15
                                    }, {
                                        "move": "Confuse Ray",
                                        "level": 21
                                    }, {
                                        "move": "Wing Attack",
                                        "level": 28
                                    }, {
                                        "move": "Haze",
                                        "level": 36
                                    }]
                            }
                        }
                    },
                    /**
                     * Run on http://www.smogon.com/dex/rb/moves/
                     * NOTE: Effects added in manually
                     * * Swords Dance, Sleep Powder
                     *
                     * var output = {};
                     *
                     * function tryNumber(string) {
                     *     return isNaN(Number(string)) ? string : Number(string);
                     * }
                     *
                     * Array.prototype.slice.call(document.querySelectorAll("tr")).map(function (row) {
                     *     output[row.children[0].innerText.trim()] = {
                     *         "type": row.children[1].innerText.trim(),
                     *         "damage": tryNumber(row.children[2].children[0].className.replace("damage-category-block ", "")),
                     *         "power": tryNumber(row.children[3].innerText.split(/\s+/g)[1]),
                     *         "accuracy": tryNumber(row.children[4].innerText.split(/\s+/g)[1]),
                     *         "pp": tryNumber(row.children[5].innerText.split(/\s+/g)[1]),
                     *         "description": row.children[6].innerText
                     *     };
                     * });
                     *
                     * JSON.stringify(output);
                     */
                    "moves": {
                        "Absorb": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Leeches 50% of the damage dealt."
                        },
                        "Acid": {
                            "type": "Poison",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "10% chance to lower the target's Defense by one stage."
                        },
                        "Acid Armor": {
                            "type": "Poison",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "Boosts the user's Defense by two stages."
                        },
                        "Agility": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Boosts the user's Speed by two stages. Negates the Speed drop of paralysis."
                        },
                        "Amnesia": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Boosts the user's Special by two stages."
                        },
                        "Aurora Beam": {
                            "type": "Ice",
                            "damage": "Special",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "10% chance to lower the user's Attack by one stage."
                        },
                        "Barrage": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "Hits two to five times."
                        },
                        "Barrier": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Boosts the user's Defense by two stages."
                        },
                        "Bide": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Charges for two to three turns; returns double the damage received in those turns."
                        },
                        "Bind": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "75%",
                            "PP": 20,
                            "description": "Prevents the opponent from attacking and deals damage to it at the end of every turn for two to five turns."
                        },
                        "Bite": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 60,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "10% chance of causing the target to flinch."
                        },
                        "Blizzard": {
                            "type": "Ice",
                            "damage": "Special",
                            "power": 120,
                            "accuracy": "90%",
                            "PP": 5,
                            "description": "10% chance to freeze the target."
                        },
                        "Body Slam": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 85,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "30% chance to paralyze the target."
                        },
                        "Bone Club": {
                            "type": "Ground",
                            "damage": "Physical",
                            "power": 65,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "10% chance of causing the target to flinch."
                        },
                        "Bonemerang": {
                            "type": "Ground",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "90%",
                            "PP": 10,
                            "description": "Hits twice."
                        },
                        "Bubble": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "10% chance to lower the target's Speed by one stage."
                        },
                        "Bubble Beam": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "10% chance to lower the target's Speed by one stage."
                        },
                        "Clamp": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 35,
                            "accuracy": "75%",
                            "PP": 10,
                            "description": "Prevents the opponent from attacking and deals damage to it at the end of every turn for two to five turns."
                        },
                        "Comet Punch": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 18,
                            "accuracy": "85%",
                            "PP": 15,
                            "description": "Hits two to five times."
                        },
                        "Confuse Ray": {
                            "type": "Ghost",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "Confuses the target."
                        },
                        "Confusion": {
                            "type": "Psychic",
                            "damage": "Special",
                            "power": 50,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "10% chance to confuse the target."
                        },
                        "Constrict": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 10,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "10% chance to lower the target Speed by one stage."
                        },
                        "Conversion": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Changes the user into the opponent's type."
                        },
                        "Counter": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "If hit by a Normal- or Fighting-type attack, deals double the damage taken."
                        },
                        "Crabhammer": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 90,
                            "accuracy": "85%",
                            "PP": 10,
                            "description": "High critical hit rate."
                        },
                        "Cut": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "95%",
                            "PP": 30,
                            "description": "No additional effect.",
                            "partyActivate": FullScreenPokemon.Animations.prototype.partyActivateCut,
                            "characterName": "CuttableTree",
                            "requiredBadge": "Cascade"
                        },
                        "Defense Curl": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "Boosts the user's Defense by one stage."
                        },
                        "Dig": {
                            "type": "Ground",
                            "damage": "Physical",
                            "power": 100,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "User is made invulnerable for one turn, then hits the next turn."
                        },
                        "Disable": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "55%",
                            "PP": 20,
                            "description": "Randomly disables a foe's move for 0-6 turns."
                        },
                        "Dizzy Punch": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 70,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Double Kick": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 30,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "Hits twice."
                        },
                        "Double Slap": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "85%",
                            "PP": 10,
                            "description": "Hits two to five times."
                        },
                        "Double Team": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 15,
                            "description": "Boosts the user's evasion by one stage."
                        },
                        "Double-Edge": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 100,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Has 1/4 recoil."
                        },
                        "Dragon Rage": {
                            "type": "Dragon",
                            "damage": "Special",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "Always does 40 HP damage."
                        },
                        "Dream Eater": {
                            "type": "Psychic",
                            "damage": "Special",
                            "power": 100,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Leeches 50% of the damage dealt. Only works if the target is asleep."
                        },
                        "Drill Peck": {
                            "type": "Flying",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "No additional effect."
                        },
                        "Earthquake": {
                            "type": "Ground",
                            "damage": "Physical",
                            "power": 100,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Egg Bomb": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 100,
                            "accuracy": "75%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Ember": {
                            "type": "Fire",
                            "damage": "Special",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "10% chance to burn the target."
                        },
                        "Explosion": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 170,
                            "accuracy": "100%",
                            "PP": 5,
                            "description": "Faints the user."
                        },
                        "Fire Blast": {
                            "type": "Fire",
                            "damage": "Special",
                            "power": 120,
                            "accuracy": "85%",
                            "PP": 5,
                            "description": "30% chance to burn the target."
                        },
                        "Fire Punch": {
                            "type": "Fire",
                            "damage": "Special",
                            "power": 75,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "10% chance to burn the target."
                        },
                        "Fire Spin": {
                            "type": "Fire",
                            "damage": "Special",
                            "power": 15,
                            "accuracy": "70%",
                            "PP": 15,
                            "description": "Prevents the opponent from attacking and deals damage to it at the end of every turn for two to five turns."
                        },
                        "Fissure": {
                            "type": "Ground",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "30%",
                            "PP": 5,
                            "description": "OHKOes the target."
                        },
                        "Flamethrower": {
                            "type": "Fire",
                            "damage": "Special",
                            "power": 95,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "10% chance to burn the target."
                        },
                        "Flash": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "70%",
                            "PP": 20,
                            "description": "Lowers the target's accuracy by one stage.",
                            "requiredBadge": "Boulder"
                        },
                        "Fly": {
                            "type": "Flying",
                            "damage": "Physical",
                            "power": 70,
                            "accuracy": "95%",
                            "PP": 15,
                            "description": "User is made invulnerable for one turn, then hits the next turn.",
                            "requiredBadge": "Thunder"
                        },
                        "Focus Energy": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Reduces the user's critical hit rate."
                        },
                        "Fury Attack": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "Hits two to five times."
                        },
                        "Fury Swipes": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 18,
                            "accuracy": "80%",
                            "PP": 15,
                            "description": "Hits two to five times."
                        },
                        "Glare": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "75%",
                            "PP": 30,
                            "description": "Paralyzes the target."
                        },
                        "Growl": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 40,
                            "description": "Lowers the target's Attack by one stage."
                        },
                        "Growth": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "Boosts Special one stage."
                        },
                        "Guillotine": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "30%",
                            "PP": 5,
                            "description": "OHKOes the target."
                        },
                        "Gust": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Harden": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Boosts the user's Defense by one stage."
                        },
                        "Haze": {
                            "type": "Ice",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Eliminates all stat changes."
                        },
                        "Headbutt": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 70,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "30% chance of causing the target to flinch."
                        },
                        "High Jump Kick": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 85,
                            "accuracy": "90%",
                            "PP": 20,
                            "description": "User takes 1 HP recoil if attack misses or fails."
                        },
                        "Horn Attack": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "No additional effect."
                        },
                        "Horn Drill": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "30%",
                            "PP": 5,
                            "description": "OHKOes the target."
                        },
                        "Hydro Pump": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 120,
                            "accuracy": "80%",
                            "PP": 5,
                            "description": "No additional effect."
                        },
                        "Hyper Beam": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 150,
                            "accuracy": "90%",
                            "PP": 5,
                            "description": "User cannot move next turn, unless opponent or Substitute was KOed."
                        },
                        "Hyper Fang": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "90%",
                            "PP": 15,
                            "description": "10% chance of causing the target to flinch."
                        },
                        "Hypnosis": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "60%",
                            "PP": 20,
                            "description": "Puts the foe to sleep."
                        },
                        "Ice Beam": {
                            "type": "Ice",
                            "damage": "Special",
                            "power": 95,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "10% chance to freeze."
                        },
                        "Ice Punch": {
                            "type": "Ice",
                            "damage": "Special",
                            "power": 75,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "10% chance to freeze."
                        },
                        "Jump Kick": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 70,
                            "accuracy": "95%",
                            "PP": 25,
                            "description": "User takes 1 HP recoil if attack misses."
                        },
                        "Karate Chop": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "High critical hit rate."
                        },
                        "Kinesis": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "80%",
                            "PP": 15,
                            "description": "Lowers the target's accuracy by one stage."
                        },
                        "Leech Life": {
                            "type": "Bug",
                            "damage": "Physical",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Leeches 50% of the damage dealt."
                        },
                        "Leech Seed": {
                            "type": "Grass",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "90%",
                            "PP": 10,
                            "description": "Leeches 1/16 of the target's HP each turn."
                        },
                        "Leer": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "Lowers the target's Defense by one stage."
                        },
                        "Lick": {
                            "type": "Ghost",
                            "damage": "Physical",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "30% chance to paralyze the target."
                        },
                        "Light Screen": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Halves Special damage done to user."
                        },
                        "Lovely Kiss": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "75%",
                            "PP": 10,
                            "description": "Puts the target to sleep."
                        },
                        "Low Kick": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "90%",
                            "PP": 20,
                            "description": "30% chance of causing the target to flinch foe."
                        },
                        "Meditate": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "Boosts the user's Attack by one stage."
                        },
                        "Mega Drain": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "Leeches 50% of the damage dealt."
                        },
                        "Mega Kick": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 120,
                            "accuracy": "75%",
                            "PP": 5,
                            "description": "No additional effect."
                        },
                        "Mega Punch": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "No additional effect."
                        },
                        "Metronome": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Uses a random move."
                        },
                        "Mimic": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Copies a random move the foe knows."
                        },
                        "Minimize": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Boosts the user's evasion by one stage."
                        },
                        "Mirror Move": {
                            "type": "Flying",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Use the move the foe just used."
                        },
                        "Mist": {
                            "type": "Ice",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Prevents moves that only lower stats from working for 5 turns."
                        },
                        "Night Shade": {
                            "type": "Ghost",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Deals damage equal to the user's level."
                        },
                        "Pay Day": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "No competitive effect."
                        },
                        "Peck": {
                            "type": "Flying",
                            "damage": "Physical",
                            "power": 35,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Petal Dance": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 70,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Repeats for two to three turns. Confuses the user at the end."
                        },
                        "Pin Missile": {
                            "type": "Bug",
                            "damage": "Physical",
                            "power": 14,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "Hits two to five times."
                        },
                        "Poison Gas": {
                            "type": "Poison",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "55%",
                            "PP": 40,
                            "description": "Poisons the target."
                        },
                        "Poison Powder": {
                            "type": "Poison",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "75%",
                            "PP": 35,
                            "description": "Poisons the target."
                        },
                        "Poison Sting": {
                            "type": "Poison",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "20% chance to poison the target."
                        },
                        "Pound": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Psybeam": {
                            "type": "Psychic",
                            "damage": "Special",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "10% chance to confuse the target."
                        },
                        "Psychic": {
                            "type": "Psychic",
                            "damage": "Special",
                            "power": 90,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "30% chance to lower the target's Special by one stage."
                        },
                        "Psywave": {
                            "type": "Psychic",
                            "damage": "Special",
                            "power": "-",
                            "accuracy": "80%",
                            "PP": 15,
                            "description": "Does random damage equal to .5x-1.5x the user's level."
                        },
                        "Quick Attack": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "Priority +1.",
                            "priority": 1
                        },
                        "Rage": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Boosts Attack by one stage if hit, but can only use Rage after that."
                        },
                        "Razor Leaf": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 55,
                            "accuracy": "95%",
                            "PP": 25,
                            "description": "High critical hit rate."
                        },
                        "Razor Wind": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "75%",
                            "PP": 10,
                            "description": "Charges first turn; attacks on the second."
                        },
                        "Recover": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Heals 50% of the user's max HP."
                        },
                        "Reflect": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Lowers the physical damage done to user."
                        },
                        "Rest": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "The user goes to sleep for two turns, restoring all HP."
                        },
                        "Roar": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Has no effect."
                        },
                        "Rock Slide": {
                            "type": "Rock",
                            "damage": "Physical",
                            "power": 75,
                            "accuracy": "90%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Rock Throw": {
                            "type": "Rock",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "90%",
                            "PP": 15,
                            "description": "No additional effect."
                        },
                        "Rolling Kick": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 60,
                            "accuracy": "85%",
                            "PP": 15,
                            "description": "30% chance of causing the target to flinch."
                        },
                        "Sand Attack": {
                            "type": "Ground",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Lowers the target's accuracy by one stage."
                        },
                        "Scratch": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Screech": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "85%",
                            "PP": 40,
                            "description": "Lowers the target's Defense by two stages."
                        },
                        "Seismic Toss": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Deals damage equal to the user's level."
                        },
                        "Self-Destruct": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 130,
                            "accuracy": "100%",
                            "PP": 5,
                            "description": "Faints the user."
                        },
                        "Sharpen": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Boosts the user's Attack by one stage."
                        },
                        "Sing": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "55%",
                            "PP": 15,
                            "description": "Puts the target to sleep."
                        },
                        "Skull Bash": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 100,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Charges turn one; attacks turn two."
                        },
                        "Sky Attack": {
                            "type": "Flying",
                            "damage": "Physical",
                            "power": 140,
                            "accuracy": "90%",
                            "PP": 5,
                            "description": "Hits the turn after being used."
                        },
                        "Slam": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "75%",
                            "PP": 20,
                            "description": "No additional effect."
                        },
                        "Slash": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 70,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "High critical hit rate."
                        },
                        "Sleep Powder": {
                            "type": "Grass",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "75%",
                            "PP": 15,
                            "status": "Sleep",
                            "description": "Puts the target to sleep."
                        },
                        "Sludge": {
                            "type": "Poison",
                            "damage": "Physical",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "29.7% chance to poison the target."
                        },
                        "Smog": {
                            "type": "Poison",
                            "damage": "Physical",
                            "power": 20,
                            "accuracy": "70%",
                            "PP": 20,
                            "description": "40% chance to poison the target."
                        },
                        "Smokescreen": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Lowers the target's accuracy by one stage."
                        },
                        "Soft-Boiled": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Heals 50% of the user's max HP."
                        },
                        "Solar Beam": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 120,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "Charges turn 1; attacks turn 2."
                        },
                        "Sonic Boom": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "90%",
                            "PP": 20,
                            "description": "Does 20 damage. Ghosts take regular damage."
                        },
                        "Spike Cannon": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 20,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Hits two to five times."
                        },
                        "Splash": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "No effect whatsoever."
                        },
                        "Spore": {
                            "type": "Grass",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "Puts the target to sleep."
                        },
                        "Stomp": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 65,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "30% chance of causing the target to flinch."
                        },
                        "Strength": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "No additional effect.",
                            "partyActivate": FullScreenPokemon.Animations.prototype.partyActivateStrength,
                            "characterName": "StrengthBoulder",
                            "requiredBadge": "Rainbow"
                        },
                        "String Shot": {
                            "type": "Bug",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "95%",
                            "PP": 40,
                            "description": "Lowers the target's Speed by one stage."
                        },
                        "Struggle": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 50,
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Has 1/2 recoil. Ghost-types take damage."
                        },
                        "Stun Spore": {
                            "type": "Grass",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "75%",
                            "PP": 30,
                            "description": "Paralyzes the target."
                        },
                        "Submission": {
                            "type": "Fighting",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "80%",
                            "PP": 25,
                            "description": "Has 1/4 recoil."
                        },
                        "Substitute": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Takes 1/4 the user's max HP to create a Substitute that takes damage for the user."
                        },
                        "Super Fang": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": "-",
                            "accuracy": "90%",
                            "PP": 10,
                            "description": "Deals damage equal to half the target's current HP."
                        },
                        "Supersonic": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "55%",
                            "PP": 20,
                            "description": "Confuses the target."
                        },
                        "Surf": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 95,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "No additional effect.",
                            "partyActivate": FullScreenPokemon.Animations.prototype.partyActivateSurf,
                            "characterName": "WaterEdge",
                            "requiredBadge": "Soul"
                        },
                        "Swift": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 60,
                            "accuracy": "-",
                            "PP": 20,
                            "description": "Always hits."
                        },
                        "Swords Dance": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 30,
                            "description": "Boosts the user's Attack by two stages.",
                            "effect": "Raise",
                            "raise": "Attack",
                            "amount": 1
                        },
                        "Tackle": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 35,
                            "accuracy": "95%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Tail Whip": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "Lowers the Defense of all opposing adjacent Pokemon by one stage."
                        },
                        "Take Down": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 90,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "Has 1/4 recoil."
                        },
                        "Teleport": {
                            "type": "Psychic",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 20,
                            "description": "No competitive effect."
                        },
                        "Thrash": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 90,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Repeats for three to four turns. Confuses the user at the end."
                        },
                        "Thunder": {
                            "type": "Electric",
                            "damage": "Special",
                            "power": 120,
                            "accuracy": "70%",
                            "PP": 10,
                            "description": "10% chance to paralyze the target."
                        },
                        "Thunder Punch": {
                            "type": "Electric",
                            "damage": "Special",
                            "power": 75,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "10% chance to paralyze the target."
                        },
                        "Thunder Shock": {
                            "type": "Electric",
                            "damage": "Special",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "10% chance to paralyze the target."
                        },
                        "Thunder Wave": {
                            "type": "Electric",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Paralyzes the target."
                        },
                        "Thunderbolt": {
                            "type": "Electric",
                            "damage": "Special",
                            "power": 95,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "10% chance to paralyze the target."
                        },
                        "Toxic": {
                            "type": "Poison",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "85%",
                            "PP": 10,
                            "description": "Badly poisons the target."
                        },
                        "Transform": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 10,
                            "description": "Transforms the user into the target, copying its type, stats, stat changes, moves, and ability."
                        },
                        "Tri Attack": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 80,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Twineedle": {
                            "type": "Bug",
                            "damage": "Physical",
                            "power": 25,
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Hits twice. Each hit has a 20% chance to poison the target."
                        },
                        "Vice Grip": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 55,
                            "accuracy": "100%",
                            "PP": 30,
                            "description": "No additional effect."
                        },
                        "Vine Whip": {
                            "type": "Grass",
                            "damage": "Special",
                            "power": 35,
                            "accuracy": "100%",
                            "PP": 10,
                            "description": "No additional effect."
                        },
                        "Water Gun": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 40,
                            "accuracy": "100%",
                            "PP": 25,
                            "description": "No additional effect."
                        },
                        "Waterfall": {
                            "type": "Water",
                            "damage": "Special",
                            "power": 80,
                            "accuracy": "100%",
                            "PP": 15,
                            "description": "No additional effect."
                        },
                        "Whirlwind": {
                            "type": "Normal",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "100%",
                            "PP": 20,
                            "description": "Has no effect."
                        },
                        "Wing Attack": {
                            "type": "Flying",
                            "damage": "Physical",
                            "power": 35,
                            "accuracy": "100%",
                            "PP": 35,
                            "description": "No additional effect."
                        },
                        "Withdraw": {
                            "type": "Water",
                            "damage": "Non-Damaging",
                            "power": "-",
                            "accuracy": "-",
                            "PP": 40,
                            "description": "Boosts the user's Defense by one stage."
                        },
                        "Wrap": {
                            "type": "Normal",
                            "damage": "Physical",
                            "power": 15,
                            "accuracy": "85%",
                            "PP": 20,
                            "description": "Prevents the opponent from attacking and deals damage to it at the end of every turn for two to five turns."
                        }
                    },
                    "items": {
                        "Antidote": {
                            "price": 100,
                            "effect": "Cures Poison",
                            "category": "Main"
                        },
                        "Awakening": {
                            "price": 250,
                            "effect": "Cures Sleep",
                            "category": "Main"
                        },
                        "Burn Heal": {
                            "price": 250,
                            "effect": "Cures Burn",
                            "category": "Main"
                        },
                        "Calcium": {
                            "price": 9800,
                            "effect": "Raises Special Attack",
                            "category": "Main"
                        },
                        "Carbos": {
                            "price": 9800,
                            "effect": "Raises Speed",
                            "category": "Main"
                        },
                        "Dire Hit": {
                            "price": 650,
                            "effect": "Raises chances of a Critical Hit in battle",
                            "category": "Main"
                        },
                        "Elixir": {
                            "price": undefined,
                            "effect": "Restores 10PP to each move",
                            "category": "Main"
                        },
                        "Escape Rope": {
                            "price": 550,
                            "effect": "Escape from the current cave",
                            "category": "Main"
                        },
                        "Ether": {
                            "effect": "Restores 10PP of one move",
                            "category": "Main"
                        },
                        "Fire Stone": {
                            "price": 2100,
                            "effect": "Evolves Eevee, Growlithe and Vulpix",
                            "category": "Main"
                        },
                        "Fresh Water": {
                            "price": 200,
                            "effect": "Recovers 50HP",
                            "category": "Main"
                        },
                        "Full Heal": {
                            "price": 600,
                            "effect": "Cures all status ailments",
                            "category": "Main"
                        },
                        "Full Restore": {
                            "price": 3000,
                            "effect": "Restores all HP and cures all status ailments",
                            "category": "Main"
                        },
                        "Guard Spec": {
                            "price": 700,
                            "effect": "Prevents stat reduction in a battle",
                            "category": "Main"
                        },
                        "HP Up": {
                            "price": 9800,
                            "effect": "Raises max HP",
                            "category": "Main"
                        },
                        "Hyper Potion": {
                            "price": 1200,
                            "effect": "Restores 200HP",
                            "category": "Main"
                        },
                        "Ice Heal": {
                            "price": 250,
                            "effect": "Cures Freeze",
                            "category": "Main"
                        },
                        "Iron": {
                            "price": 9800,
                            "effect": "Raises Defense",
                            "category": "Main"
                        },
                        "Leaf Stone": {
                            "effect": "Evolves Exeggcute, Gloom, and Weepinbell",
                            "category": "Main"
                        },
                        "Lemonade": {
                            "price": 350,
                            "effect": "Restores 80HP",
                            "category": "Main"
                        },
                        "Max Elixir": {
                            "effect": "Restores all PP to all moves",
                            "category": "Main"
                        },
                        "Max Ether": {
                            "effect": "Restores all PP to one move",
                            "category": "Main"
                        },
                        "Max Potion": {
                            "price": 2500,
                            "effect": "Restores all HP",
                            "category": "Main"
                        },
                        "Max Repel": {
                            "price": 700,
                            "effect": "Repels weaker Pokemon for 250 steps",
                            "category": "Main"
                        },
                        "Max Revive": {
                            "effect": "Revives a fainted Pokemon to max HP",
                            "category": "Main"
                        },
                        "Moon Stone": {
                            "effect": "Evolves Clefairy, Jigglypuff, Nidorina and Nidorino",
                            "category": "Main"
                        },
                        "Nugget": {
                            "effect": "Sell for money",
                            "category": "Main"
                        },
                        "Paralyz Heal": {
                            "price": 200,
                            "effect": "Cures Paralysis",
                            "category": "Main"
                        },
                        "Poke Doll": {
                            "price": 1000,
                            "effect": "Trade for TM31 in Saffron, Allows escape from battle",
                            "category": "Main"
                        },
                        "Potion": {
                            "price": 300,
                            "effect": "Restores 20HP",
                            "category": "Main"
                        },
                        "PP Up": {
                            "effect": "Increases the max PP of a move",
                            "category": "Main"
                        },
                        "Protein": {
                            "price": 9800,
                            "effect": "Raises Attack",
                            "category": "Main"
                        },
                        "Rare Candy": {
                            "effect": "Raises a Pokemon's level by one",
                            "category": "Main"
                        },
                        "Repel": {
                            "price": 350,
                            "effect": "Repels weaker Pokemon for 100 steps",
                            "category": "Main"
                        },
                        "Revive": {
                            "price": 1500,
                            "effect": "Recovers a fainted Pokemon to half max HP",
                            "category": "Main"
                        },
                        "Soda Pop": {
                            "price": 300,
                            "effect": "Recovers 80HP",
                            "category": "Main"
                        },
                        "Super Potion": {
                            "price": 700,
                            "effect": "Restores 50HP",
                            "category": "Main"
                        },
                        "Super Repel": {
                            "price": 500,
                            "effect": "Repels weaker Pokemon for 200 steps",
                            "category": "Main"
                        },
                        "Thunderstone": {
                            "price": 2100,
                            "effect": "Evolves Eevee and Pikachu",
                            "category": "Main"
                        },
                        "Water Stone": {
                            "price": 2100,
                            "effect": "Evolves Eevee, Poliwag, Shellder and Staryu",
                            "category": "Main"
                        },
                        "X Accuracy": {
                            "price": 950,
                            "effect": "Raises accuracy in a battle",
                            "category": "Main"
                        },
                        "X Attack": {
                            "price": 500,
                            "effect": "Raises attack in a battle",
                            "category": "Main"
                        },
                        "X Defend": {
                            "price": 550,
                            "effect": "Raises defense in a battle",
                            "category": "Main"
                        },
                        "X Special": {
                            "price": 350,
                            "effect": "Raises special in a battle",
                            "category": "Main"
                        },
                        "X Speed": {
                            "price": 350,
                            "effect": "Raises speed in a battle",
                            "category": "Main"
                        },
                        "Pokeball": {
                            "price": 200,
                            "effect": "Catches Pokemon",
                            "category": "PokeBall"
                        },
                        "Great Ball": {
                            "price": 600,
                            "effect": "Greater chance of catching Pokemon than a Pokeball",
                            "category": "PokeBall"
                        },
                        "Ultra Ball": {
                            "price": 1200,
                            "effect": "Greater chance of catching Pokemon than a Great Ball",
                            "category": "PokeBall"
                        },
                        "Master Ball": {
                            "effect": "Always catches Pokemon",
                            "category": "PokeBall"
                        },
                        "Safari Ball": {
                            "effect": "A special ball for use in the Safari Zone",
                            "category": "PokeBall"
                        },
                        "Bicycle": {
                            "effect": "Allows travel at double speed",
                            "category": "Key",
                            "error": "No cycling allowed here.",
                            "bagActivate": FullScreenPokemon.Cycling.prototype.toggleCycling
                        },
                        "Bike Voucher": {
                            "effect": "Redeem at Cerulean Bike Shop for a free Bicycle",
                            "category": "Key"
                        },
                        "Card Key": {
                            "effect": "Unlocks doors in the Silph Co. building",
                            "category": "Key"
                        },
                        "Coin Case": {
                            "effect": "Holds 9999 Casino coins for use at Celadon Casino",
                            "category": "Key"
                        },
                        "Dome Fossil": {
                            "effect": "Used to clone Kabuto at the Cinnabar Island Laboratory",
                            "category": "Key"
                        },
                        "EXP. All": {
                            "effect": "Divides EXP from battle between all party members",
                            "category": "Key"
                        },
                        "Gold Teeth": {
                            "effect": "Return to Safari Zone Warden and receive HM04",
                            "category": "Key"
                        },
                        "Good Rod": {
                            "effect": "Fish for medium-levelled water Pokemon",
                            "category": "Key",
                            "bagActivate": FullScreenPokemon.Fishing.prototype.startFishing,
                            "title": "Good Rod",
                            "type": "good"
                        },
                        "Helix Fossil": {
                            "effect": "Used to clone Omanyte at the Cinnabar Island Laboratory",
                            "category": "Key"
                        },
                        "Itemfinder": {
                            "effect": "Detects hidden items in close proximity",
                            "category": "Key"
                        },
                        "Lift Key": {
                            "effect": "Unlocks the elevator in the Team Rocket Hideout, Celadon City",
                            "category": "Key"
                        },
                        "Oak's Parcel": {
                            "effect": "Deliver to Prof. Oak in Pallet Town and receive a Pokedex",
                            "category": "Key"
                        },
                        "Old Amber": {
                            "effect": "Used to clone Aerodactyl at the Cinnabar Island Laboratoy",
                            "category": "Key"
                        },
                        "Old Rod": {
                            "effect": "Fish for low-levelled water Pokemon",
                            "category": "Key",
                            "bagActivate": FullScreenPokemon.Fishing.prototype.startFishing,
                            "title": "Old Rod",
                            "type": "old"
                        },
                        "Pokeflute": {
                            "effect": "Awakens sleeping Pokemon",
                            "category": "Key"
                        },
                        "Pokedex": {
                            "effect": "Records all information about Pokemon seen and caught",
                            "category": "Key"
                        },
                        "S.S. Ticket": {
                            "effect": "Use to board the S.S. Anne in Vermilion City",
                            "category": "Key"
                        },
                        "Secret Key": {
                            "effect": "Unlocks Blaine's Gym on Cinnabar Island",
                            "category": "Key"
                        },
                        "Silph Scope": {
                            "effect": "Allows Ghosts to be detected in the Pokemon Tower, Lavendar Town",
                            "category": "Key"
                        },
                        "Super Rod": {
                            "effect": "Fish for high-levelled water Pokemon",
                            "category": "Key",
                            "bagActivate": FullScreenPokemon.Fishing.prototype.startFishing,
                            "title": "Super Rod",
                            "type": "super"
                        },
                        "Town Map": {
                            "effect": "Shows your position in the Pokemon World",
                            "category": "Key"
                        }
                    },
                    "battleModifications": {
                        "Turn 2": {
                            "opponentType": [
                                "Pokemaniac",
                                "Super Nerd",
                                "Juggler",
                                "Psychic",
                                "Chief",
                                "Scientist",
                                "Gentleman",
                                "Lorelei"
                            ],
                            "preferences": [
                                ["Raise", "Attack", 1],
                                ["Raise", "Defense", 1],
                                ["Raise", "Special", 1],
                                ["Raise", "Evasion", 1],
                                ["Move", "Pay Day"],
                                ["Move", "Swift"],
                                ["Lower", "Attack", 1],
                                ["Lower", "Defense", 1],
                                ["Lower", "Accuracy", 1],
                                ["Move", "Conversion"],
                                ["Move", "Haze"],
                                ["Raise", "Attack", 2],
                                ["Raise", "Defense", 2],
                                ["Raise", "Speed", 2],
                                ["Raise", "Special", 2],
                                ["Effect", "Heal"],
                                ["Lower", "Defense", 2],
                                ["Move", "Light Screen"],
                                ["Move", "Reflect"]
                            ]
                        },
                        "Good AI": {
                            // http://wiki.pokemonspeedruns.com/index.php/Pok%C3%A9mon_Red/Blue/Yellow_Trainer_AI
                            "opponentType": [
                                "smart",
                                "Sailor",
                                "Pokemaniac",
                                "Burglar",
                                "Fisher",
                                "Swimmer",
                                "Beauty",
                                "Rocker",
                                "Professor Oak",
                                "Giovanni",
                                "CooltrainerM",
                                "CooltrainerF",
                                "Misty",
                                "Surge",
                                "Erika",
                                "Koga",
                                "Blaine",
                                "Sabrina",
                                "Rival2",
                                "Rival3",
                                "Lorelei",
                                "Lance"
                            ],
                            /*
                                * Run on http://www.smogon.com/dex/rb/pokemon/
                                *
                                * $($("ul")[3]).find("li")
                                *    .toArray()
                                *    .map(function (element) {
                                *        return element.innerText.split(" ");
                                *    })
                                *    .map(function (texts) {
                                *        if (texts[1] === "<") {
                                *            return "[\"" + ["Weak", texts[0], texts[2]].join("\", \"") + "\"]";
                                *        } else {
                                *            return "[\"" + ["Super", texts[0], texts[2]].join(", ") + "\"]";
                                *        }
                                *    })
                                *    .join(",\r\n                ");
                                */
                            "preferences": [
                                ["Super", "Water, Fire"],
                                ["Super", "Fire, Grass"],
                                ["Super", "Fire, Ice"],
                                ["Super", "Grass, Water"],
                                ["Super", "Electric, Water"],
                                ["Super", "Water, Rock"],
                                ["Weak", "Ground", "Flying"],
                                ["Weak", "Water", "Water"],
                                ["Weak", "Fire", "Fire"],
                                ["Weak", "Electric", "Electric"],
                                ["Weak", "Ice", "Ice"],
                                ["Weak", "Grass", "Grass"],
                                ["Weak", "Psychic", "Psychic"],
                                ["Weak", "Fire", "Water"],
                                ["Weak", "Grass", "Fire"],
                                ["Weak", "Water", "Grass"],
                                ["Weak", "Normal", "Rock"],
                                ["Weak", "Normal", "Ghost"],
                                ["Super", "Ghost, Ghost"],
                                ["Super", "Fire, Bug"],
                                ["Weak", "Fire", "Rock"],
                                ["Super", "Water, Ground"],
                                ["Weak", "Electric", "Ground"],
                                ["Super", "Electric, Flying"],
                                ["Super", "Grass, Ground"],
                                ["Weak", "Grass", "Bug"],
                                ["Weak", "Grass", "Poison"],
                                ["Super", "Grass, Rock"],
                                ["Weak", "Grass", "Flying"],
                                ["Weak", "Ice", "Water"],
                                ["Super", "Ice, Grass"],
                                ["Super", "Ice, Ground"],
                                ["Super", "Ice, Flying"],
                                ["Super", "Fighting, Normal"],
                                ["Weak", "Fighting", "Poison"],
                                ["Weak", "Fighting", "Flying"],
                                ["Weak", "Fighting", "Psychic"],
                                ["Weak", "Fighting", "Bug"],
                                ["Super", "Fighting, Rock"],
                                ["Super", "Fighting, Ice"],
                                ["Weak", "Fighting", "Ghost"],
                                ["Super", "Poison, Grass"],
                                ["Weak", "Poison", "Poison"],
                                ["Weak", "Poison", "Ground"],
                                ["Super", "Poison, Bug"],
                                ["Weak", "Poison", "Rock"],
                                ["Weak", "Poison", "Ghost"],
                                ["Super", "Ground, Fire"],
                                ["Super", "Ground, Electric"],
                                ["Weak", "Ground", "Grass"],
                                ["Weak", "Ground", "Bug"],
                                ["Super", "Ground, Rock"],
                                ["Super", "Ground, Poison"],
                                ["Weak", "Flying", "Electric"],
                                ["Super", "Flying, Fighting"],
                                ["Super", "Flying, Bug"],
                                ["Super", "Flying, Grass"],
                                ["Weak", "Flying", "Rock"],
                                ["Super", "Psychic, Fighting"],
                                ["Super", "Psychic, Poison"],
                                ["Weak", "Bug", "Fire"],
                                ["Super", "Bug, Grass"],
                                ["Weak", "Bug", "Fighting"],
                                ["Weak", "Bug", "Flying"],
                                ["Super", "Bug, Psychic"],
                                ["Weak", "Bug", "Ghost"],
                                ["Super", "Bug, Poison"],
                                ["Super", "Rock, Fire"],
                                ["Weak", "Rock", "Fighting"],
                                ["Weak", "Rock", "Ground"],
                                ["Super", "Rock, Flying"],
                                ["Super", "Rock, Bug"],
                                ["Super", "Rock, Ice"],
                                ["Weak", "Ghost", "Normal"],
                                ["Weak", "Ghost", "Psychic"],
                                ["Weak", "Fire", "Dragon"],
                                ["Weak", "Water", "Dragon"],
                                ["Weak", "Electric", "Dragon"],
                                ["Weak", "Grass", "Dragon"],
                                ["Super", "Ice, Dragon"],
                                ["Super", "Dragon, Dragon"]
                            ]
                        }
                    }
                }
            };
        }
        Settings.GenerateMathSettings = GenerateMathSettings;
        /* tslint:disable object-literal-key-quotes */
        function GenerateMenusSettings() {
            "use strict";
            return {
                "aliases": {
                    " ": "Space",
                    "(": "LeftParenthesis",
                    ")": "RightParenthesis",
                    ":": "Colon",
                    ";": "Semicolon",
                    "[": "LeftSquareBracket",
                    "]": "RightSquareBracket",
                    "-": "Hyphen",
                    "MDash": "MDash",
                    "_": "Underscore",
                    "?": "QuestionMark",
                    "!": "ExclamationMark",
                    "/": "Slash",
                    ".": "Period",
                    ",": "Comma",
                    "'": "Apostrophe",
                    "�": "eFancy"
                },
                "replacements": {
                    "PLAYER": function () {
                        return this.EightBitter.ItemsHolder.getItem("name");
                    },
                    "RIVAL": function () {
                        return this.EightBitter.ItemsHolder.getItem("nameRival");
                    },
                    "POKE": "POK�".split(""),
                    "POKEMON": "POK�MON".split(""),
                    "POKEDEX": "POK�DEX".split(""),
                    "POKEDEX.SEEN": function () {
                        return this.EightBitter.makeDigit(this.EightBitter.getPokedexListingsOrdered()
                            .filter(function (listing) {
                            return listing && listing.seen;
                        })
                            .length, 3, "\t")
                            .split("");
                    },
                    "POKEDEX.OWN": function () {
                        return this.EightBitter.makeDigit(this.EightBitter.getPokedexListingsOrdered()
                            .filter(function (listing) {
                            return listing && listing.caught;
                        })
                            .length, 3, "\t")
                            .split("");
                    },
                    "BADGES.LENGTH": function () {
                        var badges = this.EightBitter.ItemsHolder.getItem("badges");
                        var total = 0;
                        for (var i in badges) {
                            if (badges.hasOwnProperty(i)) {
                                total += Number(badges[i]);
                            }
                        }
                        return total.toString().split("");
                    },
                    "POKEDEX.LENGTH": function () {
                        var pokedex = this.EightBitter.ItemsHolder.getItem("Pokedex");
                        if (!pokedex || !pokedex.length) {
                            return ["0"];
                        }
                        return pokedex
                            .map(function (listing) {
                            return Number(listing.seen);
                        })
                            .reduce(function (a, b) {
                            return a + b;
                        })
                            .toString()
                            .split("");
                    },
                    "TIME": function () {
                        var ticksRecorded = this.EightBitter.ItemsHolder.getItem("time");
                        var ticksUnrecorded = this.EightBitter.FPSAnalyzer.getNumRecorded() - this.EightBitter.ticksElapsed;
                        var ticksTotal = Math.floor(ticksRecorded + ticksUnrecorded);
                        var secondsTotal = Math.floor(ticksTotal / this.EightBitter.settings.runner.interval);
                        var hours = Math.floor(secondsTotal / 3600).toString();
                        var minutes = Math.floor((secondsTotal - Number(hours)) / 60).toString();
                        if (hours.length < 2) {
                            hours = " " + hours;
                        }
                        else if (hours.length > 2) {
                            hours = "99";
                        }
                        if (minutes.length < 2) {
                            minutes = "0" + minutes;
                        }
                        else if (minutes.length > 2) {
                            minutes = "99";
                        }
                        return (hours + ":" + minutes).split("");
                    },
                    "MONEY": function () {
                        return this.EightBitter.ItemsHolder.getItem("money").toString().split("");
                    }
                },
                "replacementStatistics": {
                    "PLAYER": true,
                    "RIVAL": true,
                    "TIME": true,
                    "MONEY": true
                },
                "replaceFromItemsHolder": true,
                "sounds": {
                    "menuSound": "Menu Bleep"
                },
                "schemas": {
                    "StartOptions": {
                        "size": {
                            "width": 60,
                            "height": 40
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center"
                        },
                        "textXOffset": 8,
                        "ignoreB": true
                    },
                    "GeneralText": {
                        "size": {
                            "height": 24,
                            "width": 80
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "top": 36
                            }
                        },
                        "ignoreB": true
                    },
                    "Pause": {
                        "size": {
                            "width": 40,
                            "height": 64
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "left": 60
                            }
                        },
                        "onMenuDelete": function () {
                            this.menus.closePauseMenu();
                        },
                        "textXOffset": 8,
                        "textYOffset": 8,
                        "textPaddingY": 7.75
                    },
                    "Pokedex": {
                        "size": {
                            "width": 88
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "stretch",
                            "offset": {
                                "left": -4
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "LineDecoratorVertical",
                                "position": {
                                    "vertical": "stretch",
                                    "offset": {
                                        "left": 60,
                                        "top": 3,
                                        "bottom": 3
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "LineSeparatorHorizontal",
                                "size": {
                                    "width": 21.5
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "left": -3,
                                        "top": 35
                                    }
                                }
                            },
                            {
                                "type": "text",
                                "words": ["CONTENTS"],
                                "position": {
                                    "offset": {
                                        "left": 7,
                                        "top": 7
                                    }
                                }
                            },
                            {
                                "type": "menu",
                                "name": "PokedexNumbers"
                            }],
                        "backMenu": "Pause",
                        "ignoreProgressB": true,
                        "scrollingItemsComputed": true,
                        "singleColumnList": true,
                        "textSpeed": 0,
                        "textXOffset": 7,
                        "textYOffset": 11
                    },
                    "PokedexNumbers": {
                        "size": {
                            "width": 16,
                            "height": 20
                        },
                        "position": {
                            "horizontal": "right",
                            "offset": {
                                "left": -4,
                                "top": 12
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": ["SEEN \r\n %%%%%%%POKEDEX.SEEN%%%%%%%"],
                                "position": {
                                    "vertical": "top"
                                }
                            },
                            {
                                "type": "text",
                                "words": ["OWN \r\n %%%%%%%POKEDEX.OWN%%%%%%%"],
                                "position": {
                                    "offset": {
                                        "top": 12
                                    }
                                }
                            }],
                        "container": "Pokedex",
                        "hidden": true,
                        "textSpeed": 0,
                        "textPaddingY": 4
                    },
                    "PokedexOptions": {
                        "size": {
                            "width": 21.5,
                            "height": 37
                        },
                        "position": {
                            "horizontal": "right",
                            "offset": {
                                "left": -3,
                                "top": 38
                            }
                        },
                        "container": "Pokedex",
                        "backMenu": "Pokedex",
                        "keepOnBack": true,
                        "hidden": true,
                        "arrowXOffset": 1,
                        "textSpeed": 0,
                        "textXOffset": 4,
                        "textYOffset": 5
                    },
                    "PokedexListing": {
                        "size": {
                            "width": 80,
                            "height": 72
                        },
                        "position": {
                            "horizontal": "center"
                        },
                        "childrenSchemas": [
                            {
                                "type": "menu",
                                "name": "PokedexListingSprite"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingName"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingLabel"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingHeight"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingWeight"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingNumber"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingInfo"
                            },
                            {
                                "type": "thing",
                                "thing": "LineDecoratorHorizontalLeft",
                                "position": {
                                    "offset": {
                                        "top": 36.5,
                                        "left": 2
                                    }
                                },
                                "size": {
                                    "width": 38
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "LineDecoratorHorizontalRight",
                                "position": {
                                    "offset": {
                                        "top": 36.5,
                                        "left": 38
                                    }
                                },
                                "size": {
                                    "width": 40
                                }
                            }],
                        "lined": true
                    },
                    "PokedexListingSprite": {
                        "position": {
                            "offset": {
                                "left": 8,
                                "top": 12
                            }
                        },
                        "size": {
                            "width": 20,
                            "height": 20
                        },
                        "hidden": true,
                        "container": "PokedexListing"
                    },
                    "PokedexListingName": {
                        "position": {
                            "offset": {
                                "left": 32,
                                "top": 7.5
                            }
                        },
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textYOffset": 0
                    },
                    "PokedexListingLabel": {
                        "position": {
                            "offset": {
                                "left": 32,
                                "top": 15.5
                            }
                        },
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textYOffset": 0
                    },
                    "PokedexListingHeight": {
                        "position": {
                            "offset": {
                                "left": 36,
                                "top": 23.5
                            }
                        },
                        "size": {
                            "height": 10,
                            "width": 40
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": ["HT"]
                            }, {
                                "type": "menu",
                                "name": "PokedexListingHeightFeet"
                            }, {
                                "type": "menu",
                                "name": "PokedexListingHeightInches"
                            },
                            {
                                "type": "thing",
                                "thing": "CharFeet",
                                "position": {
                                    "offset": {
                                        "left": 20,
                                        "top": .5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "CharInches",
                                "position": {
                                    "offset": {
                                        "left": 32,
                                        "top": .5
                                    }
                                }
                            }],
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 8,
                        "textYOffset": 0
                    },
                    "PokedexListingHeightFeet": {
                        "size": {
                            "height": 10,
                            "width": 20
                        },
                        "container": "PokedexListingHeight",
                        "hidden": true,
                        "textXOffset": 16.5,
                        "textYOffset": 0,
                        "textPaddingX": -8
                    },
                    "PokedexListingHeightInches": {
                        "size": {
                            "height": 10,
                            "width": 20
                        },
                        "container": "PokedexListingHeight",
                        "hidden": true,
                        "textXOffset": 28,
                        "textYOffset": 0,
                        "textPaddingX": -8
                    },
                    "PokedexListingWeight": {
                        "position": {
                            "offset": {
                                "left": 36,
                                "top": 31.5
                            }
                        },
                        "size": {
                            "height": 10,
                            "width": 40
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": ["WT"]
                            }, {
                                "type": "text",
                                "words": ["lb"],
                                "position": {
                                    "offset": {
                                        "left": 32
                                    }
                                }
                            }],
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 16,
                        "textYOffset": 0
                    },
                    "PokedexListingNumber": {
                        "size": {
                            "width": 20,
                            "height": 4
                        },
                        "position": {
                            "offset": {
                                "left": 8,
                                "top": 32
                            }
                        },
                        "childrenSchemas": [{
                                "type": "text",
                                "words": [["No", "."]]
                            }],
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 8,
                        "textYOffset": -.5
                    },
                    "PokedexListingInfo": {
                        "position": {
                            "vertical": "bottom",
                            "horizontal": "center",
                            "offset": {
                                "top": -4
                            }
                        },
                        "size": {
                            "width": 76,
                            "height": 32
                        },
                        "container": "PokedexListing",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 2
                    },
                    "Pokemon": {
                        "size": {
                            "width": 88,
                            "height": 75
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "left": -4
                            }
                        },
                        "childrenSchemas": [{
                                "type": "menu",
                                "name": "PokemonDialog"
                            }],
                        "backMenu": "Pause",
                        "arrowXOffset": 8,
                        "arrowYOffset": 3,
                        "ignoreProgressB": true,
                        "textSpeed": 0,
                        "textXOffset": 15.75,
                        "textYOffset": 4
                    },
                    "PokemonDialog": {
                        "size": {
                            "height": 24
                        },
                        "position": {
                            "horizontal": "stretch",
                            "vertical": "bottom"
                        },
                        "childrenSchemas": [{
                                "type": "text",
                                "words": [
                                    "Choose a %%%%%%%POKEMON%%%%%%%"
                                ],
                                "position": {
                                    "offset": {
                                        "left": 4,
                                        "top": 7.5
                                    }
                                }
                            }],
                        "container": "Pokemon",
                        "textSpeed": 0
                    },
                    "PokemonMenuContext": {
                        "size": {
                            "width": 36,
                            "height": 28
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "bottom"
                        },
                        "container": "PokemonDialog",
                        "textXOffset": 8,
                        "textYOffset": 4
                    },
                    "PokemonMenuStats": {
                        "size": {
                            "width": 88,
                            "height": 75
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center"
                        },
                        "childrenSchemas": [
                            {
                                "type": "menu",
                                "name": "PokemonMenuStatsTitle"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsLevel"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsHPBar"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsHP"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsNumber"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsStatus"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsType1"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsID"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsOT"
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 1,
                                    "height": 26.5
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 4,
                                        "left": -5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 43.5,
                                    "height": 1
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 30,
                                        "left": -5.5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "HalfArrowHorizontal",
                                "args": {
                                    "flipHoriz": true
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 29,
                                        "left": -49
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 1,
                                    "height": 34
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 36,
                                        "left": -5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 25,
                                    "height": 1
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 69.5,
                                        "left": -5.5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "HalfArrowHorizontal",
                                "args": {
                                    "flipHoriz": true
                                },
                                "position": {
                                    "horizontal": "right",
                                    "offset": {
                                        "top": 68.5,
                                        "left": -30.5
                                    }
                                }
                            }]
                    },
                    "PokemonMenuStatsTitle": {
                        "size": {
                            "width": 44,
                            "height": 4
                        },
                        "position": {
                            "offset": {
                                "top": 4,
                                "left": 39
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textXOffset": 0,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "PokemonMenuStatsLevel": {
                        "size": {
                            "width": 36,
                            "height": 4
                        },
                        "position": {
                            "offset": {
                                "left": 61,
                                "top": 8
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textXOffset": 4,
                        "textYOffset": 0,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": [["Level"]],
                                "position": {
                                    "offset": {
                                        "top": 1.5
                                    }
                                }
                            }]
                    },
                    "PokemonMenuStatsHPBar": {
                        "position": {
                            "offset": {
                                "left": 48,
                                "top": 14
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "CharHP",
                                "position": {
                                    "offset": {
                                        "left": 1
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "HPBar",
                                "args": {
                                    "width": 25
                                },
                                "position": {
                                    "offset": {
                                        "left": 8
                                    }
                                }
                            }],
                        "container": "PokemonMenuStats",
                        "hidden": true
                    },
                    "PokemonMenuStatsHP": {
                        "size": {
                            "width": 24,
                            "height": 4
                        },
                        "position": {
                            "offset": {
                                "left": 59,
                                "top": 16
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textXOffset": 0,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "PokemonMenuStatsNumber": {
                        "size": {
                            "width": 40,
                            "height": 8
                        },
                        "position": {
                            "offset": {
                                "left": 6,
                                "top": 26
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textXOffset": 8,
                        "textYOffset": 0,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": [[["No"], "."]]
                            }]
                    },
                    "PokemonMenuStatsStatus": {
                        "size": {
                            "width": 40,
                            "height": 8
                        },
                        "position": {
                            "offset": {
                                "left": 39,
                                "top": 24
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textXOffset": 28,
                        "textYOffset": 0,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": ["STATUS/"]
                            }]
                    },
                    "PokemonMenuStatsType1": {
                        "size": {
                            "width": 40,
                            "height": 8
                        },
                        "position": {
                            "offset": {
                                "left": 43,
                                "top": 35.5
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textYOffset": 4,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": ["TYPE1/"]
                            }]
                    },
                    "PokemonMenuStatsType2": {
                        "size": {
                            "width": 40,
                            "height": 8
                        },
                        "position": {
                            "offset": {
                                "left": 43,
                                "top": 43.5
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textYOffset": 4,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": ["TYPE2/"]
                            }]
                    },
                    "PokemonMenuStatsID": {
                        "size": {
                            "width": 72,
                            "height": 16
                        },
                        "position": {
                            "offset": {
                                "left": 43,
                                "top": 51.5
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textYOffset": 4,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": [[["ID"], ["No"], "/"]]
                            }]
                    },
                    "PokemonMenuStatsOT": {
                        "size": {
                            "width": 72,
                            "height": 16
                        },
                        "position": {
                            "offset": {
                                "left": 43,
                                "top": 59.5
                            }
                        },
                        "container": "PokemonMenuStats",
                        "hidden": true,
                        "textYOffset": 4,
                        "textSpeed": 0,
                        "childrenSchemas": [{
                                "type": "text",
                                "words": ["OT/"]
                            }]
                    },
                    "PokemonMenuStatsExperience": {
                        "size": {
                            "width": 43,
                            "height": 20
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "top",
                            "offset": {
                                "top": 9,
                                "left": -6
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": ["EXP POINTS"],
                                "position": {
                                    "offset": {
                                        "top": 3
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": ["LEVEL UP"],
                                "position": {
                                    "offset": {
                                        "top": 11
                                    }
                                }
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsExperienceFrom"
                            }, {
                                "type": "menu",
                                "name": "PokemonMenuStatsExperienceNext"
                            }, {
                                "type": "text",
                                "words": [["To"]],
                                "position": {
                                    "offset": {
                                        "top": 16,
                                        "left": 20.5
                                    }
                                }
                            }],
                        "container": "PokemonMenuStats",
                        "plain": true,
                        "textXOffset": 0,
                        "textYOffset": 7,
                        "textSpeed": 0
                    },
                    "PokemonMenuStatsExperienceFrom": {
                        "size": {
                            "width": 15
                        },
                        "position": {
                            "offset": {
                                "top": 15,
                                "left": 8
                            }
                        },
                        "container": "PokemonMenuStatsExperience",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 0,
                        "textYOffset": 0
                    },
                    "PokemonMenuStatsExperienceNext": {
                        "position": {
                            "offset": {
                                "top": 15,
                                "left": 28
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": [["Level"]],
                                "position": {
                                    "offset": {
                                        "top": 1.5
                                    }
                                }
                            }],
                        "container": "PokemonMenuStatsExperience",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": 4,
                        "textYOffset": 0
                    },
                    "PokemonMenuStatsMoves": {
                        "size": {
                            "width": 88,
                            "height": 43
                        },
                        "position": {
                            "vertical": "bottom"
                        },
                        "container": "PokemonMenuStats",
                        "textXOffset": 8,
                        "textYOffset": 3.5
                    },
                    "Items": {
                        "size": {
                            "width": 64
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "stretch",
                            "offset": {
                                "left": 8
                            }
                        },
                        "backMenu": "Pause",
                        "scrollingItemsComputed": true,
                        "textXOffset": 8
                    },
                    "Player": {
                        "size": {
                            "width": 80,
                            "height": 72
                        },
                        "position": {
                            "horizontal": "center"
                        },
                        "childrenSchemas": [
                            {
                                "type": "menu",
                                "name": "PlayerTop"
                            },
                            {
                                "type": "thing",
                                "thing": "DirtWhite",
                                "position": {
                                    "horizontal": "stretch",
                                    "vertical": "center"
                                }
                            },
                            {
                                "type": "text",
                                "words": ["BADGES"],
                                "position": {
                                    "offset": {
                                        "left": 28,
                                        "top": 35.5
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": [["Circle"]],
                                "position": {
                                    "offset": {
                                        "left": 24.5,
                                        "top": 37
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": [["Circle"]],
                                "position": {
                                    "offset": {
                                        "left": 52.5,
                                        "top": 37
                                    }
                                }
                            }, {
                                "type": "menu",
                                "name": "PlayerBottom"
                            }],
                        "backMenu": "Pause",
                        "dirty": true,
                        "ignoreProgressB": true,
                        "textSpeed": 0
                    },
                    "PlayerTop": {
                        "size": {
                            "width": 77,
                            "height": 29
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "top": 1.5
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": [
                                    "NAME/%%%%%%%PLAYER%%%%%%%",
                                    "\n",
                                    "MONEY/%%%%%%%MONEY%%%%%%%",
                                    "\n",
                                    "TIME/%%%%%%%TIME%%%%%%%",
                                ],
                                "position": {
                                    "offset": {
                                        "left": 6.5,
                                        "top": 6
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "PlayerPortrait",
                                "position": {
                                    "horizontal": "right",
                                    "vertical": "top",
                                    "offset": {
                                        "left": -4.5,
                                        "top": 3.5
                                    }
                                }
                            }],
                        "light": true,
                        "container": "Player",
                        "textSpeed": 0
                    },
                    "PlayerBottom": {
                        "size": {
                            "width": 69,
                            "height": 29
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "top": 41.5
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": [
                                    ["1Shadow"], " ", ["2Shadow"], " ", ["3Shadow"], " ", ["4Shadow"],
                                    ["5Shadow"], " ", ["6Shadow"], " ", ["7Shadow"], " ", ["8Shadow"],
                                ],
                                "position": {
                                    "offset": {
                                        "left": 2.5,
                                        "top": 3
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BrockPortrait",
                                "position": {
                                    "offset": {
                                        "left": 6.5,
                                        "top": 6.5
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "MistyPortrait",
                                "position": {
                                    "offset": {
                                        "left": 22.5,
                                        "top": 6.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "LtSurgePortrait",
                                "position": {
                                    "offset": {
                                        "left": 38.5,
                                        "top": 6.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "ErikaPortrait",
                                "position": {
                                    "offset": {
                                        "left": 54.5,
                                        "top": 6.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "KogaPortrait",
                                "position": {
                                    "offset": {
                                        "left": 6.5,
                                        "top": 18
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "SabrinaPortrait",
                                "position": {
                                    "offset": {
                                        "left": 22.5,
                                        "top": 18
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "BlainePortrait",
                                "position": {
                                    "offset": {
                                        "left": 38.5,
                                        "top": 18
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "GiovanniPortrait",
                                "position": {
                                    "offset": {
                                        "left": 54.5,
                                        "top": 18
                                    }
                                }
                            }],
                        "light": true,
                        "container": "Player",
                        "textSpeed": 0,
                        "textPaddingX": 8.5,
                        "textPaddingY": 12
                    },
                    "Save": {
                        "size": {
                            "width": 64,
                            "height": 40
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "left": 8
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "text",
                                "words": [
                                    "PLAYER",
                                    "\n",
                                    "BADGES",
                                    "\n",
                                    "%%%%%%%POKEDEX%%%%%%%",
                                    "\n",
                                    "TIME"
                                ],
                                "position": {
                                    "offset": {
                                        "left": 4,
                                        "top": 7
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": [
                                    {
                                        "command": "padLeft",
                                        "length": 15,
                                        "word": "%%%%%%%PLAYER%%%%%%%",
                                        "alignRight": true
                                    },
                                    {
                                        "command": "padLeft",
                                        "length": 15,
                                        "word": "%%%%%%%BADGES.LENGTH%%%%%%%",
                                        "alignRight": true
                                    },
                                    {
                                        "command": "padLeft",
                                        "length": 15,
                                        "word": "%%%%%%%POKEDEX.LENGTH%%%%%%%",
                                        "alignRight": true
                                    },
                                    {
                                        "command": "padLeft",
                                        "length": 15,
                                        "word": "%%%%%%%TIME%%%%%%%",
                                        "alignRight": true
                                    }],
                                "position": {
                                    "offset": {
                                        "top": 7
                                    }
                                }
                            }],
                        "textSpeed": 0
                    },
                    "Yes/No": {
                        "size": {
                            "width": 24,
                            "height": 20
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": -28,
                                "top": 14
                            }
                        },
                        "arrowXOffset": 1,
                        "textXOffset": 8,
                        "textYOffset": 3.5
                    },
                    "Heal/Cancel": {
                        "size": {
                            "width": 36,
                            "height": 24
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": 22,
                                "top": 14
                            }
                        },
                        "arrowXOffset": 1,
                        "textXOffset": 8
                    },
                    "Buy/Sell": {
                        "size": {
                            "width": 44,
                            "height": 28
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": -18,
                                "top": -10
                            }
                        },
                        "textXOffset": 8,
                        "textYOffset": 4
                    },
                    "Money": {
                        "size": {
                            "width": 36,
                            "height": 12
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": 22,
                                "top": -18
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "WhiteSquare",
                                "size": {
                                    "width": 20,
                                    "height": 3.5
                                },
                                "position": {
                                    "vertical": "top",
                                    "horizontal": "right",
                                    "offset": {
                                        "left": -8
                                    }
                                }
                            },
                            {
                                "type": "text",
                                "words": ["MONEY"],
                                "position": {
                                    "offset": {
                                        "left": 8,
                                        "top": -.25
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": [{
                                        "command": "padLeft",
                                        "length": "%%%%%%%MONEY%%%%%%%",
                                        "word": "$"
                                    }],
                                "position": {
                                    "offset": {
                                        "top": 4
                                    }
                                }
                            }, {
                                "type": "text",
                                "words": [{
                                        "command": "padLeft",
                                        "length": 8,
                                        "word": "%%%%%%%MONEY%%%%%%%"
                                    }],
                                "position": {
                                    "offset": {
                                        "top": 4
                                    }
                                }
                            }],
                        "textSpeed": 0
                    },
                    "ShopItems": {
                        "size": {
                            "width": 64,
                            "height": 44
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": 8,
                                "top": 6
                            }
                        },
                        "textXOffset": 8,
                        "scrollingItems": 4
                    },
                    "ShopItemsAmount": {
                        "size": {
                            "width": 52,
                            "height": 12
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "bottom",
                            "offset": {
                                "top": -4
                            }
                        },
                        "container": "ShopItems",
                        "backMenu": "ShopItems",
                        "textSpeed": 0
                    },
                    "Town Map": {
                        "size": {
                            "width": 88,
                            "height": 81
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": -4
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "menu",
                                "name": "Town Map Inside"
                            }],
                        "ignoreProgressB": true,
                        "textSpeed": 0,
                        "textXOffset": 8,
                        "textYOffset": 3.5
                    },
                    "Town Map Inside": {
                        "size": {
                            "width": 80,
                            "height": 68
                        },
                        "position": {
                            "horizontal": "center",
                            "offset": {
                                "top": 8
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "TownMapNoWater"
                            }],
                        "container": "Town Map",
                        "watery": true
                    },
                    "Battle": {
                        "size": {
                            "width": 80,
                            "height": 48
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center"
                        },
                        "childrenSchemas": [{
                                "type": "menu",
                                "name": "GeneralText"
                            }],
                        "hidden": true
                    },
                    "BattlePlayerHealth": {
                        "size": {
                            "width": 38.5,
                            "height": 6.5
                        },
                        "position": {
                            "vertical": "bottom",
                            "horizontal": "right",
                            "offset": {
                                "top": -1.5,
                                "left": -5.5
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "position": {
                                    "horizontal": "right"
                                },
                                "args": {
                                    "height": 5.75
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 37.5
                                },
                                "position": {
                                    "vertical": "bottom",
                                    "offset": {
                                        "left": .5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "HalfArrowHorizontal",
                                "position": {
                                    "vertical": "bottom"
                                },
                                "args": {
                                    "flipHoriz": true
                                }
                            }],
                        "container": "Battle",
                        "hidden": true,
                        "textXOffset": 8.5,
                        "textYOffset": .5,
                        "textPaddingX": .5,
                        "textSpeed": 0
                    },
                    "BattlePlayerHealthTitle": {
                        "size": {
                            "width": 38
                        },
                        "position": {
                            "offset": {
                                "top": -12.5,
                                "left": 4
                            }
                        },
                        "container": "BattlePlayerHealth",
                        "hidden": true,
                        "textXOffset": 0,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "BattlePlayerHealthLevel": {
                        "position": {
                            "offset": {
                                "top": -8.5,
                                "left": 20
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "CharLevel",
                                "position": {
                                    "offset": {
                                        "top": 1.5,
                                        "left": .5
                                    }
                                }
                            }],
                        "container": "BattlePlayerHealth",
                        "hidden": true,
                        "textXOffset": 4,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "BattlePlayerHealthAmount": {
                        "size": {
                            "height": 4
                        },
                        "position": {
                            "offset": {
                                "left": 4,
                                "top": -3
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "CharHP",
                                "position": {
                                    "offset": {
                                        "left": 1
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "HPBar",
                                "args": {
                                    "width": 25
                                },
                                "position": {
                                    "offset": {
                                        "left": 8
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "LightGraySquare",
                                "args": {
                                    "width": 24,
                                    "id": "HPBarFillPlayer"
                                },
                                "position": {
                                    "offset": {
                                        "left": 8.5,
                                        "top": .5
                                    }
                                }
                            }],
                        "container": "BattlePlayerHealth",
                        "hidden": true,
                        "textSpeed": 0
                    },
                    "BattlePlayerHealthNumbers": {
                        "size": {
                            "width": 36,
                            "height": 10
                        },
                        "position": {
                            "offset": {
                                "top": -1,
                                "left": 4
                            }
                        },
                        "container": "BattlePlayerHealth",
                        "hidden": true,
                        "textXOffset": 4,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "BattleOpponentHealth": {
                        "size": {
                            "width": 38.5,
                            "height": 6.5
                        },
                        "position": {
                            "offset": {
                                "top": 8,
                                "left": 5.5
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "height": 5.75
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "BlackSquare",
                                "args": {
                                    "width": 34
                                },
                                "position": {
                                    "vertical": "bottom",
                                    "offset": {
                                        "left": .5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "HalfArrowHorizontal",
                                "position": {
                                    "vertical": "bottom",
                                    "horizontal": "right"
                                }
                            }],
                        "container": "Battle",
                        "hidden": true,
                        "textXOffset": 7,
                        "textYOffset": .5,
                        "textPaddingX": .5,
                        "textSpeed": 0
                    },
                    "BattleOpponentHealthTitle": {
                        "position": {
                            "offset": {
                                "top": -8.5,
                                "left": -1.5
                            }
                        },
                        "container": "BattleOpponentHealth",
                        "hidden": true,
                        "textXOffset": 0,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "BattleOpponentHealthLevel": {
                        "position": {
                            "offset": {
                                "top": -4.5,
                                "left": 10.5
                            }
                        },
                        "childrenSchemas": [{
                                "type": "thing",
                                "thing": "CharLevel",
                                "position": {
                                    "offset": {
                                        "top": 1.5,
                                        "left": .5
                                    }
                                }
                            }],
                        "container": "BattleOpponentHealth",
                        "hidden": true,
                        "textXOffset": 4,
                        "textYOffset": 0,
                        "textSpeed": 0
                    },
                    "BattleOpponentHealthAmount": {
                        "position": {
                            "offset": {
                                "left": 3,
                                "top": 1
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "CharHP"
                            },
                            {
                                "type": "thing",
                                "thing": "HPBar",
                                "args": {
                                    "width": 25
                                },
                                "position": {
                                    "offset": {
                                        "left": 7
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "LightGraySquare",
                                "args": {
                                    "width": 24,
                                    "id": "HPBarFillOpponent"
                                },
                                "position": {
                                    "offset": {
                                        "left": 7.5,
                                        "top": .5
                                    }
                                }
                            }],
                        "container": "BattleOpponentHealth",
                        "hidden": true,
                        "height": 4,
                        "textSpeed": 0
                    },
                    "BattleDisplayInitial": {
                        "size": {
                            "width": 72
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "stretch"
                        },
                        "container": "Battle",
                        "hidden": true
                    },
                    "BattleOptions": {
                        "size": {
                            "width": 48,
                            "height": 24
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "bottom"
                        },
                        "container": "GeneralText",
                        "ignoreB": true,
                        "textXOffset": 8,
                        "textColumnWidth": 24
                    },
                    "BattleDisplayPlayer": {
                        "size": {
                            "width": 45,
                            "height": 21
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "bottom",
                            "offset": {
                                "left": 8.5
                            }
                        },
                        "childrenSchemas": [
                            {
                                "type": "thing",
                                "thing": "CharLevel",
                                "position": {
                                    "offset": {
                                        "left": 21,
                                        "top": 6
                                    }
                                }
                            },
                            {
                                "type": "thing",
                                "thing": "HPBar",
                                "args": {
                                    "width": 25
                                },
                                "position": {
                                    "offset": {
                                        "left": 12,
                                        "top": 10
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "CharHP",
                                "position": {
                                    "offset": {
                                        "left": 5,
                                        "top": 10
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "CharSlash",
                                "position": {
                                    "offset": {
                                        "left": 20.5,
                                        "top": 12.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "HalfArrowLeft",
                                "position": {
                                    "offset": {
                                        "left": .5,
                                        "top": 17.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "Line",
                                "args": {
                                    "width": 34
                                },
                                "position": {
                                    "offset": {
                                        "left": 4.5,
                                        "top": 18.5
                                    }
                                }
                            }, {
                                "type": "thing",
                                "thing": "Line",
                                "args": {
                                    "height": 10
                                },
                                "position": {
                                    "offset": {
                                        "left": 38,
                                        "top": 9
                                    }
                                }
                            }],
                        "container": "Battle",
                        "hidden": true
                    },
                    "BattleDisplayOpponent": {
                        "size": {
                            "width": 41,
                            "height": 15
                        },
                        "position": {
                            "offset": {
                                "left": 3
                            }
                        },
                        // "childrenSchemas": [{
                        // }],
                        "container": "Battle",
                        "plain": true,
                        "textSpeed": 0,
                        "textXOffset": 1,
                        "textYOffset": -.5
                    },
                    "BattleFightList": {
                        "size": {
                            "width": 64
                        },
                        "position": {
                            "horizontal": "right",
                            "vertical": "stretch"
                        },
                        "container": "GeneralText",
                        "backMenu": "BattleOptions",
                        "textXOffset": 8,
                        "textYOffset": 3.5,
                        "textPaddingY": 4,
                        "arrowXOffset": 1
                    },
                    "LevelUpStats": {
                        "size": {
                            "width": 48,
                            "height": 40
                        },
                        "textSpeed": 0,
                        "textXOffset": 8,
                        "textYOffset": 4,
                        "textPaddingY": 4
                    },
                    "NameOptions": {
                        "size": {
                            "width": 44,
                            "height": 48
                        },
                        "position": {
                            "horizontal": "center",
                            "vertical": "center",
                            "offset": {
                                "left": -18
                            }
                        },
                        "ignoreB": true,
                        "textXOffset": 8
                    },
                    "Keyboard": {
                        "size": {
                            "width": 80,
                            "height": 72
                        },
                        "position": {
                            "vertical": "center",
                            "horizontal": "center"
                        },
                        "childrenSchemas": [
                            {
                                "type": "menu",
                                "name": "KeyboardKeys"
                            }, {
                                "type": "menu",
                                "name": "KeyboardTitle"
                            }, {
                                "type": "menu",
                                "name": "KeyboardResult"
                            }],
                        "plain": true
                    },
                    "KeyboardKeys": {
                        "size": {
                            "width": 80,
                            "height": 44
                        },
                        "position": {
                            "offset": {
                                "top": 16
                            }
                        },
                        "container": "Keyboard",
                        "textColumnWidth": 8,
                        "textXOffset": 8,
                        "textYOffset": 3.5
                    },
                    "KeyboardResult": {
                        "size": {
                            "height": 8,
                            "width": 32
                        },
                        "position": {
                            "offset": {
                                "left": 39,
                                "top": 10.5
                            }
                        },
                        "container": "Keyboard",
                        "hidden": true,
                        "textSpeed": 0,
                        "textXOffset": .5,
                        "textYOffset": 0
                    },
                    "KeyboardTitle": {
                        "size": {
                            "height": 8
                        },
                        "position": {
                            "horizontal": "stretch",
                            "offset": {
                                "top": -4,
                                "left": -4
                            }
                        },
                        "container": "Keyboard",
                        "hidden": true,
                        "textSpeed": 0
                    }
                }
            };
        }
        Settings.GenerateMenusSettings = GenerateMenusSettings;
        var onModEnableKey = "onModEnable";
        function GenerateModsSettings() {
            "use strict";
            return {
                storeLocally: true,
                prefix: "FullScreenPokemon::Mods::",
                mods: [
                    {
                        name: "Running Indoors",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                var area = this.AreaSpawner.getArea();
                                if (!area) {
                                    return;
                                }
                                this.addStateHistory(area, "allowCycling", area.allowCycling);
                                area.allowCycling = true;
                                this.MapScreener.variables.allowCycling = true;
                            },
                            onModDisable: function (mod) {
                                var area = this.AreaSpawner.getArea();
                                if (!area) {
                                    return;
                                }
                                this.popStateHistory(area, "allowCycling");
                                if (!area.allowCycling && this.player.cycling) {
                                    this.stopCycling(this.player);
                                }
                                this.MapScreener.variables.allowCycling = area.allowCycling;
                            },
                            onSetLocation: function (mod) {
                                mod.events[onModEnableKey].call(this, mod);
                            }
                        }
                    },
                    {
                        name: "Speedrunner",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                var stats = this.ObjectMaker.getFunction("Player").prototype;
                                this.player.speed = stats.speed = 10;
                            },
                            onModDisable: function (mod) {
                                var stats = this.ObjectMaker.getFunction("Player").prototype;
                                this.player.speed = stats.speed = this.settings.objects.properties.Player.speed;
                            }
                        }
                    },
                    {
                        name: "Joey's Rattata",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                this.GroupHolder.groups.Character
                                    .filter(function (character) {
                                    return character.trainer;
                                })
                                    .forEach(function (character) {
                                    character.previousTitle = character.title;
                                    character.title = character.thing = "BugCatcher";
                                    this.ThingHitter.cacheChecksForType(character, "Character");
                                    this.setClass(character, character.className);
                                });
                            },
                            onModDisable: function (mod) {
                                this.GroupHolder.groups.Character
                                    .filter(function (character) {
                                    return character.trainer;
                                })
                                    .forEach(function (character) {
                                    character.title = character.thing = character.previousTitle;
                                    this.ThingHitter.cacheChecksForType(character, "Character");
                                    this.setClass(character, character.className);
                                });
                            },
                            onBattleStart: function (mod, eventName, battleInfo) {
                                var opponent = battleInfo.battlers.opponent;
                                opponent.sprite = "BugCatcherFront";
                                opponent.name = "YOUNGSTER JOEY".split("");
                                for (var i = 0; i < opponent.actors.length; i += 1) {
                                    opponent.actors[i].title = opponent.actors[i].nickname = "RATTATA".split("");
                                }
                            },
                            onSetLocation: function (mod) {
                                mod.events[onModEnableKey].call(this, mod);
                            }
                        }
                    },
                    {
                        name: "Level 100",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                var partyPokemon = this.ItemsHolder.getItem("PokemonInParty");
                                var statistics = this.MathDecider.getConstant("statisticNames");
                                for (var i = 0; i < partyPokemon.length; i += 1) {
                                    partyPokemon[i].previousLevel = partyPokemon[i].level;
                                    partyPokemon[i].level = 100;
                                    for (var j = 0; j < statistics.length; j += 1) {
                                        partyPokemon[i][statistics[j]] = partyPokemon[i][statistics[j] + "Normal"] =
                                            this.MathDecider.compute("pokemonStatistic", partyPokemon[i], statistics[j]);
                                    }
                                }
                            },
                            onModDisable: function (mod) {
                                var partyPokemon = this.ItemsHolder.getItem("PokemonInParty");
                                var statistics = this.MathDecider.getConstant("statisticNames");
                                for (var i = 0; i < partyPokemon.length; i += 1) {
                                    partyPokemon[i].level = partyPokemon[i].previousLevel;
                                    partyPokemon[i].previousLevel = undefined;
                                    for (var j = 0; j < statistics.length; j += 1) {
                                        partyPokemon[i][statistics[j]] = partyPokemon[i][statistics[j] + "Normal"] =
                                            this.MathDecider.compute("pokemonStatistic", partyPokemon[i], statistics[j]);
                                    }
                                }
                            }
                        }
                    },
                    {
                        name: "Walk Through Walls",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                this.ObjectMaker.getFunction("Solid").prototype.collide = function () {
                                    return true;
                                };
                            },
                            onModDisable: function (mod) {
                                this.ObjectMaker.getFunction("Solid").prototype.collide = function () {
                                    return false;
                                };
                            }
                        }
                    },
                    {
                        name: "Blind Trainers",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                this.ObjectMaker.getFunction("SightDetector").prototype.nocollide = true;
                            },
                            onModDisable: function (mod) {
                                this.ObjectMaker.getFunction("SightDetector").prototype.nocollide = false;
                            }
                        }
                    },
                    {
                        name: "Nuzlocke Challenge",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                return;
                            },
                            onModDisable: function (mod) {
                                return;
                            },
                            /**
                             * Sets the area's pokemonEncountered property to true if the encounter was with a wild Pokemon.
                             *
                             * @param mod   The triggered mod.
                             * @param eventName   The name of the event that was fired.
                             * @param settings   The battle information.
                             */
                            onBattleComplete: function (mod, eventName, settings) {
                                var grass = this.player.grass;
                                var grassMap = grass ? this.AreaSpawner.getMap(grass.mapName) : undefined;
                                var grassArea = grassMap ? grassMap.areas[grass.areaName] : undefined;
                                var opponent = settings.battlers.opponent.category;
                                if (!grassArea || opponent !== "Wild") {
                                    return;
                                }
                                grassArea.pokemonEncountered = true;
                            },
                            /**
                             * Hides all types of PokeBalls from the items menu in battle.
                             *
                             * @param mod   The triggered mod.
                             * @param eventName   The name of the event that was fired.
                             * @param items   The Player's items.
                             */
                            onOpenItemsMenu: function (mod, eventName, items) {
                                var grassMap = this.player.grass && this.AreaSpawner.getMap(this.player.grass.mapName);
                                var grassArea = grassMap && grassMap.areas[this.player.grass.areaName];
                                if (!this.BattleMover.getInBattle() || !(grassArea && grassArea.pokemonEncountered)) {
                                    return;
                                }
                                for (var i = items.length - 1; i > -1; i -= 1) {
                                    var currentItem = this.MathDecider.getConstant("items")[items[i].item];
                                    if (currentItem.category === "PokeBall") {
                                        items.splice(i, 1);
                                    }
                                }
                            },
                            /**
                             * Removes the fainted Pokemon from the Player's party and adds it to the PC.
                             *
                             * @param mod   The triggered mod.
                             * @param eventName   The name of the event that was fired.
                             * @param thing   The fainted Pokemon.
                             * @param actors   The Player's party Pokemon.
                             */
                            onFaint: function (mod, eventName, thing, actors) {
                                var partyPokemon = this.ItemsHolder.getItem("PokemonInParty");
                                var pcPokemon = this.ItemsHolder.getItem("PokemonInPC");
                                actors.splice(actors.indexOf(thing), 1);
                                partyPokemon.splice(partyPokemon.indexOf(thing), 1);
                                pcPokemon.push(thing);
                            }
                        }
                    },
                    {
                        name: "Infinite Repel",
                        enabled: false,
                        events: {
                            /**
                             * Prevents the Player from encountering any wild Pokemon.
                             *
                             * @param mod   The triggered mod.
                             */
                            onModEnable: function (mod) {
                                this.battles.checkPlayerGrassBattle = function () {
                                    return false;
                                };
                            },
                            /**
                             * Allows the Player to encounter wild Pokemon.
                             *
                             * @param mod   The triggered mod.
                             */
                            onModDisable: function (mod) {
                                delete this.battles.checkPlayerGrassBattle;
                            }
                        }
                    },
                    {
                        name: "Repeat Trainers",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                return;
                            },
                            onModDisable: function (mod) {
                                return;
                            },
                            onDialogFinish: function (mod, eventName, other) {
                                if (other.trainer) {
                                    other.alreadyBattled = false;
                                }
                            }
                        }
                    },
                    {
                        name: "Scaling Levels",
                        enabled: false,
                        events: {
                            onModEnable: function (mod) {
                                return;
                            },
                            onModDisable: function (mod) {
                                return;
                            },
                            /**
                             * Right before the battle starts, scales the enemy Pokemon
                             * to be around the same level as those in the player's party.
                             *
                             * @param mod   The mod being fired.
                             * @param eventName   The name of the mod event being fired.
                             * @param battleInfo   Settings for the current battle.
                             */
                            onBattleReady: function (mod, eventName, battleInfo) {
                                var opponent = battleInfo.battlers.opponent;
                                var player = battleInfo.battlers.player;
                                var statistics = this.MathDecider.getConstant("statisticNames");
                                var enemyPokemonAvg = this.MathDecider.compute("averageLevel", opponent.actors);
                                var playerPokemonAvg = this.MathDecider.compute("averageLevel", player.actors);
                                for (var _i = 0, _a = opponent.actors; _i < _a.length; _i++) {
                                    var actor = _a[_i];
                                    actor.level += playerPokemonAvg - enemyPokemonAvg;
                                    for (var _b = 0, statistics_1 = statistics; _b < statistics_1.length; _b++) {
                                        var statistic = statistics_1[_b];
                                        actor[statistic] = actor[statistic + "Normal"] =
                                            this.MathDecider.compute("pokemonStatistic", actor, statistic);
                                    }
                                }
                            }
                        }
                    }
                ]
            };
        }
        Settings.GenerateModsSettings = GenerateModsSettings;
        /* tslint:disable object-literal-key-quotes */
        function GenerateObjectsSettings() {
            "use strict";
            return {
                "onMake": "onMake",
                "indexMap": ["width", "height"],
                "doPropertiesFull": true,
                "giveFunctionsNames": true,
                "inheritance": {
                    "Quadrant": {},
                    "Map": {},
                    "Area": {},
                    "Location": {},
                    "Thing": {
                        "Character": {
                            "BirdPokemon": {},
                            "Boss": {},
                            "BugCatcher": {},
                            "Buzzer": {},
                            "Cashier": {},
                            "ChubbyGuy": {},
                            "CoolTrainerM": {},
                            "Dad": {},
                            "Daisy": {},
                            "DeskWoman": {},
                            "Elder": {},
                            "Fatty": {},
                            "Girl": {},
                            "Gentleman": {},
                            "GlassesOldGuy": {},
                            "Guy": {},
                            "GymGuide": {},
                            "HMCharacter": {
                                "CuttableTree": {},
                                "StrengthBoulder": {}
                            },
                            "Lady": {},
                            "Lass": {},
                            "LandPokemon": {},
                            "LittleGirl": {},
                            "Mother": {},
                            "Nurse": {},
                            "Oak": {},
                            "OldMan": {},
                            "Player": {},
                            "Pokeball": {},
                            "Rival": {},
                            "Scientist": {},
                            "Toddler": {},
                            "WaterPokemon": {}
                        },
                        "Solid": {
                            "AsianScroll": {},
                            "BedSingle": {},
                            "Book": {},
                            "Bookshelf": {},
                            "BuildingBase": {
                                "BuildingTopBase": {
                                    "BuildingTopLeft": {},
                                    "BuildingTopMiddle": {},
                                    "BuildingTopRight": {}
                                },
                                "BuildingMiddleBase": {
                                    "BuildingMiddleLeft": {},
                                    "BuildingMiddleMiddle": {},
                                    "BuildingMiddleRight": {},
                                    "BuildingMiddleWindow": {}
                                },
                                "BuildingBottom": {
                                    "BuildingBottomLeft": {},
                                    "BuildingBottomMiddle": {},
                                    "BuildingBottomRight": {}
                                }
                            },
                            "Cabinet": {},
                            "CollisionDetector": {
                                "CutsceneTriggerer": {},
                                "MenuTriggerer": {},
                                "SightDetector": {},
                                "ThemePlayer": {},
                                "Transporter": {
                                    "CaveOpening": {},
                                    "Door": {},
                                    "HiddenTransporter": {},
                                    "StairsDown": {},
                                    "StairsUp": {},
                                    "StairsVertical": {}
                                }
                            },
                            "Computer": {},
                            "ComputerDesk": {},
                            "ConsoleAndController": {},
                            "DialogResponder": {
                                "CutsceneResponder": {}
                            },
                            "FenceWide": {},
                            "FenceVertical": {},
                            "FloorDiamondsDark": {},
                            "Grass": {},
                            "GymStatue": {},
                            "HealingMachine": {},
                            "HealingMachineBall": {},
                            "HouseBase": {
                                "HouseSide": {
                                    "HouseLeft": {},
                                    "HouseMiddle": {},
                                    "HouseRight": {}
                                },
                                "HouseTop": {},
                                "HouseTopRoof": {},
                                "HouseTopRoofSide": {
                                    "HouseTopRoofLeft": {},
                                    "HouseTopRoofRight": {}
                                }
                            },
                            "HouseCenterLeft": {},
                            "HouseCenterMiddle": {},
                            "HouseCenterRight": {},
                            "HouseLargeBase": {
                                "HouseLargeTopLeft": {},
                                "HouseLargeTopMiddle": {},
                                "HouseLargeTopRight": {},
                                "HouseLargeCenter": {
                                    "HouseLargeCenterLeft": {},
                                    "HouseLargeCenterMiddle": {},
                                    "HouseLargeCenterRight": {}
                                }
                            },
                            "HouseWallWhitewash": {},
                            "InvisibleWall": {},
                            "LabComputer": {},
                            "Label": {
                                "GymLabel": {},
                                "MartLabel": {},
                                "PokeLabel": {}
                            },
                            "Ledge": {},
                            "LedgeOpening": {},
                            "MountainSolidBase": {
                                "MountainTop": {},
                                "MountainTopRight": {},
                                "MountainTopLeft": {},
                                "MountainRight": {},
                                "MountainLeft": {},
                                "MountainBottom": {},
                                "MountainBottomLeft": {},
                                "MountainBottomRight": {}
                            },
                            "PlantLarge": {},
                            "PlantSmall": {},
                            "PokeCenterDesk": {
                                "PokeCenterDeskBlocker": {},
                                "PokeCenterDeskLeft": {}
                            },
                            "PottedPalmTree": {},
                            "Register": {},
                            "Rock": {},
                            "Sign": {},
                            "SofaLeft": {},
                            "Spawner": {},
                            "SquareWall": {
                                "SquareWallTop": {},
                                "SquareWallFront": {}
                            },
                            "StoreAisle": {},
                            "StoreFridge": {},
                            "StoreSaleBin": {},
                            "Stump": {},
                            "Table": {
                                "Table1x2": {},
                                "Table2x2": {},
                                "Table2x3": {},
                                "Table3x1": {}
                            },
                            "TelevisionMonitor": {},
                            "Tree": {},
                            "WaterEdge": {
                                "WaterEdgeTop": {},
                                "WaterEdgeRight": {},
                                "WaterEdgeBottom": {},
                                "WaterEdgeLeft": {}
                            },
                            "WindowDetector": {
                                "AreaSpawner": {}
                            }
                        },
                        "Scenery": {
                            "Blackboard": {},
                            "Bridge": {},
                            "Clipboard": {},
                            "Doormat": {},
                            "DoormatDotted": {},
                            "DoormatDashed": {},
                            "Flower": {},
                            "FlowerVase": {},
                            "ForestDirt": {},
                            "GroundArrow": {},
                            "Notepad": {},
                            "Painting": {},
                            "PokeCenterPoster": {},
                            "Shadow": {},
                            "SmokeSmall": {},
                            "SmokeMedium": {},
                            "SmokeLarge": {},
                            "Stool": {},
                            "Window": {},
                            "WindowBlinds": {},
                            "Portrait": {
                                "PlayerPortrait": {},
                                "PlayerSilhouetteSmall": {},
                                "PlayerSilhouetteLarge": {},
                                "OakPortrait": {},
                                "RivalPortrait": {},
                                "BlainePortrait": {},
                                "BrockPortrait": {},
                                "ErikaPortrait": {},
                                "GiovanniPortrait": {},
                                "KogaPortrait": {},
                                "LtSurgePortrait": {},
                                "MistyPortrait": {},
                                "SabrinaPortrait": {}
                            },
                            "BattleSprite": {
                                "BattleSpriteFront": {
                                    "BattleSpriteFrontSmall": {
                                        "BULBASAURFront": {},
                                        "CHARMANDERFront": {},
                                        "SQUIRTLEFront": {},
                                        "CATERPIEFront": {},
                                        "METAPODFront": {},
                                        "WEEDLEFront": {},
                                        "KAKUNAFront": {},
                                        "PIDGEYFront": {},
                                        "RATTATAFront": {},
                                        "SPEAROWFront": {},
                                        "EKANSFront": {},
                                        "PIKACHUFront": {},
                                        "SANDSHREWFront": {},
                                        "NIDORANFemaleSymbolFront": {},
                                        "NIDORANMaleSymbolFront": {},
                                        "CLEFAIRYFront": {},
                                        "JIGGLYPUFFFront": {},
                                        "ZUBATFront": {},
                                        "ODDISHFront": {},
                                        "PARASFront": {},
                                        "VENONATFront": {},
                                        "DIGLETTFront": {},
                                        "MEOWTHFront": {},
                                        "PSYDUCKFront": {},
                                        "MANKEYFront": {},
                                        "GROWLITHEFront": {},
                                        "POLIWAGFront": {},
                                        "ABRAFront": {},
                                        "MACHOPFront": {},
                                        "BELLSPROUTFront": {},
                                        "TENTACOOLFront": {},
                                        "GEODUDEFront": {},
                                        "SLOWPOKEFront": {},
                                        "MAGNEMITEFront": {},
                                        "DODUOFront": {},
                                        "GRIMERFront": {},
                                        "SHELLDERFront": {},
                                        "KRABBYFront": {},
                                        "VOLTORBFront": {},
                                        "ELECTRODEFront": {},
                                        "CUBONEFront": {},
                                        "HORSEAFront": {},
                                        "DITTOFront": {},
                                        "EEVEEFront": {},
                                        "OMANYTEFront": {},
                                        "KABUTOFront": {},
                                        "DRATINIFront": {},
                                        "MEWFront": {}
                                    },
                                    "BattleSpriteFrontMedium": {
                                        "BugCatcherFront": {},
                                        "IVYSAURFront": {},
                                        "CHARMELEONFront": {},
                                        "WARTORTLEFront": {},
                                        "PIDGEOTTOFront": {},
                                        "RATICATEFront": {},
                                        "SANDSLASHFront": {},
                                        "NIDORINAFront": {},
                                        "NIDORINOFront": {},
                                        "CLEFABLEFront": {},
                                        "VULPIXFront": {},
                                        "WIGGLYTUFFFront": {},
                                        "GLOOMFront": {},
                                        "DUGTRIOFront": {},
                                        "POLIWHIRLFront": {},
                                        "KADABRAFront": {},
                                        "WEEPINBELLFront": {},
                                        "TENTACRUELFront": {},
                                        "GRAVELERFront": {},
                                        "GOLEMFront": {},
                                        "PONYTAFront": {},
                                        "MAGNETONFront": {},
                                        "FARFETCHDFront": {},
                                        "SEELFront": {},
                                        "DEWGONGFront": {},
                                        "HAUNTERFront": {},
                                        "GENGARFront": {},
                                        "DROWZEEFront": {},
                                        "MAROWAKFront": {},
                                        "HITMONCHANFront": {},
                                        "KOFFINGFront": {},
                                        "CHANSEYFront": {},
                                        "TANGELAFront": {},
                                        "SEADRAFront": {},
                                        "STARYUFront": {},
                                        "STARMIEFront": {},
                                        "GOLDEENFront": {},
                                        "MRMIMEFront": {},
                                        "JYNXFront": {},
                                        "ELECTABUZZFront": {},
                                        "MAGMARFront": {},
                                        "MAGIKARPFront": {},
                                        "VAPOREONFront": {},
                                        "JOLTEONFront": {},
                                        "FLAREONFront": {},
                                        "PORYGONFront": {},
                                        "OMASTARFront": {},
                                        "KABUTOPSFront": {},
                                        "DRAGONAIRFront": {}
                                    },
                                    "BattleSpritFrontLarge": {
                                        "BROCKFront": {},
                                        "JRTRAINERFront": {},
                                        "VENUSAURFront": {},
                                        "CHARIZARDFront": {},
                                        "BLASTOISEFront": {},
                                        "BUTTERFREEFront": {},
                                        "BEEDRILLFront": {},
                                        "PIDGEOTFront": {},
                                        "FEAROWFront": {},
                                        "ARBOKFront": {},
                                        "RAICHUFront": {},
                                        "NIDOQUEENFront": {},
                                        "NIDOKINGFront": {},
                                        "NINETALESFront": {},
                                        "GOLBATFront": {},
                                        "VILEPLUMEFront": {},
                                        "PARASECTFront": {},
                                        "VENOMOTHFront": {},
                                        "PERSIANFront": {},
                                        "GOLDUCKFront": {},
                                        "PRIMEAPEFront": {},
                                        "ARCANINEFront": {},
                                        "POLIWRATHFront": {},
                                        "ALAKAZAMFront": {},
                                        "MACHOKEFront": {},
                                        "MACHAMPFront": {},
                                        "VICTREEBELFront": {},
                                        "RAPIDASHFront": {},
                                        "SLOWBROFront": {},
                                        "DODRIOFront": {},
                                        "MUKFront": {},
                                        "CLOYSTERFront": {},
                                        "GASTLYFront": {},
                                        "ONIXFront": {},
                                        "HYPNOFront": {},
                                        "KINGLERFront": {},
                                        "EXEGGCUTEFront": {},
                                        "EXEGGUTORFront": {},
                                        "HITMONLEEFront": {},
                                        "LICKITUNGFront": {},
                                        "WEEZINGFront": {},
                                        "RHYHORNFront": {},
                                        "RHYDONFront": {},
                                        "KANGASKHANFront": {},
                                        "SEAKINGFront": {},
                                        "SCYTHERFront": {},
                                        "PINSIRFront": {},
                                        "TAUROSFront": {},
                                        "GYARADOSFront": {},
                                        "LAPRASFront": {},
                                        "AERODACTYLFront": {},
                                        "SNORLAXFront": {},
                                        "ARTICUNOFront": {},
                                        "ZAPDOSFront": {},
                                        "MOLTRESFront": {},
                                        "DRAGONITEFront": {},
                                        "MEWTWOFront": {}
                                    }
                                },
                                "BattleSpriteBack": {
                                    "PlayerBack": {},
                                    "ElderBack": {},
                                    "BULBASAURBack": {},
                                    "IVYSAURBack": {},
                                    "VENUSAURBack": {},
                                    "CHARMANDERBack": {},
                                    "CHARMELEONBack": {},
                                    "CHARIZARDBack": {},
                                    "SQUIRTLEBack": {},
                                    "WARTORTLEBack": {},
                                    "BLASTOISEBack": {},
                                    "CATERPIEBack": {},
                                    "METAPODBack": {},
                                    "BUTTERFREEBack": {},
                                    "WEEDLEBack": {},
                                    "KAKUNABack": {},
                                    "BEEDRILLBack": {},
                                    "PIDGEYBack": {},
                                    "PIDGEOTTOBack": {},
                                    "PIDGEOTBack": {},
                                    "RATTATABack": {},
                                    "RATICATEBack": {},
                                    "SPEAROWBack": {},
                                    "FEAROWBack": {},
                                    "EKANSBack": {},
                                    "ARBOKBack": {},
                                    "PIKACHUBack": {},
                                    "RAICHUBack": {},
                                    "SANDSHREWBack": {},
                                    "SANDSLASHBack": {},
                                    "NIDORANFemaleSymbolBack": {},
                                    "NIDORINABack": {},
                                    "NIDOQUEENBack": {},
                                    "NIDORANMaleSymbolBack": {},
                                    "NIDORINOBack": {},
                                    "NIDOKINGBack": {},
                                    "CLEFAIRYBack": {},
                                    "CLEFABLEBack": {},
                                    "VULPIXBack": {},
                                    "NINETALESBack": {},
                                    "JIGGLYPUFFBack": {},
                                    "WIGGLYTUFFBack": {},
                                    "ZUBATBack": {},
                                    "GOLBATBack": {},
                                    "ODDISHBack": {},
                                    "GLOOMBack": {},
                                    "VILEPLUMEBack": {},
                                    "PARASBack": {},
                                    "PARASECTBack": {},
                                    "VENONATBack": {},
                                    "VENOMOTHBack": {},
                                    "DIGLETTBack": {},
                                    "DUGTRIOBack": {},
                                    "MEOWTHBack": {},
                                    "PERSIANBack": {},
                                    "PSYDUCKBack": {},
                                    "GOLDUCKBack": {},
                                    "MANKEYBack": {},
                                    "PRIMEAPEBack": {},
                                    "GROWLITHEBack": {},
                                    "ARCANINEBack": {},
                                    "POLIWAGBack": {},
                                    "POLIWHIRLBack": {},
                                    "POLIWRATHBack": {},
                                    "ABRABack": {},
                                    "KADABRABack": {},
                                    "ALAKAZAMBack": {},
                                    "MACHOPBack": {},
                                    "MACHOKEBack": {},
                                    "MACHAMPBack": {},
                                    "BELLSPROUTBack": {},
                                    "WEEPINBELLBack": {},
                                    "VICTREEBELBack": {},
                                    "TENTACOOLBack": {},
                                    "TENTACRUELBack": {},
                                    "GEODUDEBack": {},
                                    "GRAVELERBack": {},
                                    "GOLEMBack": {},
                                    "PONYTABack": {},
                                    "RAPIDASHBack": {},
                                    "SLOWPOKEBack": {},
                                    "SLOWBROBack": {},
                                    "MAGNEMITEBack": {},
                                    "MAGNETONBack": {},
                                    "FARFETCHDBack": {},
                                    "DODUOBack": {},
                                    "DODRIOBack": {},
                                    "SEELBack": {},
                                    "DEWGONGBack": {},
                                    "GRIMERBack": {},
                                    "MUKBack": {},
                                    "SHELLDERBack": {},
                                    "CLOYSTERBack": {},
                                    "GASTLYBack": {},
                                    "HAUNTERBack": {},
                                    "GENGARBack": {},
                                    "ONIXBack": {},
                                    "DROWZEEBack": {},
                                    "HYPNOBack": {},
                                    "KRABBYBack": {},
                                    "KINGLERBack": {},
                                    "VOLTORBBack": {},
                                    "ELECTRODEBack": {},
                                    "EXEGGCUTEBack": {},
                                    "EXEGGUTORBack": {},
                                    "CUBONEBack": {},
                                    "MAROWAKBack": {},
                                    "HITMONLEEBack": {},
                                    "HITMONCHANBack": {},
                                    "LICKITUNGBack": {},
                                    "KOFFINGBack": {},
                                    "WEEZINGBack": {},
                                    "RHYHORNBack": {},
                                    "RHYDONBack": {},
                                    "CHANSEYBack": {},
                                    "TANGELABack": {},
                                    "KANGASKHANBack": {},
                                    "HORSEABack": {},
                                    "SEADRABack": {},
                                    "GOLDEENBack": {},
                                    "SEAKINGBack": {},
                                    "STARYUBack": {},
                                    "STARMIEBack": {},
                                    "MRMIMEBack": {},
                                    "SCYTHERBack": {},
                                    "JYNXBack": {},
                                    "ELECTABUZZBack": {},
                                    "MAGMARBack": {},
                                    "PINSIRBack": {},
                                    "TAUROSBack": {},
                                    "MAGIKARPBack": {},
                                    "GYARADOSBack": {},
                                    "LAPRASBack": {},
                                    "DITTOBack": {},
                                    "EEVEEBack": {},
                                    "VAPOREONBack": {},
                                    "JOLTEONBack": {},
                                    "FLAREONBack": {},
                                    "PORYGONBack": {},
                                    "OMANYTEBack": {},
                                    "OMASTARBack": {},
                                    "KABUTOBack": {},
                                    "KABUTOPSBack": {},
                                    "AERODACTYLBack": {},
                                    "SNORLAXBack": {},
                                    "ARTICUNOBack": {},
                                    "ZAPDOSBack": {},
                                    "MOLTRESBack": {},
                                    "DRATINIBack": {},
                                    "DRAGONAIRBack": {},
                                    "DRAGONITEBack": {},
                                    "MEWTWOBack": {},
                                    "MEWBack": {}
                                }
                            }
                        },
                        "Terrain": {
                            "TerrainSmall": {
                                "TerrainSmallRepeating": {
                                    "WallIndoorHorizontalBands": {
                                        "WallIndoorHorizontalBandsInverse": {}
                                    },
                                    "WallIndoorLightWithDarkBottom": {}
                                }
                            },
                            "BrickRoad": {},
                            "DirtClean": {},
                            "DirtForest": {},
                            "DirtLight": {},
                            "DirtMedium": {},
                            "DirtWhite": {},
                            "FloorCheckered": {},
                            "FloorDiamonds": {},
                            "FloorLinedHorizontal": {},
                            "FloorTiledDiagonal": {},
                            "Mountain": {},
                            "Water": {},
                            "WallIndoorFancyWithDarkBottom": {},
                            "WallIndoorHorizontalBandsDark": {}
                        },
                        "Text": {
                            "Exclamation": {},
                            "HalfArrowHorizontal": {},
                            "HPBar": {},
                            "Note": {},
                            "ExplosionSmall": {},
                            "ScratchLine": {},
                            "Square": {
                                "BlackSquare": {},
                                "DarkGraySquare": {},
                                "LightGraySquare": {},
                                "WhiteSquare": {}
                            },
                            "CharacterUpperCase": {
                                "CharA": {},
                                "CharB": {},
                                "CharC": {},
                                "CharD": {},
                                "CharE": {},
                                "CharF": {},
                                "CharG": {},
                                "CharH": {},
                                "CharI": {},
                                "CharJ": {},
                                "CharK": {},
                                "CharL": {},
                                "CharM": {},
                                "CharN": {},
                                "CharO": {},
                                "CharP": {},
                                "CharQ": {},
                                "CharR": {},
                                "CharS": {},
                                "CharT": {},
                                "CharU": {},
                                "CharV": {},
                                "CharW": {},
                                "CharX": {},
                                "CharY": {},
                                "CharZ": {}
                            },
                            "CharacterLowerCase": {
                                "Chara": {},
                                "Charb": {},
                                "Charc": {},
                                "Chard": {},
                                "Chare": {},
                                "Charf": {},
                                "Charh": {},
                                "Chari": {},
                                "Chark": {},
                                "Charl": {},
                                "Charm": {},
                                "Charn": {},
                                "Charo": {},
                                "Charr": {},
                                "Chars": {},
                                "Chart": {},
                                "Charu": {},
                                "Charv": {},
                                "Charw": {},
                                "Charx": {},
                                "Charz": {},
                                "CharacterDropped": {
                                    "Charg": {},
                                    "Charj": {},
                                    "Charp": {},
                                    "Charq": {},
                                    "Chary": {}
                                }
                            },
                            "CharacterShadow": {
                                "Char0Shadow": {},
                                "Char1Shadow": {},
                                "Char2Shadow": {},
                                "Char3Shadow": {},
                                "Char4Shadow": {},
                                "Char5Shadow": {},
                                "Char6Shadow": {},
                                "Char7Shadow": {},
                                "Char8Shadow": {},
                                "Char9Shadow": {}
                            },
                            "Number": {
                                "Char0": {},
                                "Char1": {},
                                "Char2": {},
                                "Char3": {},
                                "Char4": {},
                                "Char5": {},
                                "Char6": {},
                                "Char7": {},
                                "Char8": {},
                                "Char9": {}
                            },
                            "Symbol": {
                                "CharSpace": {},
                                "CharTimes": {},
                                "CharLeftParenthesis": {},
                                "CharRightParenthesis": {},
                                "CharColon": {},
                                "CharSemicolon": {},
                                "CharLeftSquareBracket": {},
                                "CharRightSquareBracket": {},
                                "CharPoke": {},
                                "CharMon": {},
                                "CharNo": {},
                                "CharID": {},
                                "CharHyphen": {},
                                "CharMDash": {},
                                "CharUnderscore": {},
                                "CharQuestionMark": {},
                                "CharExclamationMark": {},
                                "CharMaleSymbol": {},
                                "CharFemaleSymbol": {},
                                "CharSlash": {},
                                "CharPeriod": {},
                                "CharComma": {},
                                "CharED": {},
                                "CharApostrophe": {},
                                "CharFeet": {},
                                "CharInches": {},
                                "ChareFancy": {},
                                "CharBall": {},
                                "CharBallEmpty": {},
                                "CharCircle": {},
                                "CharHP": {},
                                "CharPP": {},
                                "CharTo": {},
                                "CharLevel": {},
                                "Char$": {}
                            },
                            "CharArrow": {
                                "CharArrowUp": {},
                                "CharArrowRight": {},
                                "CharArrowDown": {},
                                "CharArrowLeft": {}
                            },
                            "HalfArrow": {
                                "HalfArrowLeft": {},
                                "HalfArrowRight": {}
                            },
                            "Line": {
                                "LineDecoratorHorizontal": {
                                    "LineDecoratorHorizontalLeft": {},
                                    "LineDecoratorHorizontalRight": {}
                                },
                                "LineDecoratorVertical": {},
                                "LineSeparatorHorizontal": {}
                            },
                            "MapGreyDiagonal": {},
                            "TownMapNoWater": {}
                        },
                        "Menu": {}
                    }
                },
                "properties": {
                    "Quadrant": {
                        "tolx": 0,
                        "toly": 0
                    },
                    "Map": {
                        "initialized": false
                    },
                    "Area": {
                        "background": "black",
                        // "stretches": [
                        //     { "thing": "BackgroundFaker", "noBoundaryStretch": true } // This needs implementation.
                        // ],
                        "onMake": FullScreenPokemon.Maps.prototype.areaProcess,
                        "attributes": {
                            "invisibleWallBorders": {
                                "afters": [
                                    { "thing": "InvisibleWall", "noBoundaryStretch": true },
                                    { "thing": "InvisibleWall", "noBoundaryStretch": true },
                                    { "thing": "InvisibleWall", "noBoundaryStretch": true },
                                    { "thing": "InvisibleWall", "noBoundaryStretch": true }
                                ]
                            }
                        }
                    },
                    "Location": {
                        "entry": "Normal"
                    },
                    "Thing": {
                        // Sizing
                        "width": 8,
                        "height": 8,
                        // Placement
                        "alive": true,
                        "placed": false,
                        "maxquads": 4,
                        // Sprites
                        "sprite": "",
                        "spriteType": "neither",
                        "scale": 1,
                        "offsetX": 0,
                        "offsetY": 0,
                        // Movements
                        "movement": undefined,
                        // Collisions
                        "tolTop": 0,
                        "tolRight": 0,
                        "tolBottom": 0,
                        "tolLeft": 0,
                        // Triggered Functions
                        "onMake": FullScreenPokemon.Things.prototype.process
                    },
                    "Character": {
                        "groupType": "Character",
                        "speed": FullScreenPokemon.Unitsize / 3,
                        "walking": false,
                        "shouldWalk": false,
                        "switchDirectionOnDialog": true,
                        "heightGrass": 4,
                        "direction": 2,
                        "offsetY": FullScreenPokemon.Unitsize * -2,
                        "roamingDirections": [0, 1, 2, 3],
                        "onThingAdd": FullScreenPokemon.Animations.prototype.spawnCharacter,
                        "onWalkingStart": FullScreenPokemon.Animations.prototype.animateCharacterStartWalking,
                        "onWalkingStop": FullScreenPokemon.Animations.prototype.animateCharacterStopWalking,
                        "activate": FullScreenPokemon.Collisions.prototype.collideCharacterDialog
                    },
                    "Buzzer": {
                        "width": 3.5,
                        "height": 3,
                        "nocollide": true
                    },
                    "CoolTrainerM": {
                        "attributes": {
                            "sitting": {}
                        }
                    },
                    "Elder": {
                        "attributes": {
                            "resting": {}
                        }
                    },
                    "Player": {
                        "id": "player",
                        "player": true,
                        "canKeyWalking": true,
                        "direction": 2,
                        "speed": FullScreenPokemon.Unitsize / 2,
                        "onWalkingStart": FullScreenPokemon.Animations.prototype.animateCharacterStartWalking,
                        "onWalkingStop": FullScreenPokemon.Animations.prototype.animatePlayerStopWalking,
                        "getKeys": function () {
                            return {
                                "0": false,
                                "1": false,
                                "2": false,
                                "3": false,
                                "a": false,
                                "b": false
                            };
                        }
                    },
                    "Pokeball": {
                        "action": "item",
                        "activate": FullScreenPokemon.Collisions.prototype.collidePokeball,
                        "borderPrimary": true
                    },
                    "Rival": {
                        "id": "Rival"
                    },
                    "Solid": {
                        "repeat": true,
                        "groupType": "Solid",
                        "activate": FullScreenPokemon.Collisions.prototype.collideCharacterDialog
                    },
                    "BedSingle": [8, 16],
                    "Bookshelf": {
                        "width": 8,
                        "height": 16,
                        "dialogDirections": true,
                        "dialog": ["", "", "Crammed full of %%%%%%%POKEMON%%%%%%% books!", ""]
                    },
                    "BuildingBase": [4, 4],
                    "BuildingTopBase": {
                        "height": 16,
                        "spriteheight": 4
                    },
                    "BuildingMiddleBase": {
                        "height": 8,
                        "spriteheight": 4
                    },
                    "BuildingBottom": {
                        "height": 4
                    },
                    "Cabinet": [8, 16],
                    "CollisionDetector": {
                        "collide": FullScreenPokemon.Collisions.prototype.collideCollisionDetector,
                        "active": false,
                        "hidden": true
                    },
                    "CutsceneTriggerer": {
                        "activate": FullScreenPokemon.Animations.prototype.activateCutsceneTriggerer,
                        "requireOverlap": true
                    },
                    "MenuTriggerer": {
                        "activate": FullScreenPokemon.Animations.prototype.activateMenuTriggerer
                    },
                    "SightDetector": {
                        "activate": FullScreenPokemon.Animations.prototype.activateSightDetector,
                        "requireOverlap": true,
                        "hidden": true
                    },
                    "ThemePlayer": {
                        "activate": FullScreenPokemon.Animations.prototype.activateThemePlayer,
                        "requireOverlap": true,
                        "hidden": true
                    },
                    "Transporter": {
                        "activate": FullScreenPokemon.Animations.prototype.activateTransporter,
                        "requireOverlap": true,
                        "hidden": false
                    },
                    "HiddenTransporter": {
                        "hidden": true,
                        "noStretchBoundaries": true
                    },
                    "Computer": {
                        "width": 8,
                        "height": 12,
                        "tolBottom": FullScreenPokemon.Unitsize * 4
                    },
                    "ComputerDesk": [8, 16],
                    "ConsoleController": [8, 5],
                    "DialogResponder": {
                        "hidden": true
                    },
                    "CutsceneResponder": {
                        "activate": FullScreenPokemon.Animations.prototype.activateCutsceneResponder
                    },
                    "FenceVertical": [4, 8],
                    "FloorDiamondsDark": {
                        "width": 4,
                        "height": 8,
                        "spritewidth": 8,
                        "spriteheight": 8,
                        "nocollide": true
                    },
                    "Grass": {
                        "rarity": 10,
                        "collide": FullScreenPokemon.Collisions.prototype.collideCharacterGrass
                    },
                    "GymStatue": {
                        "height": 16,
                        "activate": FullScreenPokemon.Animations.prototype.activateGymStatue
                    },
                    "HealingMachine": [16, 16],
                    "HealingMachineBall": [3, 3],
                    "HMCharacter": {
                        "activate": FullScreenPokemon.Animations.prototype.activateHMCharacter
                    },
                    "CuttableTree": {
                        "moveName": "Cut",
                        "moveCallback": FullScreenPokemon.Animations.prototype.partyActivateCut,
                        "requiredBadge": "Cascade"
                    },
                    "StrengthBoulder": {
                        "moveName": "Strength",
                        "moveCallback": FullScreenPokemon.Animations.prototype.partyActivateStrength,
                        "speed": FullScreenPokemon.Unitsize,
                        "requiredBadge": "Rainbow"
                    },
                    "HouseBase": {
                        "width": 32,
                        "height": 8,
                        "spritewidth": 16,
                        "spriteheight": 16
                    },
                    "HouseSide": {
                        "width": 8,
                        "spritewidth": 8,
                        "spriteheight": 8
                    },
                    "HouseTop": {
                        "width": 32,
                        "height": 16,
                        "spritewidth": 16
                    },
                    "HouseTopRoof": {
                        "spritewidth": .5
                    },
                    "HouseTopRoofSide": {
                        "width": 8,
                        "spritewidth": 8,
                        "spriteheight": 8
                    },
                    "HouseLargeBase": {
                        "width": 48,
                        "height": 20,
                        "spritewidth": 20
                    },
                    "HouseLargeTopLeft": {
                        "width": 8,
                        "spritewidth": 8
                    },
                    "HouseLargeTopMiddle": {
                        "width": 48
                    },
                    "HouseLargeTopRight": {
                        "width": 8,
                        "spritewidth": 8
                    },
                    "HouseLargeCenter": {
                        "spritewidth": 4,
                        "height": 12
                    },
                    "HouseWallWhitewash": [4, 4],
                    "InvisibleWall": {
                        "hidden": true
                    },
                    "LabComputer": [16, 8],
                    "Label": {
                        "position": "end"
                    },
                    "GymLabel": [16, 4],
                    "Ledge": {
                        "width": 8,
                        "height": 4,
                        "spritewidth": 4,
                        "direction": 2,
                        "collide": FullScreenPokemon.Collisions.prototype.collideLedge,
                        "attributes": {
                            "jagged": {
                                "spritewidth": 16
                            },
                            "crumbleLeft": {},
                            "crumbleRight": {}
                        }
                    },
                    "LedgeOpening": {
                        "width": 8,
                        "height": 4,
                        "spritewidth": 4,
                        "nocollide": true
                    },
                    "MountainSolidBase": [4, 4],
                    "MountainTop": {
                        "width": 4,
                        "height": 5,
                        "tolBottom": FullScreenPokemon.Unitsize * -3
                    },
                    "PlantLarge": [16, 16],
                    "PokeCenterDeskBlocker": {
                        "width": 8,
                        "height": 8,
                        "spritewidth": 1
                    },
                    "PokeCenterDeskLeft": [4, 8],
                    "PottedPalmTree": [8, 16],
                    "Sign": {
                        "attributes": {
                            "forest": {}
                        }
                    },
                    "SofaLeft": [8, 16],
                    "Spawner": {
                        "hidden": true,
                        "onThingAdd": FullScreenPokemon.Animations.prototype.activateSpawner
                    },
                    "AreaSpawner": {
                        "activate": FullScreenPokemon.Animations.prototype.spawnAreaSpawner
                    },
                    "SquareWallTop": {
                        "spriteheight": .5
                    },
                    "SquareWallFront": {
                        "spriteheight": 1.5
                    },
                    "StoreAisle": [16, 16],
                    "StoreFridge": [8, 16],
                    "StoreSaleBin": [8, 12],
                    "Table": {
                        "tolBottom": FullScreenPokemon.Unitsize * 4
                    },
                    "Table1x2": [8, 16],
                    "Table2x2": [16, 16],
                    "Table2x3": [16, 16],
                    "Table3x1": [24, 12],
                    "Tree": {},
                    "Door": {
                        "width": 8,
                        "height": 8,
                        "requireDirection": 0,
                        "attributes": {
                            "indoor": {}
                        }
                    },
                    "WaterEdge": {
                        "height": 4,
                        "width": 4,
                        "collide": FullScreenPokemon.Collisions.prototype.collideWaterEdge,
                        "activate": FullScreenPokemon.Animations.prototype.activateHMCharacter,
                        "moveName": "Surf",
                        "moveCallback": FullScreenPokemon.Animations.prototype.partyActivateSurf,
                        "requiredBadge": "Soul"
                    },
                    "WaterEdgeTop": {
                        "exitDirection": 0
                    },
                    "WaterEdgeRight": {
                        "exitDirection": 1
                    },
                    "WaterEdgeBottom": {
                        "exitDirection": 2
                    },
                    "WaterEdgeLeft": {
                        "exitDirection": 3
                    },
                    "WindowDetector": {
                        "hidden": true,
                        "onThingAdd": FullScreenPokemon.Animations.prototype.spawnWindowDetector
                    },
                    "FloorLinedHorizontal": {
                        "spritewidth": .5,
                        "spriteheight": 2
                    },
                    "Scenery": {
                        "groupType": "Scenery",
                        "repeat": true
                    },
                    "Blackboard": [16, 8],
                    "Bridge": [4, 4],
                    "Clipboard": {
                        "offsetY": FullScreenPokemon.Unitsize * -1.5
                    },
                    "Doormat": {
                        "spritewidth": .5,
                        "spriteheight": 8
                    },
                    "DoormatDotted": {
                        "spritewidth": 3.5,
                        "spriteheight": 7.5
                    },
                    "DoormatDashed": {
                        "spritewidth": 4,
                        "spriteheight": 8
                    },
                    "Flower": {
                        "width": 4,
                        "height": 4,
                        "spriteCycle": [
                            ["one", "one", "two", "three"], "waving", 14
                        ]
                    },
                    "FlowerVase": [6, 6],
                    "ForestDirt": [4, 4],
                    "GroundArrow": [4, 4],
                    "HPBar": {
                        "width": .5,
                        "height": 2,
                        "repeat": true
                    },
                    "Note": [6.5, 7],
                    "Shadow": [7, 4],
                    "SmokeSmall": [5.5, 5.5],
                    "SmokeMedium": [7.5, 7.5],
                    "SmokeLarge": [7.5, 7.5],
                    "PlayerPortrait": [13, 23],
                    "PlayerSilhouetteSmall": [7, 11.5],
                    "PlayerSilhouetteLarge": [11, 20],
                    "OakPortrait": [14.5, 28],
                    "RivalPortrait": [14.5, 28],
                    "BattleSpriteFrontSmall": [20, 20],
                    "BattleSpriteFrontMedium": [24, 24],
                    "BattleSpriteFrontLarge": [28, 28],
                    "BattleSpriteBack": {
                        "width": 16,
                        "height": 14,
                        "scale": 2,
                        "repeat": false
                    },
                    "ElderBack": [14, 14],
                    "PlayerBack": [14, 14],
                    "Terrain": {
                        "groupType": "Terrain",
                        "repeat": true
                    },
                    "TerrainSmall": [2, 2],
                    "TerrainSmallRepeating": {
                        "width": 8,
                        "height": 8,
                        "spritewidth": 2,
                        "spriteheight": 2
                    },
                    "BrickRoad": [4, 4],
                    "Mountain": [4, 4],
                    "WallIndoorLightWithDarkBottom": {
                        "spritewidth": .5,
                        "spriteheight": 8
                    },
                    "WallIndoorFancyWithDarkBottom": [4, 8],
                    "WallIndoorHorizontalBandsDark": {
                        "width": 8,
                        "height": 8,
                        "spritewidth": .5,
                        "spriteheight": 2
                    },
                    "Water": {
                        "spriteCycle": [
                            ["one", "two", "three", "two", "one", "four", "five", "four"], "waving", 14
                        ]
                    },
                    "Text": {
                        "groupType": "Text",
                        "width": 4,
                        "height": 4,
                        "paddingX": 0,
                        "paddingY": 8,
                        "noshiftx": true,
                        "noshifty": true
                    },
                    "Exclamation": {
                        "width": 7,
                        "height": 7,
                        "offsetY": FullScreenPokemon.Unitsize * -2
                    },
                    "HalfArrowHorizontal": [4, 2],
                    "ExplosionSmall": [8, 8],
                    "ScratchLine": [1.5, 1.5],
                    "Square": {
                        "width": 1,
                        "height": 1,
                        "repeat": true
                    },
                    "CharacterDropped": {
                        "offsetY": FullScreenPokemon.Unitsize * .75
                    },
                    "CharacterShadow": [3.5, 3.5],
                    "CharMDash": {
                        "attributes": {
                            "blinking": {
                                "onThingAdd": function () { return console.log("HA"); }
                            }
                        }
                    },
                    "CharPoke": {
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharMon": {
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharNo": {
                        "width": 4,
                        "height": 3,
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharID": {
                        "width": 4,
                        "height": 3,
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharSlash": {
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharPeriod": {
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharComma": {
                        "offsetY": FullScreenPokemon.Unitsize * .5
                    },
                    "CharApostrophe": [1, 2],
                    "CharFeet": [2, 1.5],
                    "CharInches": [3.5, 2],
                    "CharBall": [3.5, 3.5],
                    "CharBallEmpty": [3.5, 3.5],
                    "CharCircle": [2.5, 2.5],
                    "CharHP": [5.5, 2],
                    "CharPP": [7.5, 3.5],
                    "CharTo": [3.5, 3],
                    "CharLevel": [3, 2.5],
                    "Char$": {
                        "width": 4,
                        "spritewidth": 2.5,
                        "height": 4,
                        "offsetX": FullScreenPokemon.Unitsize / 2,
                        "offsetY": FullScreenPokemon.Unitsize / 2
                    },
                    "CharArrowUp": [3.5, 2.5],
                    "CharArrowRight": [2.5, 3.5],
                    "CharArrowDown": [3.5, 2.5],
                    "CharArrowLeft": [2.5, 3.5],
                    "HalfArrow": [4, 2],
                    "Line": {
                        "width": 1,
                        "height": 1,
                        "repeat": true
                    },
                    "LineDecoratorHorizontal": [8, 3],
                    "LineDecoratorVertical": [3, 8],
                    "LineSeparatorHorizontal": [4, 4],
                    "MapGreyDiagonal": [4, 4],
                    "TownMapNoWater": [76, 128],
                    "Menu": {
                        "groupType": "Text",
                        "spritewidth": 4,
                        "spriteheight": 4,
                        "width": 8,
                        "height": 8,
                        "repeat": true,
                        "noshiftx": true,
                        "noshifty": true,
                        "arrowXOffset": 1.25,
                        "arrowYOffset": 1,
                        "textXOffset": 4,
                        "textYOffset": 7.5,
                        "textSpeed": 1,
                        "attributes": {
                            "plain": {},
                            "light": {
                                "spritewidth": 1,
                                "spriteheight": 1
                            },
                            "lined": {
                                "spritewidth": 2,
                                "spriteheight": 2
                            },
                            "dirty": {},
                            "watery": {
                                "spritewidth": 4,
                                "spriteheight": 4
                            }
                        }
                    }
                }
            };
        }
        Settings.GenerateObjectsSettings = GenerateObjectsSettings;
        function GenerateQuadrantsSettings() {
            "use strict";
            return {
                numRows: 5,
                numCols: 6,
                tolerance: FullScreenPokemon.Unitsize / 2,
                groupNames: ["Solid", "Character", "Scenery", "Terrain", "Text"],
                keyGroupName: "groupType"
            };
        }
        Settings.GenerateQuadrantsSettings = GenerateQuadrantsSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateRendererSettings() {
            "use strict";
            return {
                groupNames: ["Text", "Character", "Scenery", "Solid", "Terrain"],
                spriteCacheCutoff: 2048,
                framerateSkip: 2,
                keyOffsetX: "offsetX",
                keyOffsetY: "offsetY"
            };
        }
        Settings.GenerateRendererSettings = GenerateRendererSettings;
        /// <reference path="../../typings/GameStartr.d.ts" />
        function GenerateRunnerSettings() {
            "use strict";
            return {
                interval: 1000 / 60,
                adjustFramerate: true,
                games: [
                    function () {
                        this.PixelDrawer.refillGlobalCanvas(this.AreaSpawner.getArea().background);
                    },
                    function () {
                        this.QuadsKeeper.determineAllQuadrants("Terrain", this.GroupHolder.getGroup("Terrain"));
                        this.QuadsKeeper.determineAllQuadrants("Scenery", this.GroupHolder.getGroup("Scenery"));
                        this.QuadsKeeper.determineAllQuadrants("Solid", this.GroupHolder.getGroup("Solid"));
                    },
                    function () {
                        this.maintenance.maintainGeneric(this.GroupHolder.getGroup("Text"));
                    },
                    function () {
                        this.maintenance.maintainGeneric(this.GroupHolder.getGroup("Terrain"));
                    },
                    function () {
                        this.maintenance.maintainGeneric(this.GroupHolder.getGroup("Scenery"));
                    },
                    function () {
                        this.maintenance.maintainGeneric(this.GroupHolder.getGroup("Solid"));
                    },
                    function () {
                        this.maintenance.maintainCharacters(this.GroupHolder.getGroup("Character"));
                    },
                    function () {
                        this.maintenance.maintainPlayer(this.player);
                    },
                    function () {
                        this.TimeHandler.handleEvents();
                    }
                ]
            };
        }
        Settings.GenerateRunnerSettings = GenerateRunnerSettings;
        function GenerateScenesSettings() {
            "use strict";
            return {
                cutscenes: {
                    Battle: {
                        firstRoutine: "Entrance",
                        routines: {
                            Entrance: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleEntrance,
                            OpeningText: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleOpeningText,
                            OpponentIntro: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleOpponentIntro,
                            PlayerIntro: FullScreenPokemon.Cutscenes.prototype.cutsceneBattlePlayerIntro,
                            ShowPlayerMenu: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleShowPlayerMenu,
                            OpponentSendOut: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleOpponentSendOut,
                            OpponentSendOutAppear: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleOpponentSendOutAppear,
                            PlayerSendOut: FullScreenPokemon.Cutscenes.prototype.cutsceneBattlePlayerSendOut,
                            PlayerSendOutAppear: FullScreenPokemon.Cutscenes.prototype.cutsceneBattlePlayerSendOutAppear,
                            PlayerSwitchesSamePokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneBattlePlayerSwitchesSamePokemon,
                            MovePlayer: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleMovePlayer,
                            MovePlayerAnimate: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleMovePlayerAnimate,
                            MoveOpponent: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleMoveOpponent,
                            MoveOpponentAnimate: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleMoveOpponentAnimate,
                            Damage: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleDamage,
                            PokemonFaints: FullScreenPokemon.Cutscenes.prototype.cutsceneBattlePokemonFaints,
                            AfterPlayerPokemonFaints: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAfterPlayerPokemonFaints,
                            AfterOpponentPokemonFaints: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAfterOpponentPokemonFaints,
                            OpponentSwitchesPokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleOpponentSwitchesPokemon,
                            ExperienceGain: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleExperienceGain,
                            LevelUp: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleLevelUp,
                            LevelUpStats: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleLevelUpStats,
                            BattleExitFail: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleExitFail,
                            BattleExitFailReturn: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleExitFailReturn,
                            Victory: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleVictory,
                            VictorySpeech: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleVictorySpeech,
                            VictoryWinnings: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleVictoryWinnings,
                            Defeat: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleDefeat,
                            Complete: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleComplete,
                            // Attack utilities
                            ChangeStatistic: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleChangeStatistic,
                            // Attack animations
                            AttackGrowl: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAttackGrowl,
                            AttackTackle: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAttackTackle,
                            AttackTailWhip: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAttackTailWhip,
                            AttackScratch: FullScreenPokemon.Cutscenes.prototype.cutsceneBattleAttackScratch
                        }
                    },
                    TrainerSpotted: {
                        firstRoutine: "Exclamation",
                        routines: {
                            Exclamation: FullScreenPokemon.Cutscenes.prototype.cutsceneTrainerSpottedExclamation,
                            Approach: FullScreenPokemon.Cutscenes.prototype.cutsceneTrainerSpottedApproach,
                            Dialog: FullScreenPokemon.Cutscenes.prototype.cutsceneTrainerSpottedDialog
                        }
                    },
                    PokeCenter: {
                        firstRoutine: "Welcome",
                        routines: {
                            Welcome: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterWelcome,
                            Choose: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterChoose,
                            ChooseHeal: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterChooseHeal,
                            Healing: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterHealing,
                            HealingAction: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterHealingAction,
                            HealingComplete: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterHealingComplete,
                            ChooseCancel: FullScreenPokemon.Cutscenes.prototype.cutscenePokeCenterChooseCancel
                        }
                    },
                    PokeMart: {
                        firstRoutine: "Greeting",
                        routines: {
                            Greeting: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartGreeting,
                            Options: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartOptions,
                            BuyMenu: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartBuyMenu,
                            SelectAmount: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartSelectAmount,
                            ConfirmPurchase: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartConfirmPurchase,
                            CancelPurchase: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartCancelPurchase,
                            TryPurchase: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartTryPurchase,
                            FailPurchase: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartFailPurchase,
                            ContinueShopping: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartContinueShopping,
                            Exit: FullScreenPokemon.Cutscenes.prototype.cutscenePokeMartExit
                        }
                    },
                    Intro: {
                        firstRoutine: "FadeIn",
                        routines: {
                            FadeIn: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroFadeIn,
                            FirstDialog: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroFirstDialog,
                            FirstDialogFade: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroFirstDialogFade,
                            PokemonExpo: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPokemonExpo,
                            PokemonExplanation: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPokemonExplanation,
                            PlayerAppear: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerAppear,
                            PlayerName: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerName,
                            PlayerSlide: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerSlide,
                            PlayerNameOptions: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerNameOptions,
                            PlayerNameFromMenu: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerNameFromMenu,
                            PlayerNameFromKeyboard: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerNameFromKeyboard,
                            PlayerNameConfirm: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerNameConfirm,
                            PlayerNameComplete: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroPlayerNameComplete,
                            RivalAppear: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalAppear,
                            RivalName: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalName,
                            RivalSlide: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalSlide,
                            RivalNameOptions: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalNameOptions,
                            RivalNameFromMenu: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalNameFromMenu,
                            RivalNameFromKeyboard: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalNameFromKeyboard,
                            RivalNameConfirm: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalNameConfirm,
                            RivalNameComplete: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroRivalNameComplete,
                            LastDialogAppear: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroLastDialogAppear,
                            LastDialog: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroLastDialog,
                            ShrinkPlayer: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroShrinkPlayer,
                            FadeOut: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroFadeOut,
                            Finish: FullScreenPokemon.Cutscenes.prototype.cutsceneIntroFinish
                        }
                    },
                    OakIntro: {
                        firstRoutine: "FirstDialog",
                        routines: {
                            FirstDialog: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroFirstDialog,
                            Exclamation: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroExclamation,
                            Catchup: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroCatchup,
                            GrassWarning: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroGrassWarning,
                            FollowToLab: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroFollowToLab,
                            EnterLab: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroEnterLab,
                            WalkToTable: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroWalkToTable,
                            RivalComplain: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalComplain,
                            OakThinksToRival: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroOakThinksToRival,
                            RivalProtests: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalProtests,
                            OakRespondsToProtest: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroOakRespondsToProtest
                        }
                    },
                    OakIntroPokemonChoice: {
                        firstRoutine: "PlayerChecksPokeball",
                        routines: {
                            PlayerChecksPokeball: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerChecksPokeball,
                            PlayerDecidesPokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerDecidesPokemon,
                            PlayerTakesPokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerTakesPokemon,
                            PlayerChoosesNickname: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerChoosesNickname,
                            PlayerSetsNickname: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerSetsNickname,
                            RivalWalksToPokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoiceRivalWalksToPokemon,
                            RivalTakesPokemon: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroPokemonChoiceRivalTakesPokemon
                        }
                    },
                    OakIntroRivalBattle: {
                        routines: {
                            Challenge: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalBattleChallenge,
                            Approach: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalBattleApproach
                        }
                    },
                    OakIntroRivalLeaves: {
                        firstRoutine: "AfterBattle",
                        routines: {
                            AfterBattle: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalLeavesAfterBattle,
                            Complaint: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalLeavesComplaint,
                            Goodbye: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalLeavesGoodbye,
                            Walking: FullScreenPokemon.Cutscenes.prototype.cutsceneOakIntroRivalLeavesWalking
                        }
                    },
                    OakParcelPickup: {
                        firstRoutine: "Greeting",
                        routines: {
                            Greeting: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelPickupGreeting,
                            WalkToCounter: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelPickupWalkToCounter,
                            CounterDialog: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelPickupCounterDialog
                        }
                    },
                    OakParcelDelivery: {
                        firstRoutine: "Greeting",
                        routines: {
                            Greeting: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryGreeting,
                            RivalInterrupts: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryRivalInterrupts,
                            RivalWalksUp: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryRivalWalksUp,
                            RivalInquires: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryRivalInquires,
                            OakRequests: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryOakRequests,
                            OakDescribesPokedex: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryOakDescribesPokedex,
                            OakGivesPokedex: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryOakGivesPokedex,
                            OakDescribesGoal: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryOakDescribesGoal,
                            RivalAccepts: FullScreenPokemon.Cutscenes.prototype.cutsceneOakParcelDeliveryRivalAccepts
                        }
                    },
                    DaisyTownMap: {
                        firstRoutine: "Greeting",
                        routines: {
                            Greeting: FullScreenPokemon.Cutscenes.prototype.cutsceneDaisyTownMapGreeting,
                            ReceiveMap: FullScreenPokemon.Cutscenes.prototype.cutsceneDaisyTownMapReceiveMap
                        }
                    },
                    ElderTraining: {
                        firstRoutine: "StartBattle",
                        routines: {
                            StartBattle: FullScreenPokemon.Cutscenes.prototype.cutsceneElderTrainingStartBattle
                        }
                    },
                    RivalRoute22: {
                        firstRoutine: "RivalEmerges",
                        routines: {
                            RivalEmerges: FullScreenPokemon.Cutscenes.prototype.cutsceneRivalRoute22RivalEmerges,
                            RivalTalks: FullScreenPokemon.Cutscenes.prototype.cutsceneRivalRoute22RivalTalks
                        }
                    }
                }
            };
        }
        Settings.GenerateScenesSettings = GenerateScenesSettings;
        /* tslint:disable max-line-length */
        /* tslint:disable object-literal-key-quotes */
        function GenerateSpritesSettings() {
            "use strict";
            return {
                "scale": FullScreenPokemon.FullScreenPokemon.prototype.scale,
                "spriteWidth": "spritewidthpixels",
                "spriteHeight": "spriteheightpixels",
                "flipVert": "flip-vert",
                "flipHoriz": "flipped",
                "paletteDefault": [
                    [0, 0, 0, 0],
                    [255, 255, 255, 255],
                    [0, 0, 0, 255],
                    [199, 199, 192, 255],
                    [128, 128, 128, 255]
                ],
                "filters": {},
                "library": {
                    "Character": {
                        "BirdPokemon": {
                            "normal": {
                                "normal": "p[0,1,2,4]x09,32x012,322x012,2222x011,233332x09,31333313x08,22333322x08,23322332x08,33213233x07,3211221123x06,2x18,2x05,23x18,32000023x18,32x05,23x16,32x08,231132x011,2222x011,230032x05,",
                                "up": "p[0,1,2,4]x09,32x012,322x012,2222x011,232232x09,x38,x08,2x36,2x08,2x36,2x08,33122133x07,2212112122x05,2322111122320000233x16,3320000233x16,332x05,2331111332x07,22111122x010,3223x011,230032x05,",
                                "left": "p[0,1,2,4]x08,3223x08,x26,x09,233332x09,23213332x08,23223332x07,22x36,2x06,213233332200020002231x35,223120002112x36,22120021112x37,200031112x36,2x05,2111223332x07,23113222x010,222x013,23x013,23x09,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x07,22x013,2222x011,233332x09,31333313x05,2002233332200202320233223320232233233211233233223332112211233322333x18,33320233x18,33200022x18,22x06,2x16,2x09,231132x011,2222x012,2002x012,3003x06,",
                                "up": "p[0,1,2,4]x07,22x013,2222x011,232232x09,x38,x05,2002x36,2002023202312213202322332312112132332233322111122333223333x16,333320233x18,332000223x16,322x06,2x16,2x09,231132x011,2222x012,2002x022,",
                                "left": "p[0,1,2,4]x020,22223223x07,23333x25,x05,23213332333200002322332x35,2002233332x36,202132332x38,00223132x36,2000021111333321200002x15,332123x05,2x17,2x08,2311132x011,222x014,23x015,2x023,"
                            }
                        },
                        "Boss": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x09,x28,x07,2211221122x06,2x18,2x05,22x18,2200021212211221212002111121121111200022x18,2200002221333312220002112211112211200211x28,112000x25,33x25,x05,x210,x06,21x26,12x07,22200222x020,",
                                "up": "p[0,1,2]x05,x26,x09,x28,x07,x210,x06,x210,x05,x212,0002121x26,1212002111122221111200022x18,220000222x16,22200021x210,120021x210,12000x212,x05,x210,x06,21x26,12x07,22200222x020,",
                                "left": "p[0,1,2,4]x05,x26,x09,x28,x07,2223x26,x06,22111x25,x06,2x15,2222x06,2x15,2222x06,2122133322x06,2121131132x07,2x16,2x09,211122x011,x26,x010,221122x09,2221122x08,21x27,x07,x27,x021,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x021,x26,x09,x28,x07,2211221122x06,2x18,2x05,22x18,2200021212211221212002111121121111200222x18,2200021221333312320000222211112212x05,x27,1122x06,x26,112x07,21222022x09,222x024,",
                                "up": "p[0,1,2]x021,x26,x09,x28,x07,x210,x06,x210,x05,x212,0002121x26,1212002111122221111200222x18,220002122x16,2220000x211,x06,x28,112x06,x27,112x06,212220022x08,222x024,",
                                "left": "p[0,1,2,4]x021,x26,x09,x28,x07,2223x26,x06,22111x25,x06,2x15,2222x06,2x15,2222x06,2122133322x06,2121131132x07,2x16,2x09,211122x08,2232221122x05,212232211222x05,x211,x06,222000022x019,"
                            }
                        },
                        "BugCatcher": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,233332x35,200002333212333320000232221222232000212x18,21200213112112113120002211211211220000222113311222000211x28,1120021121122112112000222311113222x05,x210,x06,2132222312x07,222002220000",
                                "up": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,2x310,200002x310,200002x310,200022x310,22002122x36,2212000221x26,1220000222x16,22200021x210,1200212x18,212000222311113222x05,x210,x06,2132222312x07,222002220000",
                                "left": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,232x38,200002212x37,2x05,21122233332x05,2121112222x06,2121113112x06,2x17,2x08,2311122x010,x25,12x010,221122x010,221122x09,x27,x09,213322x011,2222x06,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,233332x35,200002333212333320000232221222232000212x18,212002131121121131200222112112112200021221133112220000x210,12x06,211332112x07,222112112x07,21322022x09,222x024,",
                                "up": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,2x310,200002x310,200002x310,200022x310,22002122x36,2212002221x26,1212002122x16,2220000221x27,112000022x16,21120000222311x25,x05,213222x011,222x025,",
                                "left": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,232x38,200002212x37,2x05,21122233332x05,2121112222x06,2121113112x06,2x17,2x08,23111222x09,x27,x07,2221121122x05,213221211232x05,233x25,132x06,222000022x019,"
                            }
                        },
                        "Buzzer": "p[0,1,2,3]002220002212202122212231113202333200022200",
                        "Cashier": {
                            "normal": "p[0,1,2,4]x06,2222x010,x28,x07,x27,122x06,x26,1122x05,22x18,2200021212211221212002112112211211200213211221123120002212211221220000222113311222000211x28,1120021123322332112000222233332222x05,23x26,32x06,2333223332x07,222002220000",
                            "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,112002131122221131200022x18,220000222x16,22200021x210,1200212x38,21200022x38,22x05,2332222332x06,2333223332x07,222002220000",
                            "left": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,2211x28,0000222211x26,x05,21121112222x05,21121112222x05,2221111222x07,23111222x09,x25,32x09,2223232x010,221122x09,232112x09,2333222x010,x25,x06,"
                        },
                        "ChubbyGuy": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x09,2x16,2x07,2x18,2x05,22x18,22000222x18,22200212x18,212002111221122111200022x18,22000211221331221120211211222211211221211112211112120222x18,222000233x16,33200002333322333320000233320023332x05,2222002222000",
                                "up": "p[0,1,2,4]x05,x26,x09,2x16,2x07,2x18,2x05,x212,000x214,0021x210,1200211x28,11200022x18,220002112x16,2112021121x26,12112212x110,2120222x18,2220002x310,200002333322333320000233320023332x05,2222002222000",
                                "left": "p[0,1,2,4]x05,x25,x010,2x15,2x08,2x17,2x06,2x16,2222x05,2x15,x25,x05,2x16,2222x05,21221111212x05,2x17,212x06,23x16,2x08,x27,x08,221211212x06,2111211212x06,2111211212x07,21321122x08,2333222x010,x26,x06,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x05,x26,x09,2x16,2x07,2x18,2x05,22x18,22000222x18,22200212x18,212002111221122111200022x18,2200002122133122120002121122221112000022x15,2112200002331112322320000233332233332x05,2333202222x06,2222x025,",
                                "up": "p[0,1,2,4]x05,x26,x09,2x16,2x07,2x18,2x05,x212,000x214,0021x210,1200211x28,11200022x18,220000212211112222x05,211x25,112000023x16,21120000233x16,222000023333x26,x05,2333200222x07,2222x025,",
                                "left": "p[0,1,2,4]x06,x25,x010,2x15,2x08,2x17,2x06,2x16,2222x05,2x15,x25,x05,2x16,2222x05,21221111212x05,2x17,212x06,23x16,2x08,x28,x07,2112211112000022x15,21122000233311112223320002333x26,3320000222x06,22x018,"
                            }
                        },
                        "CoolTrainerM": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,22211221122200021211121111212002x112,200213112112113120002211211211220000222113311222000211x28,1120021121122112112000x212,x05,23x26,32x06,2333223332x07,222002220000",
                                "up": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,11200213x28,312000221322223122000021223333221200021121222212112002122x16,2212000x212,x05,23x26,32x06,2333223332x07,222002220000",
                                "left": "p[0,1,2,4]x05,x25,x010,x28,x07,x210,x05,x211,x05,22211x27,x05,21111x26,x05,21111211222x05,21211311222x05,2x17,22x07,23111123x08,x26,12x08,21211212x08,22211222x09,221122x010,232232x011,x25,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,11200213x28,3120212213222231220002112233332212000022112222121120000x29,112000023x29,x05,2333222x010,222x025,",
                                "up": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,11200213x28,3120212213222231220002112233332212000022112222121120000x29,112000023x29,x05,2333222x010,222x025,",
                                "left": "p[0,1,2,3,4]x05,x25,x010,x28,x07,x210,x05,x211,x05,22211x27,x05,21111x26,x05,21211211222x05,21211311222x05,2x17,22x07,2411422x09,2222112x08,2221211122x05,244222211242x05,244x25,442x06,22x05,22x019,"
                            },
                            "sitting": "p[0,1,2,4]x05,x25,x010,x28,x07,x210,x05,x212,000022211x27,x05,21111x26,x05,21211211222x05,21111311222x05,2x17,22x07,2311322x09,2222112x09,22221112x07,223222112x06,233233222x08,233222x011,22x010,"
                        },
                        "CuttableTree": "p[0,1,2,3,4]x010,202x011,22424200002020002434142002424200024131422431142022341420024312224243420022242222322422000242224234322x05,202244442x011,2442x012,2132x012,2132x011,213132x09,24313342x09,224422x012,22x07,",
                        "Dad": {
                            "normal": "p[0,1,2,4]x05,x26,x09,x28,x07,2231111322x06,23x16,32x05,22x18,22000212x18,2120021112211221112002111121121111200022x18,220000222113311222000211x28,112002112331133211200022x38,22x05,x210,x06,x210,x07,222002220000",
                            "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x05,x212,0000x212,0002121x26,1212002121122221121200213x18,31200222x18,220000222x16,2220002123x26,321200212x38,212000222x36,222x05,x210,x06,x210,x07,222002220000",
                            "left": "p[0,1,2,4]x05,2222x011,x27,x08,2113x25,x06,211113x25,x05,2x15,x25,x05,2x15,x25,x05,21221121122x05,2121112112x06,2x17,2x08,2311122x010,x25,32x010,221122x010,221122x09,x27,x09,x26,x011,2222x07,"
                        },
                        "Daisy": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,22333322x07,2332222332x06,23x26,32x05,2322333322320000232313131232000022x18,22000021112112111200002211211211220000232113311232000023x28,32000022122332212200002122322322120000x212,x05,x210,x08,x26,x05,",
                                "up": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x06,2x38,2x05,2x310,200002x310,200002x310,200002x310,200002x310,200002x310,200002x310,2000022x38,220000212233332212x05,x210,x07,x28,x09,x26,x05,",
                                "left": "p[0,1,2,4]x06,2222x010,22333322x07,2222x35,2x05,233222x35,20000231322x35,2x05,21112233332x05,21211233332x05,21211123332x05,21111x35,2x06,2311233332x07,222233332x08,22123332x07,222122332x06,x25,1222x08,x27,x010,x25,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x010,22333322x07,2332222332x06,23x26,32x05,2322333322320000232313131232000022x18,220000211121121112000022112112112200023321133112320002331x26,332000232112332212x05,22211223222x06,x29,x08,x27,x021,",
                                "up": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x06,2x38,2x05,2x310,200002x310,200002x310,200002x310,200002x310,20002x310,200002x39,22x05,2x37,212x06,223332212x07,x28,x09,x26,x022,",
                                "left": "p[0,1,2,4]x05,2222x010,22333322x07,2222x35,2x05,233222x35,20000231322x35,2x05,21112233332x05,21211233332x05,21211123332x05,211113233332x05,23112x35,2x06,2222x35,2x07,221233332x06,2112223332x05,x210,x07,x27,x021,"
                            }
                        },
                        "DeskWoman": {
                            "normal": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,2x310,2000023332332333200002332122123320002332x16,2332023311121121113322333112112113332022321133112322000021x26,12x06,2121122212x06,2212222122x07,x28,x08,23322332x09,220022x05,",
                            "up": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,2x310,200002x310,200002x310,20002x312,202x314,22x314,202232x36,232200002123333212x06,21x26,12x06,x210,x07,x28,x08,23322332x09,220022x05,",
                            "left": "p[0,1,2,4]0000x25,x010,2x35,2x08,2x37,2x07,2x38,2x05,232x37,2x05,22112x36,2x05,21212x36,2000021211113333200002x15,233332x05,2311223332x07,x28,x08,222122x011,21222x010,x26,x09,233322x011,x25,x07,"
                        },
                        "Fatty": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,x28,x07,2222311322x06,223x16,2x05,22x18,220002221221122122200213x18,312002x15,33x15,200023x18,320002122x16,2212021123x26,3211221231x36,13212022x310,22000222x36,2220000x212,x05,2222002222000",
                                "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,000x214,0021x210,1200211x28,1120002211222211220002122x16,2212021233322223332122123113333113212022x310,2200022x38,220000x212,x05,2222002222000",
                                "left": "p[0,1,2,4]x05,x26,x09,21132222x07,21111x25,x06,21221x26,00002x15,3x25,000023x16,222200002x17,222200002x17,2222x05,2111132222x05,23x28,x05,2313332112x06,2333321112x06,2333321122x07,23332222x08,x27,x010,x26,x07,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x022,2222x010,x28,x07,2222332222x06,2231111322x05,22x18,220002221221122122200213x18,312002x15,33x15,200223x18,320021122x16,2212021223x26,3211222231x36,21112002222x35,2112000x29,022x05,2222x09,",
                                "up": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,x212,000x214,0021x210,1200211x28,1120002211222211220002122x16,2112021233222233211122121133331121112022x39,222000x25,x35,2x06,x29,0000",
                                "left": "p[0,1,2,4]x022,x26,x09,21132222x07,21111x25,x06,21221x26,00002x15,3x25,000023x16,222200002x17,222200002x17,2222x05,2111132222x05,23x28,x05,231333321120002222x35,2111200x25,333321112000x212,x06,2222002222000"
                            }
                        },
                        "Elder": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x011,211112x09,2x16,2x07,2x18,2x05,22x18,22000213x18,312002111221122111200022x18,22x05,2211331122x05,222211112222000211x28,11200211x28,112000222x36,222x05,x210,x06,x210,x07,x28,0000",
                                "up": "p[0,1,2,4]x06,2222x011,211112x09,2x16,2x07,2x18,2x05,22x18,22000213x18,312002x112,200022x18,22x05,22x16,22x05,x212,00021x210,120021x210,12000222x36,222x05,x210,x06,x210,x07,x28,0000",
                                "left": "p[0,1,2,4]x06,222x011,2211122x08,23x15,32x07,2x17,2x06,2x19,2x05,2x15,22112x05,21221111212x05,2x17,212x05,2x15,22112x06,23x16,2x08,x27,x09,22221122x07,x25,1122x07,2x35,222x07,x29,x08,x27,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x011,211112x09,2x16,2x07,2x18,2x05,22x18,22000213x18,312002111221122111200022x18,22x05,2211331122x05,22221111222200021x29,112002122x36,2112000x212,x05,2313x26,x07,x28,x020,",
                                "up": "p[0,1,2,4]x06,2222x011,211112x09,2x16,2x07,2x18,2x05,22x18,22000213x18,312002x112,200022x18,22x05,22x16,22x05,222211112222000211x29,12002112x36,2212000x212,x05,x26,3132x07,x28,x020,",
                                "left": "p[0,1,2,4]x06,222x011,2211122x08,23x15,32x07,2x17,2x06,2x19,2x05,2x15,22112x05,21221111212x05,2x17,212x05,2x15,22112x06,23x16,2x08,x27,x09,22211222x08,22211222x08,2x35,22x08,x28,x09,x27,0000"
                            },
                            "resting": "p[0,1,2,4]x08,22x011,2221120002200002111222002120002231x26,112002111133x25,1202111123312232202x15,21112232202x18,21232202x18,21232202x15,21112232200211112331223220002111133x25,1200022311x25,1120000211222200212x05,22211200022x08,22x06,"
                        },
                        "Girl": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,22211222x07,x210,x06,x210,x05,x212,00002232122123220000212x16,2120000211121121112x05,2112112112x07,21133112x07,21x26,12x05,211233332112x05,2332222332x07,22333322x08,x28,x09,220022x05,",
                                "up": "p[0,1,2,4]x06,2112x010,22322322x07,2232222322x06,2232222322x05,222322223222000022232222322200002223222232220000222233332222x05,21x26,12x07,2x16,2x06,221x26,1220000211233332112x05,2332222332x07,2x36,2x08,x28,x09,220022x05,",
                                "left": "p[0,1,2,4]x05,22221122x06,x28,3220000x210,322000x210,32200223x28,3220022123x26,3220022111x25,322200021211211x25,000212x15,2222x05,2x15,22x09,x26,x010,221322x011,211232x09,2322332x09,x26,x011,x25,x06,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x010,22211222x07,x210,x06,x210,x05,x212,00002232122123220000212x16,2120000211121121112x05,2112112112x05,2221133112x06,211x26,12x06,22233332112x05,2332222112x07,x28,x09,222x024,",
                                "up": "p[0,1,2,4]x06,2112x010,22322322x07,2232222322x06,2232222322x05,222322223222000022232222322200002223222232220000222233332222x05,21x26,12x07,2x16,2x07,21x26,12x05,212x35,212x06,2332222322x07,x28,x09,22x025,",
                                "left": "p[0,1,2,4]000022221122x06,x28,3220000x210,32200x211,32200223x28,3220022123x26,3222022111x25,322220021211211x26,00212x15,x26,0002x15,22x09,x26,x010,2122332x08,2123333222x07,x29,x06,222200022x021,"
                            }
                        },
                        "Gentleman": {
                            "normal": {
                                "normal": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,00021231133113212002111121121111200022112112112200002221133112220002112231132211200211x28,112000x25,33x25,x05,x210,x06,21x26,12x07,x28,0000",
                                "up": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,000212x38,21200211x38,112000221x36,1220000222x16,22200021x210,120021x210,12000x212,x05,x210,x06,21x26,12x07,222002220000",
                                "left": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,x05,2311x35,2x06,2121133332x06,2121131132x07,23311112x09,213122x011,x26,x010,221122x09,2221122x08,21x27,x07,x27,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,00021231133113212002111121121111200222112112112200021221133112320000222231132212x05,x27,1122x06,x26,112x07,21222022x09,222x024,",
                                "up": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,000212x38,21200211x38,112002221x36,1220002122x16,2220000x211,x06,x28,112x06,x27,112x06,212220022x08,222x024,",
                                "left": "p[0,1,2,4]0000x28,x08,x28,x08,x28,x07,2x38,20000x214,000x212,x05,2311x35,2x06,2121133332x06,2121131132x07,23311112x09,213122x08,2232221122x05,212232211222x05,x211,x06,222000022x019,"
                            }
                        },
                        "GlassesOldGuy": {
                            "normal": "p[0,1,2,4]x05,x26,x09,2x16,2x07,23x16,32x05,22122112212200022221122112222002132112211231200211122112211120002211133111220002222x16,22220211x210,11221122223322221120x214,000x212,0000x212,000021x28,12x05,2222002222000",
                            "up": "p[0,1,2,4]x05,x26,x09,2x16,2x07,2x18,2x05,x212,000x214,0021x210,1200211x28,11200022x18,220002223x16,3222021x212,1221x212,120x214,000x212,0000x212,000021x28,12x05,2222002222000",
                            "left": "p[0,1,2,4]x05,x25,x010,2x15,2x08,2x17,2x06,22211112222x05,211211x25,x05,211x28,x05,222x15,212x05,2x17,212x06,23x16,2x08,x27,x08,23x27,x06,x25,11222x06,x25,11222x07,x28,x08,21x25,x010,x26,x06,"
                        },
                        "Guy": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,221x26,12200021211211211212002x112,2002131121121131200022x18,220000222113311222000211x28,1120021123322332112000222233332222x05,23x26,32x06,2333223332x07,222002220000",
                                "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,112002131x26,131200022111221112200002122111122120002113322223311200212x38,212000222x36,222x05,2322332232x06,2333223332x07,222002220000",
                                "left": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x05,x211,x05,x212,x05,21211x26,x05,21111211222x05,212x15,222x05,2x17,22x07,2x15,23x08,x26,32x08,22311232x08,22311232x09,221122x010,232232x011,x25,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,221x26,12200021211211211212002x112,2002131121121131202122x18,2200021121133112120000223x26,11120000223122132112000023222232222x05,2333222x010,222x025,",
                                "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,00021x210,1200211x28,112002131x26,1312021221112211122000211221111221200002233222231112000022x36,2112000023223332222x05,2333222x010,222x025,",
                                "left": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x05,x211,x05,x212,x05,21211x26,x05,21111211222x05,212x15,222x05,2x17,22x07,2111122x09,2222112x08,2223211122x05,233233211232x05,233x25,332x06,22x05,22x019,"
                            }
                        },
                        "GymGuide": {
                            "normal": "p[0,1,2,4]x05,x26,x09,x28,x07,2221221222x06,22x16,22x05,211221122112000022211221122200021212211221212002x112,2000231113311132x05,22x16,22x05,2112311321120000211x26,112x05,2232132322x06,x210,x07,x28,x08,222002220000",
                            "up": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,x210,x05,x212,0000x212,000213x28,312002113232323211200022x18,22x05,2231111322x05,x212,0000x212,x05,2323333232x06,x210,x06,x210,x07,222002220000",
                            "left": "p[0,1,2,4]0000x26,x09,x28,x07,x210,x06,21x28,x06,21113x26,x05,22211132222x05,211x28,x05,2221112122x06,2x17,2x08,2311122x010,x26,x010,222112x010,323112x010,x26,x010,x26,x011,2222x07,"
                        },
                        "Lady": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x09,2x36,2x07,2x38,2x06,2332332332x05,2332122123320000232x16,2320000221121121122000022112112112200002321133112320000223x26,32200022121222212122002112x16,211200022x18,22x05,2x18,2x07,2x16,2x09,x26,x05,",
                                "up": "p[0,1,2,4]x05,x26,x09,2x36,2x07,2x38,2x06,2x38,2x05,2x310,200002x310,200002x310,200002x310,200002x310,2000022x38,2200022122333322122002112122221211200022x18,22x05,2x18,2x07,2x16,2x09,x26,x05,",
                                "left": "p[0,1,2,4]x06,2222x010,22333322x07,2x38,2x05,232x38,200002212x37,2x05,21122x35,2x05,21211233332x05,21211233332x05,21111233332x06,2312233332x07,x25,3332x07,212112332x07,21211232x07,21112222x08,2x16,2x09,x26,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,x26,x09,2x36,2x07,2x38,2x06,2332332332x05,2332122123320000232x16,232000232112112112200023211211211220023322113311232002321x27,332000221212221222x06,2x15,2112x06,2x15,2112x07,2x15,22x09,x25,x021,",
                                "up": "p[0,1,2,4]x05,x26,x09,2x36,2x07,2x38,2x06,2x38,2x05,2x310,200002x310,200002x310,20002x311,20002x310,200002x39,22x05,222x35,22200002111x25,11200002x17,2112x05,2x17,22x07,x27,x022,",
                                "left": "p[0,1,2,4]x05,2222x010,22333322x07,2x38,2x05,232x38,200002212x37,2x05,21122x36,20000212112x36,20002121112x35,20002111132x35,20000231222233332x05,x210,x07,2121122x08,211211212x07,211122112x08,x27,x020,"
                            }
                        },
                        "LandPokemon": {
                            "normal": {
                                "normal": "p[0,1,2,3]x023,22x08,x26,11x26,002112321123211200021x38,12x05,2323333232x05,23322112233200222x310,222233222311322233223332122221233320232321111232320002233222233220000223x16,32200002322111122320000213122221312x05,2221111222000",
                                "up": "p[0,1,2,4]x07,22x08,x26,11x26,002112321123211200021x38,12x05,2333113332x05,2x310,20000233331133332x05,2223333222x05,232322223232000232x38,23202332333223332332022233233233222000022x36,22x05,2322333322320000233322223332x05,2220000222000",
                                "left": "p[0,1,2,4]000022x013,211222x010,2113332222x06,2x35,2111200002x36,1111200022333233311200021332223333200002x39,2x06,22212333322x06,21211332332x06,x26,333322x07,2112333232x06,2113232332x07,22332112x07,21333222x09,2222x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x07,22x08,x26,11x26,002112321123211200021x38,12x05,2323333232x05,23322112233200222x310,222233222311322233223332122221233320232321111232320002233222233220000223x16,32x05,23221111222x05,2131x26,x07,222x026,",
                                "up": "p[0,1,2,4]x07,22x08,x26,11x26,002112321123211200021x38,12x05,2333113332x05,2x310,200222333311333322223322233332223322333232222323332023233322333232000223323323322000022x38,2x05,23223333222x05,2333x26,x07,222x026,",
                                "left": "p[0,1,2,4]000022x013,211222x010,2113332222x06,2x35,2111200002x36,1111200022333233312200021332223332320002x38,2332000022212333233320000212113233322x05,x25,1x35,2000022211133323320021332133323232000233x25,1322x05,222000022000"
                            }
                        },
                        "Lass": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,222x012,222322x09,23332332x07,2113323312x05,23312332133200002332122123320000232x16,232x05,2112112112x06,2112112112x06,2211331122x05,211x26,1120000211211112112x05,2232332322x07,2x16,2x08,x28,x09,220022x05,",
                                "up": "p[0,1,2,4]x07,22x012,223322x09,22311322x07,2321331232x05,233233332332000023323333233200002332333323320000233323323332x05,2333223332x06,22x36,22x05,21x28,120000212211112212x05,2232332322x07,2x16,2x08,x28,x09,220022x05,",
                                "left": "p[0,1,2,4]x05,2222022x07,2233332112x05,2112333321120002313323333212000222333233323200002123323332320000212232333232000021212223323200002x15,223232x05,2311112202x07,232232x010,221122x010,2211212x09,2122312x09,x26,x09,x26,x07,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x07,222x011,222322x09,23332332x07,2113323312x05,23312332133200002332122123320000232x16,232x05,2112112112x06,2112112112x05,22211331122x05,21x28,3x06,2232332112x07,221112112x07,x25,322x09,22x025,",
                                "up": "p[0,1,2,4]x06,222x012,233322x09,23113232x07,2213312332x05,23233332333200002233332333320000223332x35,2000023332x36,2x05,222x36,2x05,212x36,2x06,21x29,x06,22113322112x06,2221112112x06,x26,322x08,22x025,",
                                "left": "p[0,1,2,4]000022220222x06,2233332311200002112333323112002313323333231200222333233322332002123323332233200212232333202320021212223320232002x15,22320232000231111220002x05,223223x010,212112x08,2221211222x06,2222322322x07,x28,x022,"
                            }
                        },
                        "LittleGirl": {
                            "normal": {
                                "normal": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,222212212222000022x18,2200002111211211120000221121121122000200211331120020300212322321200320211232232112020002x38,2x07,21122112x09,220022x021,",
                                "up": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,x212,0000x212,000021x27,11200002211222211220002002x16,200203002123223212003202112322321120200022x36,22x07,21122112x09,220022x021,",
                                "left": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x05,x211,x05,2221x28,x05,21111x26,x05,21211211222x05,212x15,22x07,2x15,222x08,x25,002x08,231132003x08,21133202x07,212212x011,2222x022,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,222212212222000022x18,2200002111211211120000221121121122000200211331120020300213322331200320002333321120020000211x25,x09,22x041,",
                                "up": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,x212,0000x212,000021x28,1200002211222211220002212x16,20020300213222231200320002x35,2112020000211x26,x08,22x041,",
                                "left": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x05,x211,x05,2221x28,x05,21111x26,x05,21211211222x05,212x15,22x07,2x15,222x07,x26,002x06,21231131203x06,2121121202x07,202202x037,"
                            }
                        },
                        "Mother": {
                            "normal": "p[0,1,2,3]x06,2222x010,x28,x07,x210,x06,x26,3222x05,x26,31222200002223111132220000223x16,3220002211121121112200222112112112220022221133112222002221x26,12220002112333321120000212x16,2120000223311113322x06,23111132x09,x26,x05,",
                            "up": "p[0,1,2,4]x06,2222x010,x28,x07,2222112222x06,x211,0000x212,0000x212,0000x212,000x214,00x214,00x214,000x212,0000212313313212x05,2333113332x06,2331331332x07,2x36,2x09,x26,x05,",
                            "left": "p[0,1,2,4]x05,2222x010,x28,x07,x27,112x06,x211,00002231x28,000022113x27,0000221211x27,000021211x27,00002111x28,x05,231x27,x07,x29,x07,22122112x08,211213132x07,222x35,2x07,21133322x09,x25,x06,"
                        },
                        "Nurse": {
                            "normal": /*"p[0,1,2,3]x05,x26,x09,23332332x07,2133232312x05,23312312133200002332111123320000232x16,2320002331121121133200232112112112320023321133112332002333x26,33320023321222212332000233212212332x05,2322112232x07,x28,x08,x28,x010,2222x06,",
                            "YellowVersion":*/ {
                                "normal": {
                                    "normal": "p[0,1,2,4]x05,322223x09,21122112x08,21222212x07,x210,x06,233233233200003233x16,3323032221121121122232202112112112022322221133112222303x212,300002321221232x05,212x16,212x05,2x18,2x07,22111122x010,2222x011,322223x05,",
                                    "up": "p[0,1,2,4]x05,322223x09,2x16,2x08,2x16,2x07,2221111222x06,23x26,32000032x310,230322x310,223220x310,022322231333313222303232211112232300002332222332x05,212321123212x05,2321221232x07,22233222x010,2222x011,322223x05,",
                                    "left": "p[0,1,2,4]000x26,x010,2x15,2x09,2x15,2x08,23x26,x07,2x38,2x06,2323323332x07,21211223222x05,21211122002200002x15,220022x05,211121x25,0000x27,02220000211222112x08,222211112x09,2111122x010,2222x011,3222x08,"
                                },
                                "bowing": "p[0,1,2,4]x05,322223x09,32322323x08,21222212x07,2211221122x06,23x26,32000032333233233323032223x16,322232202122112212022322221133112222303x212,300002321221232x06,2122112212x07,22111122x010,2222x011,322223x021,"
                            }
                        },
                        "Oak": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x07,222x16,2x07,2122122212x06,2211211122x05,22x18,22000212131111312120021111233211112002131121121131200022x18,2200022121133112122021121x26,121122112112222112112022211233211222000211122221112x05,x210,x05,x25,00x25,00",
                                "up": "p[0,1,2,4]x05,x26,x09,2x16,222x05,2x18,2x06,2x18,2x05,22x18,22000212x18,212002112x16,211200213121111213120002211322311220002222x16,2222021221322223122122122x18,2212022x110,22000211132231112x05,x210,x05,x25,00x25,00",
                                "left": "p[0,1,2,4]x06,x25,x08,222x15,2x06,2x19,2x06,21222211112x05,22111121112x06,2113112222x06,2321112112x06,2121113112x06,2x17,2x08,2311122x010,x25,12x09,2221122x09,23211212x08,22122112x08,x28,x07,x26,x05,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x05,x26,x07,222x16,2x07,2122122212x06,2211211122x05,22x18,22000212131111312120021111233211112002131121121131200022x18,2200022121133112312002121x28,120002111233221120000211x26,112x05,x27,022x08,2222x023,",
                                "up": "p[0,1,2,4]0000x26,x09,2x16,222x05,2x18,2x06,2x18,2x05,22x18,22000212x18,212002112x16,211200213121111213120002211322311220002122x16,2222002221322223121120022x18,21120002x18,2220000222231322x08,x26,x023,",
                                "left": "p[0,1,2,4]x05,x25,x08,222x15,2x06,2x19,2x06,21222211112x05,22111121112x06,2113112222x06,2321112112x06,2121113112x06,2x17,2x08,23111222x09,x26,12x08,2222112120000222233211212x05,x211,x06,222000222x019,"
                            }
                        },
                        "OldMan": {
                            "normal": "p[0,1,2,4]x06,2222x010,22111122x07,2113333112x06,2x18,2x05,231x36,13200021312211221312002112112211211200213211221123120002212211221220000222112211222000232222112222320023x210,32000x212,x05,2x38,2x05,2223322332220000x25,00x25,00",
                            "up": "p[0,1,2,4]x06,2222x010,22111122x07,2113333112x06,2x18,2x05,23x18,32000212x18,21200212x18,212002x112,200022x18,220002322x16,223200232322112232320023311222211332000221122221122x05,2223333222x05,2223322332220000x25,00x25,00",
                            "left": "p[0,1,2,4]x06,2222x010,22331122x07,2111131112x06,2333x15,2x05,211113x15,20000222x18,2000021123312211200002112113112120000222x16,212x05,2111132212x06,2211323222x07,2222333112x07,222233112x06,x210,x06,222x35,2x08,x27,0000"
                        },
                        "Player": {
                            "normal": {
                                "normal": "p[0,1,2,4]x05,x26,x09,2x36,2x07,2x38,2x06,2x38,2x05,2223111132220000221x26,122000212x18,21200211112112111120002211211211220000222113311222000211x28,11200211x28,112000222332233222x05,2322332232x06,2333223332x07,222002220000",
                                "up": "p[0,1,2,3,4]x05,x26,x09,2x46,2x07,2x48,2x06,2x48,2x05,22x48,220000222x46,22200021x210,1200211x28,1120002211222211220000222244442222000212242222422120021224411442212000222244442222x05,24x26,32x06,2444224442x07,222002220000",
                                "left": "p[0,1,2,4]x05,x26,x09,2x36,2x07,2x38,2x05,221x37,2000021111x35,222000022333x27,x05,21211x26,x05,2121121122x06,2x17,2x08,231112232x08,x25,332x09,2211232x09,2211232x08,2332222x09,233332x011,2222x06,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x021,x26,x09,2x36,2x07,2x38,2x06,2x38,2x05,2223111132220000x212,000212x18,212002111121121111200222112112112200021221133112320000x210,12x05,22322221122x06,222332112x07,23322022x09,222x08,",
                                "up": "p[0,1,2,4]x021,x26,x09,2x36,2x07,2x38,2x06,2x38,2x05,22x38,220000222x36,22200021x210,1200211x28,1120022211222211220002122233332222000022232222321120000223311332112x05,2233332222x06,232222x011,222x08,",
                                "left": "p[0,1,2,4]x021,x26,x09,2x36,2x07,2x38,2x05,221x37,2000021111x35,222000022333x27,x05,21211x26,x05,2121121122x06,2x17,2x08,231112232x08,x26,32x06,x26,1122x05,233233211232x05,233x25,332x06,222000022000"
                            },
                            "surfing": {
                                "normal": {
                                    "normal": "p[0,1,2,3]x070,3223x011,211112x09,2x16,2x07,2112112112x06,3112112113x05,3x110,30000213312213312x05,3x18,3x07,33111133x010,3333x038,",
                                    "up": "p[0,1,2,4]x022,3223x011,211112x07,132x16,231000102x18,20100103x18,3010023x110,3202x114,2322313222231322300110211112011x05,11321123110000100010330100010001x010,1x05,11x06,11x035,",
                                    "left": "p[0,1,2,4]x036,3223x011,211112x09,2x16,2x07,212x16,2000230212x17,202122x111,231231313113x17,203113113111122121032311332230023010003300x16,0000x16,x055,"
                                },
                                "walking": {
                                    "normal": "p[0,1,2,4]x036,1x06,1x07,1x08,1x06,1003223001000010002111120001x05,2x16,2x05,1021121121120100003112112113x05,3x110,30000213312213312000013x18,31x05,1331111331x08,133331x037,",
                                    "up": "p[0,1,2,4]x022,3223x011,211112x07,102x16,201000102x18,20100003x18,3x05,3x110,300002x110,200002x110,200003x110,3010000x18,00010010032222300101010002111120001001000321123000100001x08,1x019,",
                                    "left": "p[0,1,2,4]x052,3223x011,211112x09,2x16,2x07,212x16,2002300212x17,221202x111,3120312x111,200100131113011x05,11003111000110000x110,001x048,"
                                }
                            },
                            "cycling": {
                                "normal": {
                                    "normal": "p[0,1,2,4]0000x28,x07,2x38,2x06,2x38,2x05,2223111132220000221x26,122000212x18,21200211112112111120002211211211220000222113311222000211x28,11200211x28,112000x25,33x25,x05,2332332332x07,22233222x010,2332x013,22x07,",
                                    "up": "p[0,1,2,4]0000x28,x07,2x38,2x06,2x38,2x05,222x36,2220000x212,00021x210,1200211x28,11200022112222112200002122111122120000222322223222x05,22x36,22x05,2322333322320000233x26,332x05,2222332222x09,2332x013,22x07,",
                                    "left": "p[0,1,2,4]0000x28,x07,2x38,2x06,21x37,2x05,2122x35,22200002211x28,x05,21211x26,x05,2121121122x06,2x17,2x06,21231112232x05,21x26,332200002211x28,00023211222233320023x27,3222320232222332322232002333x25,33320000222x05,222000"
                                },
                                "walking": {
                                    "normal": "p[0,1,2,4]0000x28,x07,2x38,2x06,2x38,2x05,2223111132220000221x26,122000212x18,21200211112112111120002211211211220000222113311222000211x28,11200211x28,112000x25,3323322x05,222233222x07,2332332x010,222332x013,22x07,",
                                    "up": "p[0,1,2,4]0000x28,x07,2x38,2x06,2x38,2x05,222x36,2220000x212,00021x210,1200211x28,11200022112222112200002122111122120000222322223222x05,22x36,232x05,22233332332000023x29,x05,233223322x08,2202332x013,22x07,",
                                    "left": "p[0,1,2,4]0000x28,x07,2x38,2x06,21x37,2x05,2122x35,22200002211x28,x05,21211x26,x05,2121121122x06,2x17,2x06,21231112232x05,21x26,332200002211x28,00023211222233320023x27,3222320232223x27,32002333223323332000022200x26,000"
                                }
                            },
                            // Fix the coloring of the sprite.
                            "fishing": {
                                "normal": "p[0,1,2,3]0000x26,x07,2x36,2x05,2x38,200002x38,200022231111322200221x26,1220212x18,21221111211211112022112112112200222113311222023x210,322333x26,333202221122112220002211221122000023x26,32x05,x28,x09,22x012,22x012,22x012,22x06,",
                                "up": "p[0,1,2,3]x06,22x012,22x010,x26,x07,2x36,2x05,2x38,200002x38,200022x38,2200222x36,222021x210,12211x28,11202211222211220022223333222200022322223220000223311332200002223333222000023x26,3200002333223332x05,22200222000",
                                "left": "p[0,1,2,3]x05,x26,x07,2x36,2x05,2x38,2000221x37,20021111x35,2220022333x27,00021211x26,000212112112202202x17,200x25,31112232000x28,33200021122211232000211222112320000222332222x07,233332x09,22220000"
                            }
                        },
                        "Pokeball": "p[0,1,2,3]x038,2222x010,22333322x07,2333113332x06,2333113332x05,2x310,200002x310,20000211x36,11200002x110,2x05,2x18,2x06,2x18,2x07,22111122x010,2222x038,",
                        "Rival": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x07,x25,333322x05,2x310,2x05,23332332333200002232332233320002122232112221200212x18,21200213112112113120002211211211220000222113311222000211x28,1120021121222212112000222112211222x05,2321111232x06,2333223332x07,222002220000",
                                "up": "p[0,1,2,4]x06,2222x010,223333x25,00002x310,20002x310,200002x39,2200021232x35,2212002122x36,221200213x28,3120022212111121220000222122221222000212211331122120021222111122212000222122221222x05,2321111232x06,2333223332x07,222002220000",
                                "left": "p[0,1,2,4]x06,2222x07,x25,333322x05,2x310,2x05,23332x36,200002232x37,2x05,x26,33332x05,2121113222x06,2121112112x06,2x17,2x08,231112212x08,x25,112x09,2211212x09,2211212x08,2332222x09,233332x011,2222x06,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x07,x25,333322x05,2x310,2x05,23332332333200002232332233320002122232112221200212x18,212002131121121131200222112112112200021221133112320000x210,12x06,211222112x07,222112112x07,23322022x09,222x024,",
                                "up": "p[0,1,2,4]x06,2222x010,223333x25,00002x310,20002x310,200002x39,2200021232x35,2212002122x36,221200213223333223120022211222211220002122211112222000022212222121120000221133112112x05,2211112222x06,232222x011,222x024,",
                                "left": "p[0,1,2,4]x06,2222x07,x25,333322x05,2x310,2x05,23332x36,200002232x37,2x05,x26,33332x05,2121113222x06,2121112112x06,2x17,2x08,231112212x08,x26,12x06,x26,1122x05,233233211232x05,233x25,332x06,222000022x019,"
                            }
                        },
                        "Scientist": {
                            "normal": {
                                "normal": "p[0,1,2,4]x06,2222x010,x28,x07,2222112222x06,22x16,22x05,22x18,220002121221122121200211211221121120021321122112312000221221122122000022211331122200021123222232112002112112211211200022x18,22x05,2x18,2x06,x210,x07,222002220000",
                                "up": "p[0,1,2,4]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,00021x210,120021x210,120021x210,12000221x26,1220000222x16,2220002122322223221200212x18,21200022x18,22x05,2111221112x06,x210,x07,222002220000",
                                "left": "p[0,1,2,4]0000x26,x09,x28,x07,x210,x06,211x27,x06,2111x27,x05,22111x26,x05,21x29,x05,2121121122x06,22x16,2x08,2311122x010,x25,12x09,2121122x09,2121122x09,2112212x09,x27,x010,2222x07,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x06,2222x010,x28,x07,2222112222x06,22x16,22x05,22x18,22000212122112212120021121122112112002132112211231200222122112212200021221133112220000x210,12x05,22122221122x06,221112112x07,x25,022x09,222x024,",
                                "up": "p[0,1,2]x06,2222x010,x28,x07,x210,x06,x210,x05,x212,00021x210,120021x210,120021221222212212002221112211122000212221111222200002221222212112000022x16,2112x05,2211112222x06,x26,x011,222x024,",
                                "left": "p[0,1,2,4]x05,x26,x09,x28,x07,x210,x06,211x27,x06,2111x27,x05,22111x26,x05,21x29,x05,2121121122x06,22x16,2x08,231112212x08,x26,12x06,2221121122x05,222111211222x05,x211,x06,222000022x019,"
                            }
                        },
                        "StrengthBoulder": "p[0,1,2,3]x05,x26,x07,222x16,22200022x110,22002x112,2002x112,202x110,311122x114,22x16,3x16,3223x111,332213x19,3132231313131113333202313131313132200233331x35,232000233232323232x05,2232323222x08,x26,x05,",
                        "Toddler": {
                            "normal": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,222212212222000022x18,220000211121121112x05,2112112112x07,21133112x07,2132222312x05,211x36,112x05,22x36,22x07,21122112x09,220022x021,",
                            "up": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x06,x210,x05,x212,0000x212,000021x28,12x05,2112222112x07,2x16,2x07,2132222312x05,211x36,112x05,22x36,22x07,21122112x09,220022x021,",
                            "left": "p[0,1,2,4]x022,2222x010,x28,x07,x210,x05,x211,x05,2221x28,x05,21111x26,x05,21211211222x05,212x15,22x07,2x15,22x09,x25,x011,231132x011,21132x010,212212x011,2222x022,"
                        },
                        "WaterPokemon": {
                            "normal": {
                                "normal": "p[0,1,2,3]x070,3223x011,211112x09,2x16,2x07,2112112112x06,3112112113x05,3x110,30000213312213312x05,3x18,3x07,33111133x010,3333x038,",
                                "up": "p[0,1,2,4]x022,3223x011,211112x07,132x16,231000102x18,20100103x18,3010023x110,3202x114,2322313222231322300110211112011x05,11321123110000100010330100010001x010,1x05,11x06,11x035,",
                                "left": "p[0,1,2,4]x036,3223x011,211112x09,2x16,2x07,212x16,2000230212x17,202122x111,231231313113x17,203113113111122121032311332230023010003300x16,0000x16,x055,"
                            },
                            "walking": {
                                "normal": "p[0,1,2,4]x036,1x06,1x07,1x08,1x06,1003223001000010002111120001x05,2x16,2x05,1021121121120100003112112113x05,3x110,30000213312213312000013x18,31x05,1331111331x08,133331x037,",
                                "up": "p[0,1,2,4]x022,3223x011,211112x07,102x16,201000102x18,20100003x18,3x05,3x110,300002x110,200002x110,200003x110,3010000x18,00010010032222300101010002111120001001000321123000100001x08,1x019,",
                                "left": "p[0,1,2,4]x052,3223x011,211112x09,2x16,2x07,212x16,2002300212x17,221202x111,3120312x111,200100131113011x05,11003111000110000x110,001x048,"
                            }
                        }
                    },
                    "Solid": {
                        "AsianScroll": "p[0,1,2,3,4]0x214,00244x38,4420022x110,2200021414414141200002x16,414120000214414141112000021414414441200002x16,4111200002144441441120000211411114412000021414441141200022x110,22002x412,200x214,x033,",
                        "BedSingle": "p[1,2,3,4]x117,0x212,0110x212,0x118,x314,11333x18,333x15,2x06,2x16,23x28,321112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2112x012,2x118,0x212,0110x212,0x118,x314,11x314,11x314,x117,",
                        "Book": "p[0,1,2,3]00x25,000x25,00231111222111132223133313133313222311113313331322231313131333132223x15,3x15,32223x15,31313132223133313x15,32223x15,3x15,3222x313,x217,",
                        "Bookshelf": "p[0,1,2,3,4]0x214,02x114,221x312,4221x312,4221x312,4221x312,4221x312,4221x312,422x414,224x212,42242323232332324224232121233232422421212121121242242123232112124224222323x26,4224x212,4224x312,4224x212,422423323233233242242332121121124224211212112112422422223x27,4224x212,4224x312,4224x212,4224x35,22x35,4224x35,22x35,4224x35,22x35,4224x35,22x35,4x218,4x312,420x214,0",
                        "BuildingTopLeft": ["multiple", "vertical", {
                                "top": "p[0,1,2,3]0000222200022111000221110002211100022333000221110002211100022111",
                                "middle": "p[0,1,2]0002211100022111000221110002211100022111000221110002211100022111",
                                "bottom": "p[0,1,2,3]0002233300022111000221110002211100022333000x25,00023333000x25,"
                            }],
                        "BuildingTopMiddle": ["multiple", "vertical", {
                                "top": "p[1,2,3,4]x18,x08,x216,x38,220320222032220203x25,0",
                                "middle": "p[1,3,4]0x16,01011110211011021111002x15,00x15,0210111021110102x15,0",
                                "bottom": "p[2,3,4]x28,x132,x08,x28,x08,"
                            }],
                        "BuildingTopRight": ["multiple", "vertical", {
                                "top": "p[0,1,2,3]2222000011122000111220001112200033322000111220001112200011122000",
                                "middle": "p[0,1,2]1112200011122000111220001112200011122000111220001112200011122000",
                                "bottom": "p[0,1,2,3]3332200011122000111220001112200033322000x25,00033332000x25,000"
                            }],
                        "BuildingMiddleLeft": "p[0,1,2,3]0333321103333211033332110333321103333211033332110333321103333211",
                        "BuildingMiddleMiddle": "p[1,3,4]x08,x16,20x16,2x09,1120x16,201111x09,x15,20",
                        "BuildingMiddleRight": "p[0,1,2,3]1123333011233330112333301123333011233330112333301123333011233330",
                        "BuildingMiddleWindow": "p[1,2,3,4]x28,3x16,310000201100020311002032110203231120323313x16,3",
                        "BuildingBottom": ["multiple", "horizontal", {
                                "left": "p[0,1,2,3,4]0333323303333211033332110333323303333234033332340x35,220x37,",
                                "middle": "p[1,2,3,4]x216,x08,x28,x316,x18,x28,",
                                "right": "p[0,1,2,3,4]33233330112333301123333033233330432333304323333022x35,0x37,0"
                            }],
                        "BuildingBottomLeft": ["multiple", "horizontal", {
                                "left": "p[0,1,2,3,4]0333323303333211033332110333323303333234033332340x35,220x37,",
                                "middle": "p[1,2,3,4]x216,x08,x28,x316,x18,x28,"
                            }],
                        "BuildingBottomMiddle": "p[1,2,3,4]x216,x08,x28,x316,x18,x28,",
                        "BuildingBottomRight": ["multiple", "horizontal", {
                                "middle": "p[1,2,3,4]x216,x08,x28,x316,x18,x28,",
                                "right": "p[0,1,2,3,4]33233330112333301123333033233330432333304323333022x35,0x37,0"
                            }],
                        "Cabinet": "p[0,1,2,3,4]0x214,02x114,221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4223x112,3223x212,3223233233233332322324424423333232232112112133123223x28,11223223x212,3223x112,3223x112,3223x212,3223233233233332322324424423333232232112112133123223x28,11223223x212,3223x112,3223x212,3223x45,22x45,3223x45,22x45,3223x45,22x45,3223x45,22x45,3x218,3x112,320x214,0",
                        "Computer": "p[0,1,2,3,4]000x210,x05,2x110,200002x110,200002x110,200002x310,2000023x28,32002223214x25,32222123x28,32322123x28,32422123x28,3242212x310,242212x45,22224242212x310,242212x410,232211x210,3322x114,2244x210,44222214141414112222123x48,12422121414111141242212x310,24224x212,422x414,23x214,3",
                        "ComputerDesk": "p[0,1,2,3,4]000x210,x05,2x110,200002x110,200002x110,200002x310,2000023x28,32002223214x25,32222123x28,32322123x28,32422123x28,3242212x310,242212x45,22224242212x310,242212x410,232211x210,3322x114,2244x210,44222214141414112222123x48,12422121414111141242212x310,24224x212,422x414,23x214,324x212,4224x35,22x35,4224x35,22x35,4224x35,22x35,4224x35,22x35,4x218,4x312,420x214,0",
                        "ConsoleAndController": "p[0,1,2,3,4]x018,x27,3x07,24x15,423x06,2434443423x06,24x25,423x06,2x17,23x06,2143334123x06,2x17,23x06,2x47,230220000x27,33211200002x36,2141420002000222x15,20000222021441223x08,2144233x010,2112x013,220000",
                        "CaveOpening": "p[1,2,3,4]1232323112323231010331300103313020322x16,22303323x110,232032x110,23332x112,3333x128,2112x112,310x113,3020x112,0332x112,3203x112,33321113131313113333213131313132111122131313131221",
                        "Door": {
                            "normal": "p[1,2,3,4]323x210,32332x112,23321x310,12332133x16,33123301310000201310330131000202131033013100202213103301310202221310330133x16,31103301x38,1010330132x06,2110330130x27,310330130x27,3103301x310,10330x112,0311x212,11",
                            "indoor": "p[1,2,3,4]x117,x314,113x112,31131x010,131131x010,131131x010,131131x210,13113x112,311x314,113x212,31132x310,231132x310,231132x310,23113x212,311x314,x117,"
                        },
                        "FenceWide": "p[0,1,2,3,4]x022,x25,x09,224333422x06,243x15,342000024x19,4200023x19,320002433x15,33420002434x35,434200324344111443420332334411144332034233331113333203424333111333420342434411144342004423441114432400344224111422400003444x25,44x06,333x45,x05,",
                        "FenceVertical": "p[0,1,2,3,4]x026,2222000x26,00x26,0023224200233442002334420023344200233442002134320021133200231342004234240004224x010,",
                        "FloorDiamondsDark": "p[3,4]10001x05,10001001000100010001000010001010001x06,100010001x08,1x05,1x010,10001x06,110000101000011101x05,1x05,10001x011,10001x05,1x05,1001100001010000111x05,10001x010,1x05,1x08,100010001x06,100010100010000100010001000100",
                        "Grass": "p[0,1,3,4]x06,32x06,32x05,313x05,3133300322333003223313032323130323231233330312333301312332003123320223233002232330002233200022332x08,32x06,32x05,313x05,313330032233300322331303232313032323123333031233330131233200312332022323300223233000223320002233200",
                        "GymStatue": "p[0,1,2,3,4]x07,22x09,22022112202200023324211242432000234442244432x05,2424444242x05,24412442144200022x410,220211222413422211221342122221241320242424444242420002244222244220000224x16,4220002422x16,22420232422111122423223244422224442322321412222141232233x210,33223333x26,3333224x312,42214x310,442211x412,2211x310,4422413x28,3442214324343342344221142x46,24442211324333342344221132x46,234422113x28,3442211x310,442021x310,420002x310,2x05,x210,000",
                        "GymLabel": "p[1,2,3,4]3x223,3x27,x041,111101001010001x016,1100001001011011x08,x28,11011011110x15,x28,x08,1100100110010101x017,111100110010101x040,",
                        "HealingMachine": {
                            "normal": "p[0,1,2,3,4]x043,x210,x021,2x110,2x020,2x110,2x020,2x310,2x020,23x28,32x018,22232x46,23222x016,21232x46,23232x016,21232x46,23242x016,2123x28,3242x016,212x310,242x016,2123223x25,3242x016,2124444233324232x016,211x210,332x016,2x114,2x016,2222442222442222x08,333433332x114,234x06,3334333221x212,1224x06,3332222321x212,12122220003321414121x212,12141142003241434121x212,12141142003214222321x212,12144442003213244221x212,12141412003322444421x212,12144442003334333321x212,12141412003334333221x212,12144412003332222321x212,12141412003321414121x212,12144442003241434121x212,1224141200321422232x114,24x25,00321324422x314,2x45,20033224444x222,00",
                            "lit": "p[0,1,2,3,4]x043,x210,x021,2x110,2x020,2x110,2x020,2x310,2x020,23x28,32x018,22232x16,23222x016,212321x35,23232x016,2123213111123242x016,2123x28,3242x016,212x310,242x016,2123223x25,3242x016,2124444233324232x016,211x210,332x016,2x114,2x016,2222442222442222x08,333433332x114,234x06,3334333221x212,1224x06,3332222321x212,12122220003321414121x212,12141142003241434121x212,12141142003214222321x212,12144442003213244221x212,12141412003322444421x212,12144442003334333321x212,12141412003334333221x212,12144412003332222321x212,12141412003321414121x212,12144442003241434121x212,1224141200321422232x114,24x25,00321324422x314,2x45,20033224444x222,00"
                        },
                        "HealingMachineBall": {
                            "normal": "p[0,1,2,4]102200123320233332213312021120002200",
                            "lit": "p[0,1,2,4]102200121120211112231132023320002200"
                        },
                        "HouseTop": ["multiple", "horizontal", {
                                "left": "p[0,1,2,3,4]x015,x217,x013,224x116,x011,22144x316,x09,2244144x316,x07,2241441x418,x05,22144144144x316,0002244144144144x316,0224144144144144x316,21441441441441x418,2144144144144144x316,2144144144144144x316,2144144144144144x316,2144144144144144x316,214414414414414x218,14414414414422x417,214414414412244x218,14414414224422x39,4x37,21441442244223334x26,4x18,21441224422x35,21111312x18,214224422x37,21113142x18,2224422x36,11121131432x38,24422x36,x15,21314342x18,022223333x17,23143442x18,0000233x19,4x26,4x18,033332x326,03333211x324,033332x126,033332x326,0333323x425,0333323x425,0x35,x226,0x331,",
                                "middle": "p[1,2,3,4]x132,x032,x264,x332,x296,x332,x2128,x132,x332,x132,x08,x216,x016,3x16,33x16,3x016,1000020110000201x016,1000203110002031x016,1002032110020321x016,1020323110203231x016,1203233112032331x016,3x16,33x16,3x08,x264,x032,x232,x364,x132,x232,",
                                "right": "p[0,1,2,3,4]x217,x015,x116,422x013,x316,44122x011,x316,4414422x09,x418,1441422x07,x316,44144144122x05,x316,4414414414422000x316,4414414414414220x418,14414414414412x316,4414414414414412x316,4414414414414412x316,4414414414414412x316,441441441441441x218,414414414414412x417,22441441441441x218,442214414414412x317,2244224144144124x26,44x26,433322442244144122111131221111312x35,224422144122111314221113142x37,2244224122113143221131432111x36,22442222131434221314342x15,x36,224422314344223143442x17,3333222204x26,44x26,4x19,3320000x326,233330x324,11233330x126,233330x326,233330x425,3233330x425,3233330x226,x35,0x331,0"
                            }],
                        "HouseLeft": "p[0,1,2,3,4]2144144142244223214414422442233321441224422x35,214224422x37,2224422x36,11124422x36,x15,022223333x17,0000233x19,033332x310,03333211x38,033332x110,033332x310,0333323x49,0333323x49,0x35,x210,0x315,",
                        "HouseMiddle": "p[1,2,3,4]x216,3x16,33x16,3100002011000020110002031100020311002032110020321102032311020323112032331120323313x16,33x16,3x232,x016,x216,x332,x116,x216,",
                        "HouseRight": "p[0,1,2,3,4]32244224144144123332244224414412x35,22442214412x37,224422412111x36,2244222x15,x36,22442x17,333322220x19,3320000x310,233330x38,11233330x110,233330x310,233330x49,3233330x49,3233330x210,x35,0x315,0",
                        "HouseTopRoof": "p[1,2,3,4]1022322232222131",
                        "HouseTopRoofLeft": "p[0,1,2,4]x015,2x013,223x011,22133x09,2233133x07,223133133x05,221331331330002233133133133022313313313313321331331331331332133133133133133213313313313313321331331331331332133133133133133213313313313313221331331331332232133133133122332",
                        "HouseTopRoofRight": "p[0,1,2,4]2x015,322x013,33122x011,3313322x09,331331322x07,33133133122x05,3313313313322000331331331331322033133133133133123313313313313312331331331331331233133133133133123313313313313312231331331331331232233133133133122332213313313312",
                        "HouseCenterLeft": "p[0,1,2,3,4]033332114x37,033332x110,033332x110,033332x110,03333211x38,033332x110,033332x110,033332x110,033332x310,03333211x38,033332x110,033332x310,0333323x49,0333323x49,0x35,x210,0x315,",
                        "HouseCenterRight": ["multiple", "horizontal", {
                                "middle": "p[1,2,3,4]x216,3x16,33x16,3100002011000020110002031100020311002032110020321102032311020323112032331120323313x16,33x16,3x232,x016,x216,x332,x116,x216,",
                                "right": "p[0,1,2,3,4]4x37,11233330x110,233330x110,233330x110,233330x38,11233330x110,233330x110,233330x110,233330x310,233330x38,11233330x110,233330x310,233330x49,3233330x49,3233330x210,x35,0x315,0"
                            }],
                        "HouseLargeTopLeft": "p[0,1,2,3,4]x015,2x013,224x011,22144x09,2244144x07,224144144x05,22144144144000224414414414402241441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144144214414414414414421441441441441442144144144144142214414414414422421441441441224422144144142244223214414422442233321441224422x35,214224422x37,2224422x36,11124422x36,x15,022223333x17,0000233x19,",
                        "HouseLargeTopMiddle": "p[1,2,3,4]x140,x040,x280,x340,2203202222032022220320222203202222032022203222022032220220322202203222022032220203x25,003x25,003x25,003x25,003x25,00x26,00x26,00x26,00x26,00x26,020222203202222032022220320222203202222032202203222022032220220322202203222022032222003x25,003x25,003x25,003x25,003x25,00x26,00x26,00x26,00x26,00x25,03202222032022220320222203202222032022203222022032220220322202203222022032220203x25,003x25,003x25,003x25,003x25,00x26,00x26,00x26,00x26,00x26,020222203202222032022220320222203202222032202203222022032220220322202203222022032222003x25,003x25,003x25,003x25,003x25,00x26,00x26,00x26,00x26,00x25,03202222032022220320222203202222032022203222022032220220322202203222022032220203x25,003x25,003x25,003x25,003x25,0x340,x2160,x140,x340,x140,x224,x016,3x16,33x16,33x16,3x26,30x26,30100002011000020110000201x26,30x26,30100020311000203110002031x016,1002032110020321100203212230x26,3022221020323110203231102032312230x26,302222120323311203233112032331x016,3x16,33x16,33x16,30x25,300x25,30",
                        "HouseLargeTopRight": "p[0,1,2,3,4]2x015,422x013,44122x011,4414422x09,441441422x07,44144144122x05,4414414414422000441441441441422044144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441244144144144144124414414414414412441441441441441224144144144144124224414414414412244221441441441232244224144144123332244224414412x35,22442214412x37,224422412111x36,2244222x15,x36,22442x17,333322220x19,3320000",
                        "HouseLargeCenter": ["multiple", "horizontal", {
                                "left": "p[0,1,2,3,4]033332110333321103333211033332110333321103333211033332110333321103333211033332110333321103333211033332110333321103333211033332110333323303333211033332110333323303333234033332340x35,220x37,",
                                "middle": "p[1,2,3,4]x08,x26,30x26,3x09,2230x26,302222x09,x25,30x28,3x16,310000201100020311002032110203231120323313x16,3x216,x08,x28,x316,x18,x28,",
                                "right": "p[0,1,2,3,4]1123333011233330112333301123333011233330112333301123333011233330112333301123333011233330112333301123333011233330112333301123333033233330112333301123333033233330432333304323333022x35,0x37,0"
                            }],
                        "HouseLargeCenterLeft": ["multiple", "horizontal", {
                                "left": "p[0,1,2,3,4]033332110333321103333211033332110333321103333211033332110333321103333211033332110333321103333211033332110333321103333211033332110333323303333211033332110333323303333234033332340x35,220x37,",
                                "middle": "p[1,2,3,4]x08,x26,30x26,3x09,2230x26,302222x09,x25,30x28,3x16,310000201100020311002032110203231120323313x16,3x216,x08,x28,x316,x18,x28,"
                            }],
                        "HouseLargeCenterMiddle": "p[1,2,3,4]x08,x26,30x26,3x09,2230x26,302222x09,x25,30x28,3x16,310000201100020311002032110203231120323313x16,3x216,x08,x28,x316,x18,x28,",
                        "HouseLargeCenterRight": ["multiple", "horizontal", {
                                "middle": "p[1,2,3,4]x08,x26,30x26,3x09,2230x26,302222x09,x25,30x28,3x16,310000201100020311002032110203231120323313x16,3x216,x08,x28,x316,x18,x28,",
                                "right": "p[0,1,2,3,4]1123333011233330112333301123333011233330112333301123333011233330112333301123333011233330112333301123333011233330112333301123333033233330112333301123333033233330432333304323333022x35,0x37,0"
                            }],
                        "HouseWallWhitewash": "p[1,3,4]2x17,x024,x18,x024,",
                        "LabComputer": "p[0,1,2,3,4]001x210,11x26,1x012,2x110,22x16,2x012,2x110,22x16,2x012,2x310,22x16,2x012,23x28,322x36,2x012,23241144423223222232x47,x05,232x46,2322x46,24x15,4x05,232411114232234334322133314x05,23x28,32234334322211114x05,234x36,4322x46,24231314x06,x210,44x26,44211114x05,2x19,324002141242x45,x05,2x410,2400244422x011,24114141414240023332x012,2344141414424444222x014,x210,x019,",
                        "Ledge": {
                            "normal": {
                                "normal": "p[1,2,3,4]123232310103313000311300003112300321213332121133331123x15,22221",
                                "jagged": "p[1,2,3,4]12020201123232311232323112323231111220300103313001033130010331301121030200311300003113000031130012021323003112300031123000311230122332300321213303212133032121331211232332121133321211333212113331121x35,112311331123113311231133212x16,222211112222111122221",
                                "crumbleLeft": {
                                    "normal": ["multiple", "horizontal", {
                                            "left": "p[1,2,3,4]12020201111220301121030212021323122332301211232331121x35,212111",
                                            "middle": "p[1,2,3,4]123232310103313000311300003112300321213332121133331123x15,22221"
                                        }],
                                    "crumbleRight": ["multiple", "horizontal", {
                                            "left": "p[1,2,3,4]12020201111220301121030212021323122332301211232331121x35,212111",
                                            "middle": "p[1,2,3,4]123232310103313000311300003112300321213332121133331123x15,22221",
                                            "right": "p[1,2,3,4]1212121101013131201213113201213103201311323211313331211311121233"
                                        }]
                                },
                                "crumbleRight": ["multiple", "horizontal", {
                                        "middle": "p[1,2,3,4]123232310103313000311300003112300321213332121133331123x15,22221",
                                        "right": "p[1,2,3,4]1212121101013131201213113201213103201311323211313331211311121233"
                                    }]
                            }
                        },
                        "LedgeOpening": {
                            "normal": "p[1,3,4]x28,x110,01000x19,x28,x19,00010x110,"
                        },
                        "MartLabel": "p[0,1,2,3,4]x316,x216,x316,2111211211221x25,1221212121212121212122212211212111212121212121211121212121212x118,x46,11x46,x117,x216,0021320000213200002132000021320000213200002132000042240000422400",
                        "MountainTopRight": "p[0,2,3,4]3111000031311000331211003131210031121210112121311012131131013111",
                        "MountainTop": "p[1,2,3,4]x18,0311130220202020220x25,322223232222323x26,32323x29,0x25,3022223",
                        "MountainTopLeft": "p[0,1,2,3]x07,2x05,222000022230002212300221331002133120233133122233131",
                        "MountainRight": "p[1,2,3,4]3112111231112121331212123131213131121211112121311012131131013111",
                        "MountainLeft": "p[1,2,3]0112021010101122010201201220220212020010122020011122020111222022",
                        "MountainBottom": ["same", ["Solid", "Ledge"]],
                        "MountainBottomLeft": "p[1,2,3,4]12020201111220301121030212021323122332301211232331121x35,212111",
                        "MountainBottomRight": "p[1,2,3,4]1212121101013131201213113201213103201311323211313331211311121233",
                        "PlantLarge": "p[0,1,2,3,4]x014,2002x017,4040000242212212204x05,4040004x05,4021212122121222204x05,4x05,2022212112142112121212x09,212214141414141414142212x09,2414141414141414141412x09,241414141414141414144442x07,221414141414141414141424220003022421214141414141414242424420013122121212141414141424242422400342212121242444414141424244422041244412121244141414141x45,24420322424141414141414141x47,22202442x45,141414141x48,242442322x49,141x410,24242204244242x419,2424242422424442x413,242424242022424242124242x49,2444222024424242141442x45,2424214142442022441414144244424242424414142200244241414444242x45,2x45,244200022x46,24242424242424442422x05,22242424242444242424241222x08,2222424242424242424222x013,2224224242424222x09,3x05,3000222242422240003x05,300003000042242421444224x05,3x011,42424x16,42124x08,3x07,42244x16,442443x014,32111221111244424x07,3x08,4222442411222124x09,3x07,x47,2224424003x06,",
                        "PlantSmall": "p[0,1,2,3,4]x05,2222x011,2311122x08,231113122x07,211131412x06,23313111212000024434313442420002234343242422000022333442322000023243432424220024243432324242202232424322242220022424224x25,0000x211,x06,222244222x09,243342x011,2222x06,",
                        "PokeCenterDesk": "p[1,2,3,4]x116,x016,x348,x216,x316,x216,x316,x016,x117,2x312,2112x312,2112x312,2112x312,2x117,",
                        "PokeCenterDeskBlocker": ["multiple", "horizontal", {
                                "left": "p[1,2,3,4]31101010101013113300111212121211",
                                "middle": "p[1,2,3,4]1100x28,3311330011x38,11",
                                "right": "p[1,2,3,4]13010101010131113300112121212111"
                            }],
                        "PokeCenterDeskLeft": "p[1,2,3,4]x18,x364,x08,x18,x36,21x36,21x36,21x36,2x19,",
                        "PokeLabel": "p[0,1,2,3,4]x316,x216,x314,232211122121211211212121212121222121212121221121212211212121212211211122112121122x118,x46,11x46,x117,x216,0021320000213200002132000021320000213200002132000042240000422400",
                        "PottedPalmTree": "p[0,1,2,3,4]002x010,20002322x06,22320022332200223342223343232232344420224443243444224234344442442333202244x25,334220x25,332244220000223344332433220234244434444233202334323243444242334434224343432223424222242342223322322223223320232020222202320002000021220022x08,242x014,32x012,2442x010,22233222x07,2424134242x07,22344322x06,23224134223200002322244222320000243x26,3420000244x36,442x05,2441344442x06,24x26,42x06,2443344442x07,24134442x09,x26,x05,",
                        "Register": "p[0,1,2,3,4]x09,22x013,2412x012,24212x011,212212x05,x27,12320000244141212132000021444421242x05,21414121222x05,21414121442x05,2x45,21332x05,21413124442x05,x27,4442x05,2x49,2x05,x211,x05,2x49,2x05,x211,000",
                        "Sign": {
                            "normal": "p[0,1,2,3,4]0x214,00244x27,442220022x07,223420x213,422x313,22214x17,44112221441414414414222x113,222144x16,41412221441414414141222x113,220x213,4203030003033420420303003033442342x07,303442442x08,30334224",
                            "forest": "p[0,1,2,3,4]03040423320404033x214,42x414,22x114,2232332232332233221221223223211202x35,x19,232x113,223323232323233322x114,20x214,330303424424030300303442332440303303044422444303003030x46,30303x016,"
                        },
                        "Rock": "p[0,1,2,3,4]x05,x26,x08,2212223222x05,21133131422200021113133342422002111433344423202111333343424232211x36,44223222331x36,22323223131243422323x25,3311441121242223213422431232223132442234342322334413234143422232234232443432242232422024442324402022002222320",
                        "SofaLeft": "p[0,1,2,3,4]02222x011,231312x010,233132x010,233312x010,23313x212,333124x36,1322444424x37,122333124x36,1322331324x37,122333124x36,132233132x49,22333124x36,1322331324x37,122333124x36,1322444424x37,122333124x36,1322331324x37,122333124x36,132233132x49,22333124x36,1322331324x37,122333124x36,13x27,4x37,122444424x36,1322444424x37,122444424x36,1322444424x37,1224444x216,x410,22x414,22x414,20x214,4",
                        "StairsDown": "p[2,3,4]000x213,000x210,x06,x28,00110000x26,00111x011,11101x09,11101x09,11101002220000111x06,2220011101002220222011x06,11202220010022201120222x05,1120112022200220112011202000022011201120002002201120100010200220222020201020",
                        "StairsUp": "p[0,1,2,3,4]x013,222x011,22212x09,2221212x07,2221x25,x05,222121211120002221x25,11123332323211121112333x25,11121222444211121112221x25,11121222121224421112221x26,4421222121244422442221x25,444224421212x47,2244x25,x47,x217,",
                        "StairsVertical": "p[1,2,3,4]x166,313131313131311313131313131311113131313131313x118,x35,x29,113333x210,11333x211,x118,x013,211x013,211x013,211x013,21",
                        "SquareWallTop": "p[1,2,3,4]10x212,31",
                        "SquareWallFront": ["multiple", "vertical", {
                                "top": "p[1,2]x117,x014,x117,",
                                "middle": "p[2,3,4]01x212,1001x212,1001x212,10",
                                "bottom": "p[2,3,4]01x212,1001x212,1x017,"
                            }],
                        "StoreAisle": "p[0,1,2,3,4]000x25,0002222000022220002222000223111322211112222111122221122024x27,4x27,4x27,42222122423111324211112242111122421121224x27,4x27,4x27,42222122423111324211112242111122421121x234,x130,22x130,22x430,221x228,1221x27,444x25,4442222x35,212212111124111422241114x29,12212333321444122214441222x15,212212333322111x25,1112222x35,21224x228,422x130,x234,4x26,4424422244244222442442422324114244244222442442224424423223x26,1121122211211222332332322323333211211222112112221121123224x228,422x130,x234,424424424444244244442442444424223x212,33x26,33x26,322321121123333211233332112144423223x27,1111222211112222133323224x228,422x130,x233,",
                        "StoreFridge": "p[1,2,3,4]3x114,31x014,110x212,0110x212,0110x212,0110x212,011x314,x118,x014,113x112,31101333300010310110133300030331011012200020122101101100010211110110100010x16,011010030x36,101101010x18,01101301331333x15,0102133122100011012212212212121101221111221212110x18,012221101x36,030x15,0x16,010001011013133010003101101212020002210110121020002221011012020002222101101010001122110113x112,311x014,12x114,2",
                        "StoreSaleBin": "p[1,2,3,4]x117,x014,112332232232233211232232323223221122323332322332112332323233233211x214,x118,x014,110x112,0110x112,0110x112,0110x112,0110x112,0110x112,0110x112,011011031111031101101333311333310110x112,011x014,11x214,x118,x314,12x114,2",
                        "Stump": "p[0,1,2,3,4]0030303030303030030303030303030330303x07,30300300042222430003300021333312303003041311113140033002131111312030030211333311200330024x16,420300302434343342003002243311434223002424331143421203224433113344240233322333324442342224424332223200444131422444203",
                        "Table1x2": "p[0,1,2,3,4]0x214,02x114,221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4221x312,4x218,x114,x218,3x45,22x46,223x45,22x46,223x45,22x46,223x45,22x46,x217,",
                        "Table2x2": "p[0,1,2,3,4]x0257,x230,02x130,221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4222x428,x235,x430,20x230,0024442x420,24442002133x222,33320021332x320,2333200x25,x320,x25,0",
                        "Table2x3": "p[0,1,2,3,4]x033,x230,02x130,221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4221x328,4222x428,x235,x430,20x230,0024442x420,24442002133x222,33320021332x320,2333200x25,x320,x25,0",
                        "Table3x1": "p[0,1,2,3,4]0x246,02x146,221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1221x344,1x250,x446,x249,02444422x432,22444420024444x236,444420042222x436,222200",
                        "TelevisionMonitor": "p[0,1,2,3,4]00x212,00021x311,200x214,021x313,221x313,22x414,224x212,422423333x46,2422423113x46,2422423333x46,242242x410,242242x410,242242x410,24224x212,4224442x46,244420x214,0",
                        "Tree": "p[0,1,2,3,4]x010,202x011,22424200002020002434142002424200024131422431142022341420024312224243420022242222322422000242224234322x05,202244442x011,2442x012,2132x012,2132x011,213132x09,24313342x09,224422x012,22x07,",
                        "WaterEdgeTop": "p[2,3,4]0x26,010222201210220122210012202000102200110200010200201020220",
                        "WaterEdgeRight": "p[1,2,3,4]1131320101132012101101233101123213011323311001322131301313132301",
                        "WaterEdgeBottom": ["same", ["Solid", "WaterEdgeTop"]],
                        "WaterEdgeLeft": ["same", ["Solid", "WaterEdgeTop"]]
                    },
                    "Scenery": {
                        "Blackboard": "p[0,1,2,3,4]0x230,002x128,20023x226,320021x226,120021x226,120021x226,120021x226,120021x226,120021x226,120021x226,120021x26,x36,x214,120021x26,114411x214,120024x26,114411x214,42002x17,x46,x115,200x230,x033,",
                        "Bridge": ["multiple", "vertical", {
                                "middle": "p[1,3,4]x18,x28,x110,01000x19,x28,x19,0001011",
                                "bottom": "p[0,1,2,3,4]x38,x48,x18,x28,00233200002332300321123003211210"
                            }],
                        "Clipboard": "p[0,1,2,3]00x212,00002332333323320000231122221132000023x18,320000231331313132000023x18,320000231331313132000023x18,320000231333131132000023x18,320000231111333132000023x18,3200002x310,20000x212,x034,",
                        "Doormat": "p[0,1,4]0021x210,12",
                        "DoormatDotted": "p[0,3,4]x07,212121x28,x17,x28,11x25,11x223,11x25,11x27,x17,x28,121212",
                        "DoormatDashed": "p[1,3,4]x08,x28,x18,x28,111122221111x28,11112222x18,22221111x28,111122221111x28,x18,x28,x08,",
                        "Flower": {
                            "normal": "p[0,1,3,4]x011,33x05,3113000313323003122230333223330x36,000033000",
                            "two": "p[0,1,3,4]x012,33x05,3113000313323333122230333223300x35,x05,3000",
                            "three": "p[0,1,3,4]00033x05,311300031332300312223000322300330330330x36,000033000"
                        },
                        "FlowerVase": "p[0,1,2,3,4]x019,22x09,21122x07,144112021221144112022122211223213224222312212212242212022133334220042133334240044213342440004422224400",
                        "ForestDirt": "p[0,1,3,4]20003312000321310003322300203333200002320032x06,23002x09,",
                        "GroundArrow": "p[0,4]0001x06,1110000x15,00x17,x011,111x05,111x05,111000",
                        "Notepad": "p[0,1,2,3,4]x021,x28,x08,2x45,312x07,x28,x022,x25,0x25,00002x15,2x15,200021333141333120002x15,4x15,20002x15,4x15,20002x15,4x15,20002x15,4x15,20002x15,4x15,20002x35,4x35,20000x211,x018,",
                        "Painting": "p[0,1,2,3,4]x017,x214,002x112,20021x410,120021433x47,120021433x47,120021x45,334441200214444333344120021444x36,41200214x38,4120021x410,12002x112,200x214,0",
                        "PokeCenterPoster": "p[1,2,3,4]x317,x014,33x05,1111x05,31222213003122221322213300331222330001x36,1000332221x06,1222312222100001222213x05,1111x05,33x014,3301111000011110310111100001110013011x06,1111033x014,x317,x116,",
                        "Shadow": "p[0,2]0000x16,x06,x110,000x112,0x128,0x112,000x110,x06,x16,0000",
                        "SmokeSmall": "p[0,3,4]x08,22x06,22211200002x16,0002x17,002x17,202x16,22202x16,22202x15,222021111x25,02111122220002112220000",
                        "SmokeMedium": "p[0,3,4]x06,x25,x09,2x15,2x08,2x16,22200222x18,21021112x15,222202x18,222202x15,2212222002x15,x27,0022111x28,00x212,000x210,x06,x29,x07,x27,x08,x25,x010,222x010,",
                        "SmokeLarge": "p[0,3,4]x09,222x010,2211122x06,22x15,222000021111x25,00002111222x07,2111122x08,21112x09,21122x010,21122x09,21122x010,21122x010,2112x012,222x012,22x014,2x012,",
                        "Stool": "p[0,1,2,3,4]x083,x210,x05,2x110,20000211x36,1120000211x36,1120000211x36,11200002x110,200002x310,2000023x28,320000232x46,2320000232343433232000022233433322200",
                        "Window": "p[0,1,2,3]x016,x217,x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x16,22x36,22x36,22x36,22x36,x217,x016,",
                        "WindowBlinds": "p[0,1,2,3]x017,x214,002323x17,23200x214,002323x17,23200x214,002323x17,23200x214,002323x17,23200x214,002323x17,23200x214,0",
                        "PlayerPortrait": "p[1,2,3,4]x012,31113x018,3113332211x014,31x36,22221x012,133311332322223x010,1333100133232221x09,133310330123232223x08,133310330132323221x09,33331001333232321x09,13333110000x35,1x010,333x08,23331x010,1x08,22x15,x09,1x05,222211331003x08,1x25,111330100201x09,x15,333220100301x011,12223202200101x012,1x28,0011x014,1322312001x017,113222111x015,313311131321x012,312133312201323x010,12221131222013211x08,1222300x15,3331001x06,100230003x17,0010300001000010003x15,00001010003x05,1000x16,00030003001220230000x16,00030001032231310003x15,30001000101230021000x16,00001000030110221300x16,00001200010012221033x16,00001220010001313100x16,3333x25,1x05,133111031110000122211x06,13311110031111311121x06,1313331x36,1111221x07,113331x36,1003111x08,1x310,1011331x07,3133331133331133111x07,x36,1x35,1123331x07,133331013333101033x08,13333101333310011x09,1232310132321x013,13233101232333x012,32333300123231x011,123231000132331x011,133331000123231x011,133331000133331x05,",
                        "PlayerSilhouetteSmall": "p[0,1,2]x05,2222x08,22111122x05,2x18,200002x18,20002x110,2002x110,2002x110,20002x18,200002x18,2x05,2x16,2x05,22x16,220002x110,2002x110,202x112,22112x16,21120222x16,22200002x16,2x05,2x18,2000021112211120000211122111200021112002111200211120021112000222000022200",
                        "PlayerSilhouetteLarge": "p[0,1,2]x09,2222x016,22111122x013,2x18,2x012,2x18,2x011,2x110,2x010,2x110,2x010,2x110,2x010,2x110,2x010,2x110,2x011,2x18,2x012,2x18,2x013,22111122x015,211112x014,22x16,22x011,2x110,2x09,2x112,2x07,2x114,2x06,2x114,2x05,21112x18,21112000021122x18,221120002111202x16,2021112002112022x16,220211200211202x18,2021120211112x110,211112211122x110,2211120x25,x110,x25,x06,211112211112x09,2x15,22x15,2x08,2x15,22x15,2x08,2x15,22x15,2x08,21111200211112x07,2x15,2002x15,2x06,2x15,2002x15,2x06,2111120000211112x07,21112000021112x08,2112x06,2112x06,221112x06,2111220002x16,200002x16,2002x16,200002x16,2000x26,x06,x26,00",
                        "OakPortrait": "p[0,1,2,3,4]x07,240002x022,211222122224x018,2x110,224x012,44411133x19,2x012,23313333x18,34x012,23342241124224312x011,433433132121112132x012,232311132x15,212x013,223113x17,232x013,422214141112222x013,41122243232222412x012,21214121122141412x012,21214421112431412x013,2241142x16,22x015,2211331113112x017,21322221414x019,234111242x019,22241114222x016,22311x25,1212x013,223311222311121122x010,2222311x27,1114124x08,211122122x15,21141114x07,2221112111x25,4441112x06,2244x27,4444244x15,4x05,2124242112x45,21141114200004112212112x46,211141412000021122121222244442114112120004x26,x15,3244421141121140021111211112224444214111211204x15,231111244222214111211202x15,222111222112141111211202x16,22232x15,23411112111202x15,x25,x15,23x15,2111200x25,3322x16,23x15,23112000021122122211222x16,2332x05,2x15,24222242x16,2332x05,2x15,22211222111144232x05,41441112442244221141112x06,21114112442444421141112x06,21114112442444421141112x06,21114112422444421141112x06,21114112444244421141112x06,21114112442024421141112x06,24114112442024421141142x06,21444112442024421144412x06,2x15,2443202442x16,2x07,221112433202442111122x09,x25,43200024x26,x010,244443320002x46,2x010,2444333200024443332x010,2444433200024332242x09,2422244442002x47,2x08,x28,420233x26,4x08,231112112000222311122x08,2x35,22x05,23333112x09,x25,x08,x26,x05,",
                        "RivalPortrait": "p[0,1,2,3,4]x07,224x027,2424x026,2442x026,24424x020,4222x45,2024x014,22x410,2332x011,42x412,33332x09,24422x48,x37,4x07,202212x49,x36,2x011,2x45,2444243424442x09,2x45,244423242122442x07,x46,224423332212144424x05,24444232442333221412444420002x45,2232423323323112422000022244213224342123232222x08,242213123331121121112x08,2420231233311212214112x08,2002x38,123321112x011,2x36,23112223112x012,243322311211122212x013,24333241111233114x014,224211222123112x011,2222331221112233114x08,2232333312x15,323112x07,2133342224x16,3233114x06,24343333112211113343332x07,2323311121121122423332x07,212111121441220002222x07,4x17,214412x015,214x16,21122x015,212x17,2232x014,4112x18,32x015,2112333x26,x016,23332221411112x014,433321141144442x014,223322221141112x015,42244422144442x015,21244424x26,x015,212x410,2x016,4244422x47,x015,x46,22x45,2x015,2x45,20x45,2x015,24444200244442x015,23434200243432x015,233442000333444x014,434444000234342x013,2343420000243442x013,2444420000234342x013,x46,x05,44442x013,224222x05,22422x012,2112112x05,212112x011,2112112x05,212112x010,2422422x06,2242242x09,2444112x07,214442x08,2111122x09,21112x09,2222x012,222x07,",
                        "BlainePortrait": "p[0,1,2,3,4]000233x16,2x06,333x16,4x05,2x35,x15,400002x36,11112000024x37,2220004132x35,2431200233223432232320023244222442232000224423244242x05,3224332212x06,2334333112x06,242111142x08,43344412x08,2x35,4x010,2333124x09,42442220000",
                        "BrockPortrait": "p[0,1,2,3,4]004x211,4004x213,0x25,4224x211,43233324x27,4x38,4222422x310,224024243111334242022333241142333220433222332223340043133311333134033211112x15,233232x110,23202241142241142200004x18,4x06,32x16,23x08,221122x05,",
                        "ErikaPortrait": "p[0,1,2,3,4]000233334x27,002x38,4222204x25,4433334224x25,422243334x26,4x26,43x27,4x215,323x26,4x25,4343243342242224x38,12420222x35,41112220x25,331224122202223333x15,2220222434x16,22202222432111322220x26,3111212220x28,3121222",
                        "GiovanniPortrait": "p[0,1,2]0000x28,x07,x210,x05,x212,0000222x16,222000022x18,22000222112222112220x210,11x212,111x212,111x213,11x230,11x214,11x255,",
                        "KogaPortrait": "p[0,1,2,3,4]0x223,433x28,3222x35,x26,33423331114222423334333141122202x37,4221222042333433222124102223343224114340022333221411134002124332431113100024431333111220004x36,1412440000232224112244x05,23331222444x05,43332242444x06,4221124422",
                        "LtSurgePortrait": "p[0,1,2,3,4]x116,44x114,34444221111333114344211422x35,23432111333422234232114x38,201221112334333340412114123433342041111412233322001211134433421200221113331344200044211334222320002222134114332000344422111432000014424422432x05,4424400222x06,",
                        "MistyPortrait": "p[0,1,2,3,4]0002223443221243002222x45,3224402222x46,33244x25,x49,x28,442x45,202224222242x45,2222422223224444222444224322224422432443322122220023123322131211202412333213114120241233323111412034x36,111212000233342311222x05,42333322x010,22322322000",
                        "SabrinaPortrait": "p[0,1,2,3,4]x212,4000x213,400x214,40433442242222432424433224422334x25,442223224x212,34x29,4222234x26,1423412233222200412141233321200043411423332140003331133313340000223111331434000022241132434x05,22224333342400004122344443332000",
                        "ElderBack": "p[0,1,2,3,4]x012,2224x022,22111124x019,2333x15,4x017,2x36,11114x016,222443331112x015,2x35,22311114x013,2x38,231112x013,234x37,41112x012,234334x35,22342x012,23434333432123432x010,2343343334323411412x010,24343334332341142x011,2434333433223124x012,232232322243312x014,20023233433114x016,22333344312x015,2244223322334x014,2444333221122x06,2x07,2x45,342x15,20000212200002x45,3423x16,200212212002x47,3213x16,20211121002x48,2313131112231112102x49,2331313112241111402x410,233131321221111202x410,2x36,2x15,2322x49,2442333323331122202x410,x25,3322333200002x412,2002200222x05,",
                        "PlayerBack": "p[0,1,2,3,4]x013,2224x022,22333322x018,22x38,2x015,2244434x35,2x014,2x46,34x35,4x012,2x48,3433332x012,2x47,3434333222x010,2x413,11112x010,44222x46,111122x011,2x47,2224422x013,x210,12322x013,x210,3212x015,x29,32114x014,4x27,423112x015,422224x35,2x013,42222444224424x012,42x35,2224422x013,434x37,2242124x011,243434343224231112x09,24422434324442311212002240002221124442444233211122111202144x26,44442323111231112022x46,2244423323311144111422x47,244422233331121411202x47,2442442x36,21123202x47,24424232x35,2122200022x46,22423202333222x08,x26,424420002222x06,",
                        "BugCatcherFront": "p[0,1,2,3,4]x021,2242224x039,42x37,24x036,2343434343434x034,41x311,24x033,2314343434x25,4000224x025,41x35,4x26,4112244442x024,21134x26,411222444422x025,214x25,4112223244422x027,x25,411x26,33222x018,224x08,22411224333223322x019,211122400042112222112x35,2322x019,4221112221142222321124342132x020,4314221214442332121113321144x020,413131244422211112111132112x021,431313122213211211114133332x021,41313131313142223111223332x022,43131313131340002311133200024x019,413131313131300002142224422112x018,4313131313140000221123211231414x017,413131313134000211411342123411224x015,43131313131300214114114141223321124x013,3131313131400021141144112121224221122x012,41313131340041114x16,21123120042112x011,431313131300211343x16,4141114000424x011,4131313140002113433x15,2212112x017,4313131340002114333x15,2122332x017,413111313000211233x17,40024x018,4x16,400002112x19,2x022,3111443x05,2112x15,2242x024,344x08,2114222244442x034,211132x47,2x034,21113244422442x035,2332444244442x032,x210,44442x032,2x35,1111221114x032,2x49,221114x032,2343434141241112x032,2343434141241112x032,2343434141221112x032,2343434141221112x033,x29,021112x036,2111200211142x035,21112002114444x034,44414002444112x033,4144420002443112x032,211142x05,2222x034,222x075,",
                        "BrockFront": "p[0,1,2,3,4]x021,40000202x049,224x27,4224x042,4x211,4x042,4x213,x040,4x25,4224x27,4x037,4x25,43233324x25,4x038,2224x38,4222x040,422x310,224x041,24243111334242x041,2233324114233322x039,214332223322233412x038,214313331133313412x038,233211112x15,2332x039,232x110,232x041,22411422411422x044,4x18,4x046,32x16,23x048,221122x051,2332x050,42333324x045,422x38,224x041,2333322322233332x039,411332332333233114x038,211123323411121112x038,211233123111121112x038,211231112111121112x038,211121121111241112x038,411142211112241114x039,2142331112332412x040,2433111121113342x040,23x15,22x15,32x040,4x15,2332x15,4x041,21122333322112x042,42244222244224x043,242221122242x043,x45,2222x45,x042,2x45,2x45,32x042,2x45,24444332x041,2x411,3342x040,2x46,224444332x040,2x46,224444332x040,x47,004444334x039,244433420024443332x038,244433320024444332x038,244433320024444332x038,444333320024444334x037,24443334000044443332x036,24443332000024444332x036,24433332000024444332x035,2444333320000244443332x034,2444333320000244443332x033,244224333200002444422332x032,242444233200002442444232x033,21114322x06,22341112x034,214122x010,221412x035,222x014,222x018,",
                        "JrTrainerFront": "p[0,1,2,3,4]x0194,34x211,43x040,3431111x37,243x038,32x16,3333223324x038,4x18,3321123342x037,2x18,3211132332x037,2x18,3211342332x037,23x17,3323423332x037,233x16,3332233324x037,4x36,4x211,x037,34x25,x15,x35,442x037,422224241111x35,44x037,214222334x28,4x038,2134122x35,242x041,411112123332144x041,3211121433321434x042,24111x37,2x041,24412211422332x037,422223231244233344x037,42123343143134424x08,22x028,222344421121113332x07,2112x025,24112332441121111334240000211132x023,211333242211142111332334000233332x022,4113322422211134211123332000243332x022,213421114241113442121112000422422x023,2132x15,41113344422112320024224x024,2134x15,2313333444212333221324x025,213321111424332224222243341334x026,213334112342221132x05,233332x027,2123321241142213322400002332x028,433221243111332224420200024x030,22402142113333x46,32x038,211121333344423112x039,2111233344241142x040,42111421223142332x038,2332133320042443332x036,233334332x05,2433332x034,4x35,242x07,2x35,2x032,3233334x011,2x35,2x031,433332x013,233334x030,411332x015,433334x028,411112x016,233112x028,21114x017,211112x027,211112x017,211112x026,231132x018,211112x024,4224314x019,211112x023,43122432x019,421112x023,22312224x019,x26,x022,42223224x020,42243124x020,x26,4x022,4x26,4x019,422243x024,34x25,x0179,",
                        "MewFront": "p[1,2,3,4]x031,313x035,3100013x032,3x07,1x030,1x08,23x029,3x08,21x030,31100002223x032,31112221x036,3221x010,3113000x16,30000111x06,321x010,12001132x05,22311001x06,101x010,132x012,210021x06,101x011,132x014,231x06,103x011,13x015,233x05,3023x011,3x016,21x06,101x011,3200132x06,2310002300001023x011,1003223200002322300010013021x012,100321132000311230021132221x013,32030101000010103002122213x015,10001110000111000023313x017,1000013222231000021x018,3113200x29,00021x017,312222132x09,2013x017,30022111133x08,31x019,10013x05,13x05,311x019,3001x09,x16,331x018,1201x08,113333222213x016,32003000031113333200022211x015,10010003002133220000322221x014,30030001002122x06,2322221x014,12210003112x08,211221x015,32221000112x07,221011x017,1233131112x06,30223x020,31331311320000100021x022,111311132000100021x024,1331113222300221x025,13x16,30122131x020,3x19,300001322211x016,31111331111x06,1322000113x012,3x110,x08,1100200221x032,3x15,3x07,",
                        "MewtwoFront": "p[1,2,3,4]x06,11x012,311x038,3001x010,30001x037,10001x09,100021x036,10000100311301000221x036,10022131000111000223x036,100222x07,300223x037,302222x05,21000221x036,300222x05,223000223x036,10002x06,2300002221x034,2x017,2223x034,3x017,222313x017,2311x010,1x018,22232211x013,23000011x07,1x019,222232221x011,3x08,1100003x08,22x010,2222322011x09,3x09,2210001x07,2x05,332000x25,3200011x07,3x07,1122221001x06,20000313x210,1100001x07,1x06,100122210011x05,30001203x210,10100003x05,3x06,30000122210310200300211000220x26,100010001x05,1x06,1x05,122100103002021310002000x25,100010022100001x06,1x05,12210033200023131003000x26,10011122210003x07,1x06,3221001000221010230000x25,321122x15,0001x08,1x05,1221001000221202x05,x26,3x26,00021001x08,3x05,122100100002x07,22111322232222000011101x08,2100001221003x08,13021101111x25,320000100101x07,23000032210003x05,310011001301210223322201000301x06,20210012231000011031001120030101030003222201000011x07,2230032231x06,11113x05,30101003000022001000011x06,20230122231x014,30021x07,22000021002101000020223122223x015,10221100021132200211002101x05,2022122231x014,302211012232221322110100211002020222122231x014,10210000110002221121110021102020222232231x015,1221x05,1x05,x25,11100121120x26,1331x014,3221x06,3x06,x25,321021221x27,111x015,1321x05,3x08,22232210021221x26,1x016,3221x06,100332000022302210212201x25,1x016,1221x06,102222300023000213212203x25,1x015,30022x05,313x25,30003000210212200122221x015,30022100001030022233003002230003000322221x015,10002100030010022233003002100001000012231x015,10002100030012222333303222300021000012231x015,10002111010003222323322321000221000212231x015,1000100011000122323233233300022100221233x016,3000100210100013232333321000023x25,1331x017,300102210100021333311113000221222233331x017,10021112101020213310221000022122221331x018,133x25,100102223112230000222122233331x018,1103222331001x25,013x05,22122221331x019,300012300010001221011000022210222211x020,300211300010001133113000222131022201x021,12211122110011333102302222131x06,31x020,3113x17,02233122213321331x08,31x021,11333300002233111102133110331x06,1x019,1003x07,22223331110110130021x06,1x018,1001x05,222231111x08,100212200021x019,111222231111x013,12221112221x023,1111x019,111000111x05,",
                        "DRAGONITEFront": "p[1,2,3,4]x0115,1x07,1110011x040,123x05,100311201x013,1111x022,1010000100221011x013,100021x021,101000122231011x014,1000021x020,1010001233101321x012,100x25,1x08,1x010,1230001233121321x011,12021112221x06,323x010,1230011110213221x010,122111212221x05,121x010,1211322210131321x09,1222111231222100001223x010,1212222121331321x08,1221123103122210001221x010,1231022121223121x07,122131231033122210010223x09,1121002212222131x07,121331031033312221010221x08,101100002200223131x05,1213310331033331221010223x08,1x07,20021131310000121333103331033331221100223x07,1x06,2200302121100012133331033310x35,122100221x07,1x06,2202112121110111333310333310x18,300223x07,11300002223112123x15,x35,10333111x07,10002223x07,103002223110112331111x35,10311x010,10002221x07,11113222331112233311113333101x012,30002221x08,1110x29,x36,11133101x012,100002221x09,111x27,321x38,1111x013,300002221x010,10x27,121x36,x25,31111001100001000022221x010,10x28,1x37,2200222233110210003000022221x011,1022212221x37,122x05,223x15,010000x25,3x011,101x25,1322x36,1322x05,2331011200x26,3x013,12222313x25,x35,1322x05,23111x210,1x013,x16,3200222x36,1322200023101x29,31x011,1133111332x05,2x35,1133222231013x27,3331x09,1133331113x07,22x35,11133331113332222x35,1x06,111002233111x06,220023333x17,311x311,1x06,101002233311x27,0002223311132223111x311,1x06,311223333111x010,20233132000222311x39,11x06,101x36,111x08,220023332x05,2223111x35,111x07,121133331111x06,22000033332x05,22223x110,x08,12211110001x26,x05,32232x06,x25,3x18,x010,11x07,1x09,3322232x06,x25,3x18,x019,1x26,3332222332x05,x26,33x16,x020,11x35,x25,33232x05,x26,33x16,x020,11x28,33222332000x27,33x15,x020,1111x37,22223312200x26,3331111x021,1131x210,32231x28,x35,11x022,12313x27,3322233132222x37,1x023,12231x37,222233331x312,11x021,102231333x25,x37,111x311,1x021,1022311x313,x17,322x35,1x020,1002333111x39,x17,3222233331x021,1023333x15,3333x16,30012002233331x021,11333x114,3000012002233331x023,x115,x08,1200233311x029,x19,x08,13222311121x030,x17,x09,1131102211x030,x17,x010,11021001x032,x15,3x012,11011x034,1113x082,",
                        "DRAGONAIRFront": "p[1,2,3,4]x0100,3x013,11x031,301x011,1001x030,1003x09,10001x011,3x15,3x012,1101x08,100001x08,313x27,11x010,10011x06,300021x07,13x212,1x09,10031113000100231x06,1x08,x27,1x08,10122233113203320100001x011,x26,1x07,1300002233120002210001x013,x26,1x05,13x06,2331x05,10001x016,22223x05,100313000233002311001x018,22223000310302230022320002101x019,22221000100100210022332002101x020,222300013001003001131200101x021,222230031300130001033122101x08,222x010,2222100031x06,10213311012x05,x28,x08,22221000110000212131311001x211,3132x08,222100012000221331133101x210,1300032x07,222100030000221111332101x28,31x05,12x07,2221003x06,221133322133x25,331x06,32x07,2221001x08,223122221x38,1x05,32x08,2221001x08,23x15,2211x35,1x06,12x07,222230001x06,231x35,1222113331x06,3x08,2223x05,10000231333113312222111x06,1x08,22221x06,311130100111131x26,3110013x07,x25,31x012,1001111312x08,11x09,x25,1x013,133311331x019,x25,31x014,1x35,12x017,x26,31x016,x15,222x014,x27,31x020,131x25,x07,x210,31x021,13311x218,331x022,1333311x214,3313x024,1x35,11x29,333132x025,1x37,111x36,1132x028,12x36,103111132x011,1x019,122x36,1x018,1x020,122x35,1x017,11x021,122233331x014,1111x022,1322223311x07,11101031x024,113222333110000130011331x026,113223333110133003111x029,1111x35,11311331x035,x17,311331x042,13331x044,111x0104,",
                        "DRATINIFront": "p[1,2,3,4]x058,31113x033,31x05,1x031,12x05,1x031,12223001x030,311113221x029,31x36,11x07,31113x017,133301x35,100003100001x016,1133311x36,1001x05,1x017,11x313,1x05,3x018,1x38,1003312200001x016,31x38,112031x26,3x016,1002x36,11131313231221x015,300022x35,x15,3313223123x014,1002222x35,11133311332211x014,1x26,x310,110133331x014,3x26,x36,1333100013331x015,1x25,x35,13331x05,1333x016,31223333113331x07,13x019,3x15,x35,1x031,11233331x032,12223331000313x025,10022233103133313x05,3x016,12200223311x37,1x05,3x014,10002002211x310,000013x013,1000020221x311,100011x012,12000022221x313,00113x011,1022000221x313,103111x010,30000220221x314,x15,x010,1x06,2221x37,21x35,11113x010,12x06,222x36,221x36,111x011,10x29,133322221x35,1313x011,3x08,x210,32x35,11x013,1x07,2020200223222333133x013,3x06,2002002002122223221x015,100022000200220311x25,31x016,122x05,200021000122213x018,1x05,200003x05,313x021,1300200313x032,31113x022,",
                        "MOLTRESFront": "p[1,2,3,4]x016,33x026,111x022,1030030000313x013,2000101311x010,2x08,103x06,110001x06,313000220300013311x08,232x06,101x05,1x06,100031022100022x05,13331x08,23320001003x05,31130030313x05,2130022x05,13331x08,233000300010001000030101x010,13x06,133331x09,23200010001003000010103x010,22311113233331x010,23000300001x05,1223x014,x28,3331x010,2200001000013003221x06,13x08,x27,3331x08,111x06,100002311223x05,1x010,x27,331002x05,1331x07,3113222321000013x05,31113x27,3110022x05,12331x010,12223220010003x17,01322223100032x05,12233111x09,122122010011000x17,01323331x08,1222331131x09,133221001001300111133110313331x07,12022312331111x05,33332103130003001x36,100013x07,1302221223311311x05,333101003x16,31x36,100001x05,32202221233312331x05,13313x17,x36,1x35,1001330000120022322333123311100013313x16,311x35,1x35,11321x05,300221223313233113100013333x16,331133321233231223x05,10222122231233111331011133x15,3213332133212332321x06,10222102212233113331111x35,1111221333212221232221x06,10022100212223132331311x37,111221232212221222231010001002300003222212331331x39,1112232222320320223313100100230003x25,12331333133x25,33111223200222022023331000300230003222232223123313x28,31112320003220322333100300023000322223222132331x210,3112232002322232231000100023000322223222122313x211,3132222002332232331003000032003220x25,322313x211,33133222233322333310003000230002200x28,33x211,33133322x35,23333100010000220002200x29,3x211,33133311331x37,100300002200022200x29,3x210,331131001121x36,1000302002200022220x26,313220x26,333x15,x05,1x35,100010200220000x25,0x25,1130x25,x35,1113x07,133310000100200x25,000x27,311200x25,1333112x06,2133331x05,300200x28,022223113200022223131112311322221131x06,1002200x212,3133200022223311113222213222213x06,100022000x210,11332x05,2233331000x25,3231110000300300x25,0022223223113322x06,23332x06,2213311110000101000x211,3210013322000022332000111322233111x06,10000x211,310000113x26,313200031112221313x08,10000x210,1x05,1313111330113000010122311x011,1300x29,1x06,131x08,11x05,112331x014,100x27,31x07,31x09,110000213333x015,130x25,1330002000133x09,1100223313x018,12231101002220311310011x05,1313223131x012,301013033100010222001213311321x05,1311113323x09,30310100003000302220000131201200100001210311321x010,33x06,3x012,12101201110100030100311021x029,101000101001x05,1x05,31021x014,2222x010,3030003001x014,31003x012,222x013,1x05,103x015,3101x09,x25,x021,1x017,3101x053,3101x053,3113x053,311x054,310",
                        "ZAPDOSFront": "p[1,2,3,4]x075,1x054,121x053,121x042,11x08,1221x013,31x027,12100001001221x012,103x027,12210010101221x011,103x029,1221030012221x010,101x016,311x011,1222111012221x09,101x015,31221x011,1220013001221x08,1003x013,312221x013,1x05,100121x07,1001x012,3100021x014,1x05,300121x06,10023x010,31000021x016,1x05,10011x05,10021x09,31x05,21x013,33001x05,100010000100023x06,311x06,21x014,3113100011030010001000210003111x08,21x016,31111010011002101000231111x011,21x014,x18,310021002210002230002x15,3000021x015,122211113312221003x06,223112222300002100331113x09,1x26,111122100300022311222001300002x17,3x012,10022221231221000231122220013x05,2x16,3x015,10000221311212221132220013x06,2x15,3x018,10000221311222311122211x07,211113x021,10000221111230011200001x05,2x112,3x015,10002211121110122x05,13x06,x211,13x012,31100013100211122111x05,1x08,x25,311x012,3x15,00113000212222111130001x08,2311x016,3111130210002331112212223113300002311100x15,x012,113000230003131221121x29,3x111,x012,11x05,21000313312222132200023x112,x012,110000222230021131x27,x06,x25,3x15,x013,1101x26,100211131x25,3x012,2222311113x010,1001221113003112100022223x015,x26,33x09,1003100100211021010022213x013,2311113x012,1010013021010101210221213x06,x18,x017,12210100100321010212210113x05,2x16,x019,12103030030210010122101113x05,31111x013,11x05,12210210010100010122101001300002x15,x011,1001100001212100312110001012101000130002103111x011,110211000121000x16,0010110210000132021000311x012,3122110121001221113123103031x05,132221x019,1122121211021113012310321x07,13221x021,12221210010000112210221x08,1321x022,31222201000010322210111x08,1331x023,1221100001012222101121x08,131x024,1213000100123221011221x08,11x024,32210010013212100131201x08,3x025,1210100112212101221101x034,10110011121110011211001x033,10100111321120111230101x032,3010130110111231111010101x031,1011003030x19,030101x032,1100003010121210101010101x037,1030121210101010011x036,10100323230300101x039,303000101x05,303x040,3x013,3x023,",
                        "ARTICUNOFront": "p[1,2,3,4]1111x046,3x16,2001x043,11x05,112201x041,11x07,1122201x038,11x09,1012201x036,11x011,30122201x033,11x011,1300012201x031,110022x07,1300011112201x018,3111330000110022x07,31x05,10032201x016,11x05,300110032x07,311113000100232201001113x07,31x06,300100232x06,3112000010010022320100100013003112x05,13001021320002211x09,100122232201013200011110000311000102132x016,10000122220010011200033223x15,000101332022x012,100001112223010011120003111200001110013222332x06,1111300001001122100100111300100031200021021322322200031111x07,10000323201001111301110003x15,0133332220033x05,1x06,122000221001311310313010131000101333222x011,1x06,1122202320013330012111121000010133222x013,1x07,1122221213300023000023000030213223x013,1x07,1001222211000211200022100001013333x06,33x16,x07,1200002223x16,3222213x05,1013332222x05,31x012,12220233233331133331x06,300133222x09,1x012,1110023322331322233x06,1021322x012,3x012,10000233231330221x06,300213222200012200001x011,1x05,233331200021x06,100133332200001322221x011,122102223112000021x05,1002133322x06,131111x012,11002331233x05,211301002133222x08,1x017,1033313300220000223100012222000013220003x017,1121320002220002210002202x05,22132222113x016,121320002230000300022x05,x26,13222133113x013,113200002230003x011,1x25,x15,x36,1x012,13220002213x011,20020122221000011332331x011,13200002213x09,2221222212221x06,1222333x06,31001320002213x09,232221222x15,x07,120231x05,10010012202213x010,2322221111x012,12023300010000101322213x09,222332221x015,3222310001x05,111322132x05,x25,3333111x016,10223303x07,1111231323x15,x38,x018,10222101x08,133x15,x27,311331x019,103021012x07,31331122x010,111x019,103023312x08,311222x014,13x017,1030321122x09,31220003x15,3x06,13x015,101032113222x09,31113x07,111300001x013,3321032101x212,x05,x25,x06,1110013x011,12210121013x225,x05,110013x08,1323201310013333x26,333x18,33322220000110011300031322121333000311x37,1112x06,2x15,33222000110001110222212131x07,3x16,2x013,2211133222001120022233122133x010,112x019,21133222001133331122131x010,32x010,2x16,220000211333222231112221333x010,1x09,211x06,11122000011113x27,13331x010,3x09,21x011,112222001113x15,33331x011,1x07,211x014,113222000x27,313x011,3x07,21x019,3113x26,1113x013,100021113x023,3111133x017,11113x045,",
                        "SNORLAXFront": "p[1,2,3,4]x086,3x054,113x036,1x015,31111x034,103x014,111131x032,10010013x09,11113331x030,120010101x08,3111133331x028,1200211001x08,1111x36,12x025,1333211000100012003x111,332x021,31x06,3332103101001111322223x15,32x018,12x09,2111002101132x08,2x15,3x016,32x011,2300031122200001320000x16,2x014,1x013,2100111132x06,130003x16,2x012,1200023332x06,302x16,2x07,1002x16,32x010,31000x36,2x07,3x17,3x07,102x18,33322200001300233332232x05,3x110,00012000211333x111,001200x35,223300002x112,01010003200023x18,31001200x39,00002x110,021331x06,10000x16,3130012002x37,200002133x18,0100212x05,100031111331000120002x35,20002211113x15,021320021231100300211133130001320022333200222311132230011010030021101001002113331000021x214,1111222210121x05,202313000300313313x05,13x212,31111322221202x06,2003000010021331x07,13x29,3x17,320222x09,302000030021313x07,311322223x111,2002x011,3x08,2131x07,213x118,2x015,3x06,22113x07,31133x116,x016,32x05,2311x08,x15,3333x112,x017,3000022312x08,x120,3x017,1200222132x08,x120,3x017,3122223113x08,x120,2x017,21322212113x07,x120,2x017,21322310003x07,x119,32x017,2313310111x08,x119,22x017,2313112011x08,3x117,3222x016,2311211201x08,2x114,3003222x016,23113x15,x09,x112,x05,12222x014,22x19,x09,x19,323300021x25,x013,23x18,3x09,x17,3200023003111132x013,23x18,2x09,3111132x07,3211320122x011,22x18,3x010,23132x010,33200213222x08,222x16,32x012,3322x011,2000111x25,00002222311132x015,32200002332x05,20311113x211,13x019,122000x36,000032x18,3x26,3112x018,322000233322320002x111,x35,113x019,1220003333223300023x05,x112,2x019,122000x38,000223002x112,3x020,1222002x36,200222303x112,3x021,1222000x36,000223x114,3x022,322200002332000222x113,32x023,21222002222002222x112,32x026,1x213,3x110,32x029,21x211,x18,332x033,231x27,11x35,22x039,23x16,32x048,x26,x041,",
                        "AERODACTYLFront": "p[1,2,3,4]x0345,1x054,121x020,x19,x023,1221x021,1x25,33x023,12231x021,12232221111x018,132221x022,122311333311x016,1222231x022,1210011133311x013,13x25,1x023,1x06,113331x012,1x26,31x031,12331x011,1x27,31x030,12331x010,13x28,1x021,1x06,112231x011,13x29,1x019,10100111222331x011,1x25,0322221x017,100111x25,331x011,12222023x26,11x010,x15,2221332222331x012,1120023x29,x17,01100012223332222331x012,1120023x211,333100100x212,3331x012,1221023x211,33311002133x29,33311x012,123121312231122223331101022313x28,3311x014,13121121131021223331002122333x210,1x017,1210121011022133310000x216,1x017,1100010001022313100x26,11x211,31x026,102131102222311001x210,31x026,102212022231002231x210,31x026,11000031110022231x210,331x025,1000x210,311x211,31x025,10000x29,313x211,331x025,100x26,1222313x211,3331x020,31100122220221122313x210,333310011x016,300011022300010012133x27,1113333101331x015,1x06,223001100121333x29,1131113331x014,300003132221101002213333x29,311133131x014,1200013x26,33332221313x211,31113331x012,3x221,1013x213,3x18,x08,1x26,x35,x25,3222210013x216,3131x09,1222333x17,22212222100013x216,11x011,133x18,33111222231000013x215,31x011,131000101x35,122223310000133x215,1x012,10001113331112222331x05,133x215,1x015,1013333101222231x06,133x211,032231x013,111x36,1222311x07,13x211,0322221x012,101333311122211x09,1x211,03x25,31x08,10111x35,101221x05,110001x26,32222033x26,31x06,101011x36,1221x05,12311132222332220033x28,31x05,100113333111121x05,1211112x35,22000333x29,331x05,10113333101223x05,11012313330000x35,x210,333100001111333311221x08,12113111x38,x29,x36,10003221333101223x07,12123100011x39,222x310,100012211101221x08,11211x06,111x320,10003122112223x010,1x011,111x315,11x06,3122213x026,1111x39,11x010,311x032,x19,x05,",
                        "KABUTOPSFront": "p[1,2,3,4]x054,113x030,111x012,12013x026,11321x012,3000213x06,233x15,32x06,1132221x012,22002221300030x27,331000113222231x013,100x25,31300x28,331113x26,11x013,100x27,300x29,3133x27,13x013,300x27,300x29,313x28,13x013,320x27,300x29,313x27,310011x010,210x27,300x29,13x28,1101001x010,100x26,30x29,313x28,13200021x09,300x26,30x29,313x28,10100021x09,320x25,023x29,310x27,3131000023x08,21022223023x29,1203x26,1110000323x09,1002223003x28,31201x26,1130000321x09,3202223011x28,31101x26,1100100321x09,2100223011x28,31101x25,1130310032100001100003202223023x27,1201x25,31120310032100030010000120222303x26,31033x25,1110101003230030001x05,10022231x26,313322223122121010022300100001x05,1102222302222133222311333310300321002000300100001311222302222122231133311100100323003000330310013333112232223331110x15,000300021000100032313101333102111333x110,x05,30032300010022213001333110x25,x15,22311x07,10001000010032210301333111022223022223113x06,300023000010032300113331011311112x18,32x05,10021x05,1002210012233103110222230222231132000010023x05,30022100012310311132223102223x15,32030021x06,20022300012313x18,22x17,3x05,10023x07,1022030001100003311302233110211130210221x08,102201x07,33x15,3223213202333100213x09,302201x05,31002231112331113233110211x012,1222300031022x35,1123211133311113331x011,32220301022333311121121120011x37,1x012,122010133331110233111132000011133313x012,32201001111x06,2x15,320000131111x014,12203012312x06,23113332001333313x014,33201001333x06,211120000x15,3x017,1320101331x07,1110000133321132x016,312011331x07,3130002311333311113x015,1100131x07,212x05,2311333312012x015,1120132x06,3x08,23111021132x010,231113311003x06,2x010,231001x013,1003101331111x019,112x012,2311000111132x038,311132x082,",
                        "KABUTOFront": "p[1,2,3,4]x0141,11100x17,x025,11133111313131311x021,11333113331313131311x018,1133331x38,1313131x016,11x38,22x38,13131x014,1x38,x28,x35,13311x012,1x37,x213,33331331x010,1x36,x218,31331x09,1x36,x219,13331x08,1x36,x220,333321x06,1x36,x223,3321x06,1x35,x224,3321x05,1x35,x225,3321x05,1333113x224,3321x05,1331011x224,3301001113333113x224,300101021x35,x28,00x217,01001221x35,x27,0000x216,010012213333x28,0000x215,0010122212333x29,00233x213,0100120211233x211,3113x211,00100120211233x210,310113x210,01000120210123x211,3113x210,0010001222101223x211,33x210,001x05,1021001023x221,001x06,122100010233x218,0011x07,122100010023x215,0001201x06,1221000011000x211,0000112021x07,1221x05,110000x25,x05,11220021x08,111x07,111x08,1111220021x022,x111,220021x031,12200221x031,12202211x030,11200211x031,1220011x033,x15,x054,",
                        "OMASTARFront": "p[1,2,3,4]x026,11x045,1001x036,231x05,12201x06,11x027,3001000013220313001021x026,1000103131333122110221x026,1200012203111330031121x026,1100001220330033003211x025,321200001200030030003213x023,32013200012000030030032313x021,120001320012330003030032321x020,32000013331200030032322323213x011,33x06,12333323112x05,3223323232233x010,30010000323x05,2223330000323323232231x010,3000100013x012,3002233232222321x010,10000103210011x09,3222x35,2232213x09,100001012001001333x06,323211113222321x09,1x05,110231000120333002233122231333221x09,130002300001200012000322221232232122231x010,10020100021320001200032221223133213321x010,10202122021332001200023213331313212231x010,12020122331333203300222312212313213331x010,12222133222133313233222312213313313313x08,301322231111331113323111133231333113331x08,1100122333122133332231122221333111x35,1x07,1010012233123021x26,1203022131311x35,1x06,300100122331010013222231001000113333133313x06,1001301323310100113333110010001x36,1331x07,102210012233130x18,3103001x38,131x07,122221112223311x310,1111333322223313x07,1x25,3132223333x19,x36,x27,31x09,1222333122233122211112222133x210,31x09,113333122233200021120002313x210,31x08,1001131122231200021100002333322223x25,1x07,100010111322311200211000223113222313222211x06,1022101111223x18,02231111322231322221100010012222133112231303x18,3331322313020231100131001222233112223200031120022333222310202313210131000112233112223120031120022312222313000132211131x05,111101222231202112022313x25,31300212221131x010,1x25,312231322313x27,3x15,22213310000111001x27,3133113113x29,311133223310000122211x29,3x15,3333x29,3111333313100013x212,x312,x28,33x16,331000013x210,x35,x18,3x27,3311x36,1x05,1333x26,333111x07,213222233331x36,1x07,1x38,111x010,1x39,10133331x09,13333111x013,1x37,110003113x011,1111x017,x17,x013,",
                        "OMANYTEFront": "p[1,2,3,4]x0260,3x15,3x029,3113330003011x026,1220000330030011x023,13333x05,30300031x021,12000033300030300301x019,12x07,2300323023033x017,12x36,000230233230031x016,323x06,3300232332322323x015,13x08,233232323223201x015,30x36,000223233111322333x013,323x06,330002331223133221x013,13x09,3322213203122021x013,12x09,2232312013210031x013,12x38,00223120331213321x013,13x08,33223120122012233x013,12x08,2233112010313201x014,12x06,x26,312031132331x014,12x38,x25,31032230223x015,3x18,322223111320331x016,x111,312331333321x017,122x16,2213133313311x017,120301111030211333311x017,11100101331010012x15,x017,10001030322303012x05,1x016,1000011132002311222200001x015,1001022220000x25,11220001x014,12021x011,2222110021x015,1221x012,221200221x016,11021002100210212122221x017,1021021101102102121111x017,1021021x05,1021021221x019,11011x07,11011011x093,",
                        "PORYGONFront": "p[1,2,3,4]x0130,13x045,301x024,2x16,332x011,101x022,233x28,12x010,101x022,333x28,312x08,3021x021,323x29,3312x07,1021x020,223x210,32312x06,1031x020,323x010,222312000030031x019,32333x08,3112231000010031x018,2330001x06,30001221200010011x018,33x05,300003x05,123100300211x018,130011030000101100132100100211x018,130011030000301100322100100311x018,1230003x06,30001222103000313x018,312113x07,23112222101000313x018,2122x08,220002223121002113x019,122x07,2220002221311222113x019,3222000x26,0022231333112112x019,21220x18,0022213330031112x020,1211x07,211221133x05,31x021,112x08,223321333x05,231x020,312x08,223331323000022212x018,3012x07,2223313222300022231x017,23012x07,22333132223000222212x016,30012x07,223313x25,30x25,31x015,3100232x06,2233132222330x26,11x014,1210012x06,22313222x35,x25,x17,32x08,1221012x06,233132x36,232221322x16,32x05,32222113x05,2231x39,2232213x25,11113200003x25,13200002231x39,222321x27,011120003x27,120000231x310,222231x27,0331200021x27,12223311x310,222313x27,03312000013x25,3x19,x39,233313x27,3331x05,213222x311,11x36,233331x27,03313x05,3313332222x36,2231x38,231x27,033130000232313x214,331x35,2231x27,033120000322231x213,3333111320213x27,03132000232222313x25,x36,2222313200313x27,331300003x27,1x35,x26,333313200031x27,0331200023x25,11113222x39,132000031x27,031320003133x18,x311,132x05,2x18,33120000x37,11112x111,32x07,23x17,3120000x38,13200x210,x010,23x17,2x06,x38,2x024,23x15,32x08,x26,x027,x26,x053,",
                        "FLAREONFront": "p[1,2,3,4]x065,x17,00001111x031,11x07,111122221x025,1110100011x05,1222211x025,100010011122200111221x012,1x013,100010011132222122221x012,101111x09,1000103113222000122101x06,100001x05,1x07,10001001112222111222101x05,101011x06,1x05,1100001001132211x25,101210001100100003100100001x05,100311221x25,1111221001x07,311201x05,1x05,10011323122111000022101x05,31111320100001x06,100112312211000022211100023x16,201x05,1x06,1021133121x05,2221110023x17,220100001x07,122113311x06,222101023x17,2200100001x07,122113111x06,22311002x17,22001x05,1x08,13313111x06,22111023x16,22001x06,12x07,13331111x05,22211002x16,22001x07,12x07,213113110022223311003x15,22221x08,12x06,221113222122233311102x15,22221x010,12x05,22113x25,11333112333111322211x011,122000221311x27,1112223331122211x012,10122202133111x26,00x25,3332221111x011,12013222131010122220022111133331131221x09,122x05,13310111x26,x16,3333133312211x07,12220000132102112222311011133331x35,12001x06,1x25,0012210x27,3x15,x35,1x35,100001x05,1x26,1222210x27,3111x35,12223333100001000013x25,1222210x211,33331x26,33100001x05,1322221x25,10211x26,33331x28,3100001x05,133222120022211x25,1333311x29,3100001x06,133331x05,2221133133111x211,100001x07,133331x010,x15,2x05,x28,10001x09,133331x022,x25,300001x010,13331x023,2222100001x011,13121x022,2223100001x012,12221x022,2312x05,1x010,1022231x021,31122x05,1x07,1100022331x018,3111122200021x06,1x05,2223313x014,3x15,3x27,1x05,1x06,222311113x06,3x17,3111x27,1x05,1x08,222x112,22233313311x26,1x06,101x06,2x16,333111x26,331331x25,11x07,11000100x15,3x06,31002222331213x15,x010,x17,x012,1000022221221x035,1x05,222121x035,1x07,2113x036,100100101x040,x17,x020,",
                        "JOLTEONFront": "p[1,2,3,4]x0205,1x046,11x030,11x013,131x029,121x012,1131x013,1111311x08,121x013,1131x011,11333311x08,1221x012,113310001x06,122231113x07,1221x013,11311001100001122211113x05,1012201x013,1131111310001222x15,3x05,1012201x014,x16,331001222111132x05,1012201000011x09,11312231231223x17,000010122001001101x09,131223322132311113x06,10122001011001x09,13x28,1223x19,312122000112001x010,3x29,322331113321322122000122001x010,1x214,13313233221x25,1220001x07,11013x29,3132313x17,x25,3220001x08,121110x26,311132331333222331113220001x09,302311x25,101112231332222x07,1222x16,x06,3233122223111132331322x07,311x26,000100111133123222233132223331x05,21133x25,0000130000100231x212,311112133133332222000313x07,113213213x27,311x25,313332222000313x010,10231x26,12231x28,313x25,3313x011,100022132221131120000x26,13x25,11x011,100x25,01111300022x07,2221x27,1x09,102222113x010,x25,x06,21x27,1x07,10231110100200002200x27,111002100022221x06,3130000100220000220002221222x17,00002221x011,1002230000221002221112x15,31110002221x09,1022211000023110022x18,x35,11002221x07,10221111300023111022x17,x36,111132221x05,x110,0022x15,22x17,x37,110013221x09,x15,3023x16,2x18,x36,1x05,1321x07,113311102x16,0x16,30x37,1x07,13x07,13321013213311000x15,000133331x016,10222100131333100011113000122331x015,100021000113331000311110000122231x014,1000221001323331000x15,0000322221x014,3032210001223310003111130003000221x015,311300012023310003111300001000023x021,3000231x013,330301x022,1000231x014,3113x023,330321x043,3113x080,",
                        "VAPOREONFront": "p[1,2,3,4]x0198,11x045,1331x043,12331x020,11x020,12221x012,11x07,1311x018,12221x012,121x06,11311x016,10222100111x07,1211x05,11321x016,102221113311x06,122110000111221x011,100010222313331x07,122211000111231x09,1131001022221331x08,1202311000112321x06,11332100102222321x010,102211100113231x05,113322100100x25,1x010,10223x16,23311101111332010001022221x012,102x17,3x19,3320210001002221x012,1211113311133x16,332001x05,100211x012,1111332211322311113220001x06,100231x09,11311132221322221313200001x07,1200231x07,110001x25,1x27,3332211x08,12002231x06,100031x212,333x15,x08,12000223110001100231213222200211331133331x08,120002333x15,02331211222002111331x36,1x07,12000223331331233312103220210113313322221x08,120002x35,10002212213222311133132000221x08,120000232331x05,21x210,33132000021x09,12000122231x06,1x210,3122332231x011,13221022221x05,212213221311000223313x012,131000222310000231x25,1132x05,221x014,11000022231002233311113331x06,23x015,10000222312222331000023331x05,1x016,1x05,2233122233x05,22333300021x016,3x05,222331332x06,2223333221x018,1000022233311x06,22223x15,2x018,10000223x16,300002223111311x018,30000223x117,33331x016,111000223x110,x36,1333231x015,100100022110x16,001x36,13221x015,1201000221000x16,00122x35,121x016,10200022210000x15,000122223311x018,130002210000x16,000010022221x019,10002210000x16,x05,10002221x018,100021x05,x17,0001020002221x017,100001x06,x16,30010010000221x016,100001x08,x16,001111x05,21x015,3x05,1x08,x16,x05,1x06,1x015,101011x09,31113x06,1010101x016,3113x022,31113x05,",
                        "EEVEEFront": "p[1,2,3,4]x0109,11x011,1111x022,1213x010,122211x018,112311x010,1220031x015,11222111x010,132203311x011,11222231110001111000313222333x16,30011x25,311110110022100011322333x27,313322233x16,0000210000311233200x28,x36,x15,x06,21x05,1133200x210,3333x15,2x05,21x06,313200x26,0000233x16,3x05,221x07,111300222203132223x15,322000221x09,11230222231203223311113x26,31x09,1103222231130332331113332222331x08,3311322223111132233111133322331x09,1033x27,1132223x16,x36,1x09,3022231x29,33x17,x35,1x010,30x25,1x26,3313111331x35,1x09,13122311x26,31131311331x35,1x09,10033x27,3113333111333133331x08,1x05,3x15,3222x35,1333313331x09,1x012,222233331333313331x09,10002x09,2223333133331331x010,10023x07,202221331x35,131x012,123x08,23222131x37,1x013,123x07,223221311x37,1x014,11x06,22322311311x36,1x016,100022333111331111223331x017,13133331x35,1001322231x017,3221111x35,10000122221x018,1023102333310000122221x018,10013222331x05,122221x019,311x25,3100001x25,1x021,3022221x05,1002221x020,1022221x06,130301x020,1002223x08,1111x021,3002221x033,103231x035,3113x024,",
                        "DITTOFront": "p[1,2,3,4]x0112,111x036,12001x029,11100032001x021,1110000120010012221x020,12001111220010132201x020,1200x29,1332201x016,11101x213,332201x015,13201x27,1x26,322231x015,13220x211,122322231x015,13322221x26,31223222313x016,13x29,11x28,312x016,13x26,113x210,31x017,13222113x212,313x017,313x217,312x018,13x216,331x019,13x215,33312x017,13x215,333313x017,13x215,x35,1x016,30x216,x35,13x014,310x217,x35,1x012,3110x218,3311113x09,21130x218,x18,x08,31300x219,003113013x07,1300x222,0000113x07,1330x212,3333x29,0031x07,31x35,x27,333x210,3300311x07,x110,3333x29,3331100311x08,23x18,33332222333x17,3111x019,111x013,3113x022,23x113,3x0324,",
                        "LAPRASFront": "p[1,2,3,4]x06,33x05,333x045,3001003300211x05,311x035,10021100022221003100011x034,10023112222111100022001x033,10022333x27,00112201x034,10022333x27,10012231x033,1302223x27,120032231x033,31x212,1x25,331x032,301x212,13223331x032,30020x211,31x35,1x031,300002022002222322313331x032,10002022000311332222311x032,10002022203112011x25,1x032,10002020222101003x26,1x032,10000x25,31111x28,1x031,3000x214,022331x032,100033x211,1223331x032,10021x29,3112223331x033,1x28,3111000032231000033x029,11331113x06,11222210001001x030,11x07,11333222230001001x032,3x16,333322221000130231x036,100x27,1000100331x036,3000x25,31033002331x036,10000222210101223331x035,3x05,2222112013332221x034,1x05,222212222132222311x031,1x06,22221332222322200031x029,3x06,222231333x25,0200001311x024,1x06,x25,311333322220202021331x023,1x06,2332223111333323222020133100011x017,3x07,2333222x15,33323x26,131011003x016,1x07,223322223111133323x26,11100021x015,3x08,x29,33111333232323200002231x015,1x08,x26,3322233133232323230022231x016,1x07,x26,33332222313323331322223331x015,3x08,x27,333x25,1x35,1012223331x016,1x08,x28,3x27,133110022233331x016,1x09,x215,13320002x37,1x015,1x09,x215,1333222333111331x015,3x09,x26,31x27,31x36,1132311x017,1x09,2222300x28,1x35,133332231x015,31x09,2223000022332223133312233332231x013,3231x09,2210000223332222111222233222231x011,32231x010,21000022233x28,333x27,1x010,1022231x08,20230000x29,112333x28,3x08,102222331000020002010000x210,31x29,331x08,30x25,331002020202010000x211,31x27,331x07,10x27,331102020202210000x25,33322221x27,331x06,10x28,33111202020221300002222333222211x28,1000030x27,3311100113x26,11x05,x210,31x28,10001x27,111x08,3111123311x05,x210,3220x25,10012221111x016,3x16,30000x29,132002222100111x028,113x05,x25,31110022203x035,11113000011000110011x041,3111x06,311000",
                        "GYARADOSFront": "p[1,2,3,4]x029,1x010,111x029,33x010,301x05,1113001x028,3001x08,100100113x05,1x029,1001x08,300113x05,221x030,1021x07,10022x05,2221x030,3002100001110002000x25,1111x08,31x013,300003022100010030020x26,0202001x06,1001x011,3010001023000102100202211122202021x06,10001x011,301000102101112230211133321202031x05,310001x012,1031010221100011011333x25,12011000031000221x012,1031010221x06,1133x28,113110310002221x05,11x06,1223130231x06,221x29,133331100022221x05,1311x05,3231222310000x25,1x27,021333310x26,11x05,1331100012312231000x28,1x25,0002133331x25,020011000133310012132231x211,12222x05,213331222202020001001033310121002312222x111,2x06,213331220202000100001003311310023x15,x011,1x27,13331202020111x05,10003113300232220000x35,1111x28,1332122021101x06,322021010002x38,x17,22223333113322312110101x05,10022211100223333x15,32222122333111333223211000101x05,100021111002331113001122220133x15,3332222311x05,1x06,10011221221111x05,1322000x17,3332232310100001x08,110132211222101103122000111313113332323210100001x08,1100013221122x16,32211113131313333231101x05,1x08,3211000111222133113222211113131x36,11001x05,1x07,1010211000011221x27,0000x15,333x15,011002111x08,1100211110001x27,x07,2222x17,0x15,2211x09,130x17,003222200300x27,313331111x25,1121111x07,10x15,30101220033x28,3331x36,11122233111001x06,11311113001030033x25,x17,00002333321332110001x06,1223x15,0010103322231102020202x06,1113311x05,1x06,121011113013103332222331020202x06,x16,x07,1x05,1210311122133121322211113202x09,1133311x07,100001210111x26,3121211x25,033x08,11x36,1000222200032110113x26,31211012202022233x06,11333203122233110001210111x27,3121200112020222230111131332000312001110001210013x27,12120100012020202231333x15,00031110031000101101332122212211010000120202211311313333103331113310011012113330133121010100001020201x35,13332331331x35,101331113013301312210101000301000212333313320231331333310323110130011001121001210001010001223331132000331122333101210101010011112210012100300100012233311310003310123311010110100031002211000321001000100123331311310333101111310100101x05,31110000121000110101122111311231333100123331001001x014,1010030010x15,33331102313310112331000011x015,101001001010223333113003131013122131x020,101031001010022333110023131130322131x021,301301101000223113312331132003221031x020,100111010002111333313331120012210031x021,11000121111333133311311300030210003x022,1111000x25,3313x15,3200030210003x024,1x06,2222313111013200102100003x024,3x06,2222331100011211302110003x025,1000022223311x06,101212101101x026,31x25,111x011,112100101x028,33111x016,1000010",
                        "MAGIKARPFront": "p[1,2,3,4]x06,113x015,1x028,100013x012,101x027,1322001x011,301x05,311x020,1112201x09,100100001001x020,12212221x06,30300100130021x020,122212223000030100010100021x021,12020122100003x05,21000221x021,10202012210001x09,221x022,30020212210001x08,2221x021,13320202132101111x06,221x022,100330201321100221x07,1x022,100003021323133221x08,1x021,1x05,3223100x25,11x06,211x019,3x06,310000x27,10000221311x016,1x06,3x05,x29,10022133321x015,1x05,3x06,x210,12211123321x014,100003x06,222311x25,121000123221x013,300001x05,22210001x25,100001223221x011,100003x05,2223x05,32222310023222323x011,100001000x25,1x05,1x25,122221223221x010,10031220x26,100010032222112221222323x09,1333012113x26,x06,122223122212223221x08,10000130001322221x05,1x25,122212223223x08,30003x07,12223x05,1x25,1321122223221x07,30001x08,3222100003x25,1110012223221x06,30001103113000122221001x26,11002212232x16,0030132x17,0003222233x28,12222x15,x26,111322100x15,2001x214,12111x25,x16,0122110003x15,00122113x29,11222111130000100011x06,x15,001230013x210,113x08,1x011,1111310012211001x25,3313x010,1x011,101133100122221003222333x07,233331x011,1011331001x25,101222331002333200001x011,10111331003x26,1032223133x09,1x08,111103101100133x25,101x25,1x09,1x07,112310011x05,123x25,30122211133x07,1x06,1221110122100012223x25,10122131003320001x08,1122101222111x25,3322210121333100003301x010,11101x35,1x27,3321012113331000031x014,101002221x25,33233031001333100001x014,1010002331133332222101000133110001x014,3010033002211x25,1101300011001001x013,101013x05,210x15,0010133110100101x010,11100300110000100001000010011010010101x09,300013x05,1101x05,1x05,110010002101x011,113x09,1x06,100300011101001x033,10011100100011x035,1100011x019,",
                        "TAUROSFront": "p[1,2,3,4]x010,111x052,10021x013,x18,x029,100133100x16,0011333x19,x025,1010113112x35,11211333111x35,111x022,12100012221113122210111x311,11x019,x15,01221100012222101x315,11x015,1302233112131001222211001x37,x16,3331x013,10001113312133112222131000131113122332011331x012,30010121112113320221333100013221x25,32001331x010,100100123122101202213333120221201x25,11000131x010,1010001212210030021x35,2122210012222100100111x06,10001210000102100120221333322122310010022120120012100031100012100010010001202213332233133300110022112200101113003000123101001113032221333222333112210210x27,010100001x05,133100x16,22221333202x35,11113100222200110122223x06,1310100111122221333202x35,1311121022220111012213x08,100100111322213333202x36,1311010222011121113x010,1213001113222133232022x35,133311322201311331x011,1211303113222132332002233331x35,x26,313331x09,3113111001132221322320022x35,133x28,133331x08,1111311100113322132233200223333133x28,133331x07,3x15,3110031132213223322202x35,133312223213331x08,x16,31300031332132233322022x35,13331221313331x08,x16,31x05,3333133233332202x36,1x36,132331x07,3x17,31x05,133313223333222x37,x16,322331x07,x110,x05,1133133223333222x313,2331x08,x15,00111x06,113133323133322x311,223331x08,11130031113x05,111313333133332x38,22223331x09,110000x15,x05,1133113331x35,23333x25,133311x09,10000x16,x05,1133311331x35,233322223313311x011,100x17,x05,133331113313333233202333x16,x013,3x17,x05,133331111311x35,2022333x15,x014,x18,x06,13321131311x35,202333x16,x013,3x17,3x06,132213331111333322333113111x014,x18,x07,132213333111333223331133311x014,x17,3x08,1221x35,1133323331133331x015,x16,3x09,122313223311332331x35,1x016,3x15,x010,12221220233133331x36,1x017,x15,x010,13322120021131113332221x018,3111x011,1333221111001113322221x020,113x011,1x35,1x05,113322221x021,313x010,11x35,1x05,13x26,1x022,31x010,11x35,1x05,1x26,1x025,3x09,1113331x06,1222021x036,3x15,3x05,3222021x038,31113x06,122201x049,3222021x049,120001x050,100021x049,320021x050,12221x050,311221x050,x16,x050,x16,3x049,3111311x050,3x15,x022,",
                        "PINSIRFront": "p[1,2,3,4]x083,11x052,11021x050,100221x049,100021x046,1001000231x045,101100002131x021,31x021,10021002211x021,3003x021,122120231x022,1001x021,11122021x022,30001x021,10220221x022,10001x020,1x05,231x021,102001x016,11011x05,231x019,11102001x012,1101001021000021x019,3002120131x010,10013200121000021x020,13312011x010,3200113001120002211x018,10112001x011,12001133332000023131x016,100332003x011,122011131x06,231331x012,10100022001x012,13213111x07,21011x012,301000222001x011,1013113113x06,21x015,12010222001x010,110211131201x05,22x16,3x08,3133122220011x08,10023x17,001110221x06,113x05,13113222001331x06,1002331x05,10100212231x05,222110013333222201311x06,1002311x06,10012212231000x27,11x35,2220011x08,101111x08,10011223310x29,313333222201x010,110211x08,100022231221x27,1313333222001x011,10231x09,102223312201122233133133222001x013,1023100011100012233122211222201333132220011x013,1023311122210x16,x210,11333132200001x014,10231020022x15,x211,x37,120012201x013,102310200233101x28,1111x37,10001111x015,12110222333101x27,101111x36,1001x019,111002233331001x25,10221021x35,111x020,100022x35,1000122211211112133331100011x018,1022x35,100022111120210021333310111001011x015,11x36,1x27,3x16,2113331200100231001x016,11333121x27,10313111311112231002110023x017,111221x27,12210213333122333223110021x018,122331x25,33x15,x35,123331121110221x018,11331013333x15,2x35,1x35,x15,31231x017,100110001111x25,111331133331131131131x017,1000210000x27,3333111013311110213111x016,1000021000222x311,100x113,x015,100002221022331111222233131x06,x16,x016,110002223x16,22221111211231x027,11102223310000222233331112021x026,10001223333100222x37,1222131x025,100021x35,12222111233313322121x024,100002213333x15,333122133321021x024,10002233113110000333311333112221x024,11002333311100222333x16,33221x024,110211113111122333x17,313112111x021,10022100211000x15,00x18,22112211x018,100231002231x012,x15,3320012221x018,x110,x016,x111,x071,",
                        "MAGMARFront": "p[1,2,3,4]x065,1x045,1121x013,1x029,10021x011,1101x027,102221x010,10001x027,10211x011,100001x021,1x05,121x010,1001001x05,1x014,110100001221x07,11011021x05,10111x010,10101000102221100001x05,221x06,100011x07,10101001100222331111x06,21x08,110001x05,11110101000022311x09,2210031x06,1000100010013131x05,223x010,221003131x05,10201000101333310000223x011,221312310000110220100121333312000223x012,222123100001x25,1000122333312202233x011,2222131x05,12223210000123331132223122x08,x25,311x05,1223331x05,x16,013333132220000x26,33100011012233331x05,133310111331333x210,333101102101233331x05,13113100x15,3333x25,x36,11023100122331x07,133120010100111x311,11233100001131x09,111222213002103111x35,x16,x07,131x010,1122211000211x05,x17,0001x05,121x013,11100002221010013333112000010000131x013,10000x26,1111x35,122000021001331x014,1x26,112222x35,1222200221001331x015,x17,2211x35,11x29,11331x017,11211121x35,111x210,13331x016,30121122x19,x27,11113131x014,311001222x111,x25,13131101x014,10010021113x17,3312222111311001001x010,1000100x315,11221131110110101x09,10001002x35,2x310,x16,331331001x08,1x05,100233322x38,2333110013331001x09,1x05,100032223322323332221000122233111x09,1x06,1000x210,322213111122233311x010,12x05,10000x212,13x15,223111x011,12220022110000x29,13311110133101x011,11x25,33313000x26,11331111000111101x09,12311333311001132221113331111x08,11x08,12113x15,x07,111333311131x019,110012211x011,1111333221x021,10211x014,12111101x021,121x016,1010001x022,11x018,1x0212,",
                        "ELECTABUZZFront": "p[1,2,3,4]x0154,x16,x012,11x026,1122102211x05,1000121x025,1000021021210001310121x026,1012022122121001310121x07,11x016,1131122313313100121121x07,1001x014,11333133x16,001121321x05,111003x013,1111333x110,21232331001102113x013,12111x35,122311x28,33110031x015,1122233133312231x28,12210231x015,111122331111311121x26,11221231x016,x15,23311100013221122111222211x016,1222111331x05,3222112111x26,1x016,1222233331003132012x15,x27,31x015,122231333103222202121112331102221x015,12233x15,0122232012112311220222211x013,122333111311322233121231010002222331x08,110001331311333113x210,3333222233331x06,11110013113133331113x214,x37,1x06,1111001100101331311113221212223311x35,11x06,11331101000100x18,2112222331100x16,x07,133321x09,x17,0x18,3120x18,x05,133321x010,11113313132233311121111333110000133221x010,1322223x18,3x16,x36,1110133221x09,1322223x112,3311x35,22231111221x09,122223x111,x36,133x25,10111121x08,132223x19,x38,11x26,100x15,x09,12223x114,333113201132310x15,x09,1222x15,3x17,x35,13200211110x16,x09,122111132x113,3200221110013311x010,1x27,3x15,310231331322221300013221x010,13x26,x15,310021323113331300013221x012,1x25,311133310210023x15,0000111221x012,13222211133331221022133311100x16,x014,1332211x36,112221223x112,x015,13331x35,x15,21222133113332111x016,11x37,x18,22123111332211x016,1x39,133312221122111132211x017,123311x39,12211113311211x019,12233x115,3333x15,x014,x15,22231x06,3x19,33331111x012,11x28,331x09,3x15,33x25,111x09,1011x25,33331x014,13x29,1x07,101111x35,111x016,1132222x16,x06,11000x15,x021,x15,0001101x07,111x031,1110011000",
                        "JYNXFront": "p[1,2,3,4]x018,11100001111x035,112221011122211x031,110002221222x05,1x029,10023222122223200001x027,1002000223220000220001x025,300200x210,00020003x024,100002311232211320002001x023,3000023123131133132x06,3x022,1000021222313322312x06,1x021,3x05,31111323311112x07,3x020,1x05,3x15,2x16,2x07,1x019,3x05,21122x15,22112x08,133x016,1x05,2120021110013132x07,1113x015,1x05,3100101110100112x07,3113x010,33001x06,31100x15,001112x07,3113x09,311301x06,x16,000x16,3x06,31113x09,311301x06,x15,x05,x15,3x05,3111303x08,311131330000x15,01130x16,00003x17,33x07,3x16,30001211131123x16,0003x110,3x06,3x17,30012211132311002210003x16,01111300003x18,3001112x16,2x15,0003x16,30311300031113x15,30013310111121333310003x17,3033000011130x15,300102310110102331x05,311101113x05,3113x17,300102331201002331x06,3111031130000330111131130001223312012233310002000311301113x05,111131113000133331201x35,1000200031130311300003113221130000133312002133310000200031113033x05,33301211x05,111120110211110002300003113x012,1233020001222211110222100031x05,33x013,121003000x15,000011112002110002001x013,12120300211331020213312003110202001x013,12130200212231202013122021110203001x013,1212030031222102021212003111030301x015,121030031222122221212021311030301x05,11x08,121020021221x26,1200313100302011001121x08,121002032121x26,1202133100202130110221x08,111203032121x26,122313210202013200221x08,1222102022121x26,10213321030313022211x06,111202012220211x26,1003132100303132011x06,11x26,021220211x26,1021332102201332001x08,111202201x25,122323210313221230213220201x010,122002122221232323121332122011320x25,1x010,100220122213232321313221211332222022221x09,10210221221132323211322113322020222022211x06,10210222212112323232132133x26,x16,2221x05,122x16,221121x35,133x27,021x06,1111x05,1111x05,1221111333x110,2221x025,111000111x09,1111x012,",
                        "SCYTHERFront": "p[1,2,3,4]x031,11x037,11x05,11x07,122100033x030,13310003001x05,12213003003x029,331010320021000012103030003x028,1210001x25,100012210330003x028,12210001x25,100012100030003x027,13310000132211100122100030003x012,31111x08,113310000133313310012100003003x09,311122221x06,31021100002x15,3310112100003003x07,312222x15,x05,30011200002010001322112210000303x06,312211132003x06,1012x05,200010001221121x05,30300003122132x06,3x05,323200002200001000121112100003030000120132x07,3x06,12100002x06,1000113122100003100012001x010,3x05,12100022x05,11000113312100003x15,2213x010,3x06,121002x05,11x05,1013131000313331001x011,30300001230020000110001000101313100313331222x011,30030000121002000100001010102131310013331221x010,33003x05,121020001x05,1010102211110133313212x08,33000030000321002001x06,123100231111311113312x06,333x05,3x05,12102001x07,12310023x111,22200333x07,3x06,1310201x08,111002233x17,22212333222x05,3301100032300201x08,1230022233111x25,111x25,003333001331001210201x07,11230000x26,0002213122223333x05,10133101210201x05,11212x06,2220000211333x15,333x15,0013310131021x05,112123x05,x27,111x36,111333111210001321131201000010121230000x26,1133133331122211310210000122113121x05,10112300002002311333113331200222210021000012211312100001002103002200031x35,111331000022112231000012211331x05,100213002200311213331211112000021013310200120100131x05,1023110022001110133312221122002100133102001001001310000112331122220320103331122111x25,1000110020010010001x05,1033310x25,1200133313311113222331031100201201x09,10013100022211113323133111331x35,1111002001201x09,11101000022133x25,1131133331x36,110002001221x012,11000221332222311131333311113331110002001221x013,10023133223x16,2133x19,2210002003221x014,1x25,x19,310x17,32221100002000121x015,11331100x16,3101211132222311110002001201x016,110x19,2101x28,x35,10002001201x019,1211110131012200x26,333110002003201x020,13x15,3101200022223333101000201221x021,12111331001300222233331001002001321x022,1122210000132222x35,1001002001331x024,111x05,1x39,1000100200331x033,11x37,10000100201331x032,1221333311x05,10200131x030,11100222111x06,100200331x029,133310001x09,10020131x028,11x35,101x010,10200331x026,1332222333311x09,1020131x025,113x26,x35,1x08,1020131x025,101x35,11333311x08,102031x026,1021133102111101x08,12031x027,11100110221110021x06,12031x034,10210001011x06,3311x036,11000011x08,11x013,",
                        "MRMIMEFront": "p[1,2,3,4]x0297,x16,x06,x17,x05,x17,x015,x114,x07,x113,x013,x113,x011,x112,x011,x113,x013,x111,x011,x113,x013,x112,x09,11110000x15,x015,x15,000011x09,11x08,111000022000022000111x07,1x09,1x010,110002002002002001x019,1x010,11000210200210200101111x020,110001000020020020020021023311x016,11001001x05,22000022000212x35,1x011,11001033011x013,1033221x35,1x010,1001010330110233301x05,10333321x36,1x08,10330131001312x35,01000010333321x36,1x08,10330131001312x35,033111323333211331131x09,1000011221131x35,23x05,30332121312211x010,110x26,13113332100222002221222122001x08,11001x27,100112000x27,1122111220001x06,10011x27,003301111x25,111222100112200010000103300x27,003301000x15,x25,1033011211001000103301x27,11001x010,2222103301010010311001001012222113311x013,222100101033010001001100011113311x013,11112100101033010021x09,1111x013,113333112211000012211x011,1x014,13223101x26,011011x013,1111x010,13201001x27,10011x013,1002311x08,132103300x27,11001x012,10023331x07,133103300x27,003301x010,132233331x07,133310011x27,103301x010,1x38,1x06,133331133112222131001x07,x15,x38,1x07,1133331122111133111x07,100022111x36,1x08,11112211x35,1x010,1002111221133331x011,211x37,11x010,11122200021333x115,x36,1221x012,11112002111x010,3x110,222211x014,112002211x09,3x15,22221111221x015,3112222313x07,3x17,22212221x011,113000011023111x07,1111000x17,x011,111003x110,x07,31111x020,13x114,x08,x16,001x016,x113,3x010,11133111x018,3x17,3x014,x16,x08,",
                        "STARMIEFront": "p[1,2,3,4]x022,11x045,1111x043,102131x032,111x06,1002131x011,111x017,13121x05,10022131x08,11221x017,132121000100022131x06,1102221x017,1332121001002222131000110022231x017,1332212110002222131011002222331x017,1333221210011322213100x25,3311x017,133322310010213221313x25,33311x017,1333321000102132221313222333131x017,1333321003002233221313223333131x017,1333310001002213322131x36,131x013,33x17,0011100221113213111333131x010,311100001000131x09,21331000113131x09,1x08,12000103x16,0000110002x16,32x08,12x06,1120001x27,12x06,2211322221113x05,122220000112010x35,110120000221132x08,1100001x26,01101030222331201200021132x08,222100001x26,123x08,1212012002132x07,22211x05,1x25,1030023x15,2111201200213000022221112x06,12223103023x17,2111223200213x26,1312x08,133312103x19,222123200013x25,1312x010,111021011100x15,31112120001113221331x011,100021010100331113111212x06,111331x011,1000021011113333113111212x08,131x011,1112222101111333311311121x29,111x010,1031113212x15,33111311121x27,311131x08,102223112132x18,31333212222x16,3221x07,1x26,123112x16,3x15,23222313311322221x06,1x36,123111222233x15,2232023132131x25,1x06,1333310101013x15,3111021200313222131x25,1x06,1333100101013x15,3102120201322221313322221x06,131000010103x16,02120002132002131x35,21x07,11000100210x27,1222000132002213133311x09,10030022233x15,3x25,000130002131311x011,100122211x211,112200120023113x012,1000122x16,000222x15,220130002113x012,100011122233110022113333122130002131x012,100x26,333310022132223311130002131x012,10x26,3331111021111x25,3320000211x012,1x25,x19,02x16,x27,00021x014,x15,x06,1131113x16,x26,0021x026,1311113111001111222001x027,13333131x07,x15,x029,133131x043,1111x070,",
                        "STARYUFront": "p[1,2,3,4]x0210,1x046,1211x043,30231x043,3023331x041,1023331x041,10233331x039,100233331x039,1002233331x038,10002x35,11x06,x17,x023,100023333133100111x06,31x021,100002333113311132000022331x021,10000231102313322x05,33331x020,100x16,02311332x05,233311x020,1010000310223312200022333311x018,111130002230232331000213333131x013,x15,0223320x29,3100213133131x012,110000102233x05,3323223122131333131x011,1x07,3032003111033222333111313131x012,12x06,302203x15,03222110021131131x013,1x27,10003100111032000233131131x015,1x36,10031102111032002331313131x016,133331300310111330322233x17,x018,133130003113112303x29,111x019,11x05,3113332303223x27,331x019,1133300311133103x29,1111x020,11133003111103x28,111131x021,10120003330322322x18,331x021,120002000322202311131313131x021,11200x28,002213131313131x020,101210x25,32100021313333131x020,10010033x26,100011x36,131x018,102010231x25,101111x37,131x018,100102310x25,1000022x37,11x018,120123131122221x06,2223333111x017,1002311333x16,x08,2233311x017,300x36,1310000x15,x05,23311x016,1002x35,131x010,1111000011x016,100x35,111x015,1111x018,1023333111x038,10233311x041,13311x044,11x0130,",
                        "SEAKINGFront": "p[1,2,3,4]x071,313x052,10001x044,1100001x05,3x041,13203101x06,1x040,120000232x06,1x039,12000022120002303x05,313x031,32000023220002300100130001x029,122000221200002300013x06,3x028,320000232200023x013,300003113x018,3220020212220023x07,22200010031200013x016,1220020212220023x06,2333000111222x05,1x015,12200232122200023000023x05,1122201x06,1x014,1220023212222002300023000313223000030000303x013,323000233x25,02300230033220001000010000301x012,32230002301x25,0230233113222001002030000301x012,122230022301x26,3x18,32223022100001001x012,12223200223031223x113,32222320203001x012,12222320022323x15,33x111,321222210033x012,3x25,32222331111x39,x19,32212221x014,1x25,x35,111131100233x114,22231x014,3222x36,11113122231113x112,32231x016,1x37,x17,0232213x15,333x16,2331x011,31300013333x17,311022333113333x18,3313x08,3112210000313003113131331233212333x111,3113000031122221x010,113131333312212x36,x117,2322001x011,11332223332122233331x35,x110,322230001x011,3133232223222122x37,111x35,1111232200301x012,113232223222212x35,111x39,11223x05,1x013,132322233221223213113x26,x36,122030001x014,13322223221222231113x211,3310000301x015,1323222321x25,1113x214,1x05,1x016,1332322223x25,113x215,310001x017,1333x210,313x29,311132223313x018,13323x29,13x29,1x05,122231x019,3333x210,1x29,3001130032231x020,1333x29,3221x25,30001113012221x020,13331x27,32221x25,10x16,012221x020,33312200222212221x25,10x15,3012221x021,13220300322122211222210311130032223x015,3111132220030012212223112223003130012222x014,31x26,33203000123112223313221x05,122223x013,3x26,332203000212123122223322231113x25,113x011,12223332220030002121223122223x212,13221x011,31x26,0030000212120231x215,3320001x012,31222203x05,2121200223333x210,31200001x014,122223000022333120x215,31313001x015,32003x05,2333312000x212,33210031x017,1x07,221133312000x211,1201x021,3x06,221031331320000x27,3112003x021,3100022100003113332x05,3x16,2001x023,31113x010,3x15,3x25,301003x044,10220100031x046,1001x053,13x077,",
                        "GOLDEENFront": "p[1,2,3,4]x076,111x043,1131x042,11001x041,112331x040,1100001x039,11223331x038,31x06,1x037,3x16,301x033,110011300223110031113x026,13311332002223133x05,31x024,1112332003x15,2100020001x022,121002211321011122303x05,1x021,11x05,3000011132231x07,3x019,13311000010000132223310002001x018,100233100003111322233331030001x018,10132331x08,22x36,100003x019,102213x09,223223331x05,3x019,111x010,x28,33133201x019,122022x07,2313222233100001x019,120000222002232221x25,310221x019,12x05,x26,0002211222312223x019,1x08,2221000122213223123x019,33x08,2230030012222123121x018,1023x08,21001000122223311x018,10011x09,100100001022131x018,100321x09,100100003021331x018,300123x09,1001x06,13331x019,101221x08,10030003113331x021,312223x07,3x05,12233331x023,31113x07,100012223331x029,13x06,31322233331x031,13x06,22223331x034,311113222333311x027,31113x07,311x36,1x025,100022130001322x38,1x023,1x06,22313220022332223311x020,3x010,222000222332223331x019,1x09,222x05,2233x25,331x018,12x05,x25,x06,22233x25,331x017,33x29,x08,2233x25,331x018,133222313x09,22320x25,333x018,3x15,33x09,2230002222331x023,13x010,2320002222331x024,1x09,22x15,3222333x024,3x08,221x06,13331x026,1x06,313x08,313x028,311113x025,",
                        "SEADRAFront": "p[1,2,3,4]x027,11x011,1x034,101x010,1x034,1031x08,101x033,10331x07,101x012,1x08,1x012,1031x07,101x011,101x06,121x011,10331x05,1201x011,1021x05,121x012,1031x05,1031x012,10210000121x012,1031000012031x012,10210000121x012,1032100012031x013,1021000121x013,10210001031x014,1021000121x09,x15,0310012031x014,1021001021x06,111000010321012031x015,102101021000011x05,2221321010310001x012,1021010310001010002221113210103100101x011,10210113100101010222101103212031010010001111x05,10212111010102122210311032103101002100010001100010212101011123122102131032103110021x05,1100011010212101111031221003131032203100221x07,1120011022210311033121002133100303000221x010,1220102221031023122100213310030300221x012,1220102212100331110021331000303022131x012,122202213102322210021331000303023131x013,12202211003x25,02133310000302213331x013,1222112023x27,1333x15,222133331x014,12212023x26,12211122221221x35,1x014,12122023x26,1x26,1112211x35,1x015,112023x26,313222112222131x35,1x016,12023x25,3101221x25,1331322331x015,122023322311003221222213313322231x015,1120233x16,03221222111133222231x016,11013221311101212111133313122231x016,11112222100012212133322213122231x017,1311222231122312111222131222231x018,111x28,1111333111331222231x019,102221333101222x15,31x25,31x018,1002231332000111x05,1x25,31x016,1110002231x07,1x07,1222231x013,111x05,2231x07,1000023200122231x012,1x08,2231x07,100031112013221x013,100333202231x07,1000213112213231x014,10111322231x07,1000313222213231x014,1021113231x08,100031322213221x016,122113231x08,100003122133231x017,1122221x010,1000031133221x020,1113x011,1x05,3332231x036,1x05,22231x038,110023331x041,x16,x011,",
                        "HORSEAFront": "p[1,2,3,4]x0288,1x038,121x037,121x013,11x022,121x012,1231x021,12311113x06,12231x021,110x25,1300012231x021,1000x27,1012231x021,1000x29,12231x022,1x26,3111322231x022,101222210000122311x022,1331222133001223x16,x018,1131222111301x29,11x016,1011022101301223333111221x014,111102222111132333112223221x011,110000x210,3313331132221x010,10222022231x25,33111333312321x010,131113223122223331332111123221x010,131113231x36,11332x36,2231x010,13111323133331133332x37,11x012,133323x18,332233223331313x012,x15,x07,1203112x35,2231x025,1110213333233313x024,1x05,1322x35,1x023,1x07,1x37,1x023,100x25,122x35,1x023,10222122133222213x023,1220221122x35,1x024,1x210,3331x025,313x28,331x028,13x26,331x030,111333311x033,311113x055,",
                        "KANGASKHANFront": "p[1,2,3,4]x014,3111x051,102231x049,10022131x047,1323x18,3x043,1112000x26,111x039,111x06,x28,11x036,112x06,x210,311000x17,x023,12222000x212,3111132x06,1x020,31x220,3132x08,1x020,13x220,31x09,13x020,1x221,311x08,1x021,1x213,3x15,333112x06,21x021,3x212,311322201113322000031x022,1x210,311222000013333x25,11x023,13x28,3103130000122231322211x023,1011x37,13011300001222231111311x022,100011112311131100031x25,x36,1211x020,1000x27,3111133112223222x36,231x021,12213x217,3222x37,1x022,13x219,31222x36,1x024,x16,3x212,3122233331331x028,210013x16,33313222x35,131111x026,100x15,300011322x38,110331x025,10x18,001221x36,111100231x020,111102131111333101223333111122332331x019,11000131211x35,12121333100001333310011x017,1x05,3121x37,1221331x05,1111331021x018,111302121x37,2213321122211000133221x010,1x06,1000011332x36,12133210011100002133211x09,32300001x06,12122331112213321000100222213332111x07,121000010002113211x27,1332221001111311x37,111000030210000322113322131222x16,222211112x36,2333311010001221x05,x15,22312331122333311112221222233322233122010302210000100001111222122233111122012211x25,3222311220101220010001002110212212331112000100012221x28,3132231102200210003310102121211120011100111122213x26,3311333102212231x07,122121x06,110110231223x17,333131331022212331x07,1213212x05,2111122312213x25,311113311112222111x09,11322111120000222311113220022223131111001122231x09,31322112211222211112112000x26,110002102212231x010,1311021322113102311212000x25,100002231221223x011,1331023133221002212212000x25,100022231331231x011,1031023x16,022312120x28,100022331312331x010,100312231200012331221x211,1022333212331x011,102331112200001112201221113332222111333313331x011,102331222x07,22003010002221x26,x15,331x011,102332122x011,22100x25,31x26,3311313x011,101122311x09,221110x26,31x26,333113x012,110022333100x25,1113310x26,31x25,333313x013,11022x36,x16,2233331x25,31x25,x35,11x011,110011x38,13022x37,1333313323x15,33113x09,1000022111x35,111x39,x15,3331x05,211311x08,10000x26,13333x112,00011331x05,22221113x07,100x29,133x16,x012,11x05,x27,11x08,x117,x016,x115,x061,",
                        "TANGELAFront": "p[1,2,3,4]x0112,33311x08,31x026,31103310222033100031001x023,330003000233322223110022111x020,300023002231113333x26,3133110000111x010,3002231023113331111x36,13222213112221x09,3022310231x36,133x16,32223331x25,1x08,300233102311112233133133332233311222231x09,10233111313333122213331222233112222311x09,300211333132233112211322113311332233131x09,1023002231023113100111322211x36,113331x08,1030002310031333100133133220111311313321x08,10300231102131331001133113330001113312221x08,3000313102131231201113311113300213331321x08,30023131021312213201133113311332213213331x07,10231321221212231220113133223113221321331x07,10231221221231221322221113322131322121331x07,1323122132121122311333222111131113213211x07,30122312113311112233111333133311113221211x07,101322312x111,3331113x15,331321221x06,300313003x15,00111001223133331113313313221x05,100101300311100001000012231x36,1331131221x05,1022111300111001010010120011122233133331221x06,122333132111000010000110013311123122213231x07,1122313221110011100111000131331331221321x07,1331123132x113,322111331331221321x07,12312111322x111,3122213313331221321x06,12210223313222x15,331331322211113131221331x05,1210110233113322221331332133x25,1331221331x06,100131023331133331122122211x35,1333122131x06,333031102221311113132133222x18,310221x06,3111311210211131331312213333x28,111022100003x15,3122x15,331331132211x310,222100010003x16,312231131331113132x112,333110010003x19,223x15,33113133113313313321110011x05,3x110,22311311331111331131221213x012,3x111,2231001131111222x17,3x013,33x110,221x05,3113111x25,113x015,3x17,3311x07,330003x17,3x016,3311113x015,3x17,3x019,3333x016,3x17,3x038,3x17,3x039,3x17,3x040,3x15,3x042,x35,x0109,",
                        "CHANSEYFront": "p[1,2,3,4]x026,3311112x039,31x06,311x034,231x010,231x026,23x16,x013,21x017,23x17,222231x015,21x018,21x27,313000011x011,3x020,31113331x05,1x013,21x024,1100023011x05,11x05,231x021,11x07,31100001x08,31x020,13x07,1x07,11x07,331x017,13x09,2113000311x07,3311x015,1000023130000x15,0032x08,13x15,x010,100033000030001113x05,3300200013133331x08,1x09,21033002x08,2030001331311x08,12x09,3111233x010,2100001331x09,12x08,231200100332x07,22100013221x07,12x07,2131200001x012,21000011221x06,2x08,12212x05,3x011,22122210111x05,3x07,1322201x06,32x09,22212221x07,32x06,22200003x08,32x07,222313321x06,1x015,1x017,222311331000032x015,3x017,22231011100001x017,1x016,22231000010001x017,21x015,2222310010103x019,212x013,2222310010101x014,311300233x012,2222310100101x012,3100001x016,2222313100101x011,2x07,1x014,x25,331202101x011,1x07,21x013,x25,331221001x010,2x07,222x013,x25,331221001x010,1x07,2221x012,x25,331221001x09,1x07,222231x011,22223331210003x09,1x05,x25,3111x09,22223x16,00001x08,111x26,111331x09,2222120023100001x07,3222x16,2223333x07,222212000023100012x06,1200x29,3331x07,22212x06,2100032x06,1200x29,3331x07,2212x07,2100001x06,1x211,33331x06,2212x07,221000032x05,3x210,333313x06,212x07,221x06,12x05,1x28,x35,1x06,212x07,221x08,1200003x26,x36,13x05,21x08,221x010,12000011x39,12x05,2212x06,221x011,1112000311x35,11x05,223122x05,231x010,11333112000311112x05,222331322002231x09,11222233111222x08,2233331133222331x09,1200022233x16,x25,33x18,x36,1x010,1x05,2x16,033x17,33300332133311x011,x19,x023,1113x011,",
                        "RHYDONFront": "p[1,2,3,4]x0176,333x016,3333x033,3221x013,330021x033,122231x010,3002231x033,12223311x06,31031131x035,122333x18,0313331x035,1233113000021231333311x033,33113x06,20221x36,1x06,311x023,1022220002020x26,333231033110021x019,110011x35,2020x213,110003331x018,10010121111x219,3133321x019,10001122333x29,0x211,13222111x016,13200122333x27,002231x29,122223311x015,132001223x26,002231322221x26,123322221x014,132200100222200032312032222112222133222111x015,1322001x07,322120003222231222212211x018,13320301x05,232130000122231x25,133331x017,131130001000232111300132221111222213221x017,313322003100232031113x25,000012121211x018,11333223230222131100x28,03122111321x017,1213333x27,11000x25,333311221331331x017,121111x217,33311322232231111x015,11221333223x211,x37,1x28,3331x013,30122213333x29,3x16,33331323x26,331x011,3002120000x29,312001113331132323x26,331x010,3002130031223122223120011113313323333x27,31x09,30002211000x26,31111011121111x38,133322231x08,300222331102223x18,2221111x37,11022232331x08,302223333x16,x35,222x16,x37,100022221331x08,1222x36,11333x26,x16,x37,110000x25,131x07,1012233311223x112,333323333101000x26,131x07,12x16,01x26,x39,2232333310213x26,3311x09,11021001x217,323233331111322x35,1x012,110001x218,323233331001x36,131x016,3x26,3x110,3232x35,1023113331321x015,1x25,311x07,22211x38,11100131111x016,1222231x09,222231133132223102x17,x015,112221x09,222233331000202221133111331x013,3222231x09,22223331x05,20222213313331x012,12002231x09,2223331x05,20x26,13133331x011,3000233x116,x07,202313331x36,1x09,300002331x212,3312x05,202310113133311131x08,1000223312x07,222331x25,020223120311331x35,1x07,12222333132x06,222331x29,331320231111333031x06,12222333312x05,2223331x27,x35,122223000300321x06,3222x35,13x28,33313231123331131322230222322331x06,1x38,x113,310023x05,13132212222322231x06,1x310,1x27,33310003000022211331x25,122231x07,1x310,11322223330002100022231113122331232331x08,1x310,x19,0023100022333111133331323331x09,11001310011333110010x110,3311001113133331x010,10002100022311x05,x114,x06,x16,x011,100210002211x011,x19,x025,x19,x038,",
                        "RHYHORNFront": "p[1,2,3,4]x083,11x053,1003x052,10223x050,1002231x07,1x041,1002231x06,131x039,11002233101301331x031,11x05,1110223333132133331x024,100003001001111022x37,2313331000111x017,101000100211002122233311221221111011331x017,102100100223111222333100121322221133331x017,10221010022333x27,1221331x26,11331x017,1022311002333x27,1002331312221100131x017,122333102333323332333102x35,1110022311x017,12211110223x16,3111022x36,100023331x017,1231000223100033111101222333110022233313x016,1310223311100013311321111211100222333121x016,111133113300021112313222211x26,3333121x015,10000113333100011122313x210,x35,1221x013,1x05,223333000211112313x211,333312223x011,10000222233110002233323133x210,333313321x011,100022333110002222333232313x210,33311131x010,100022331110000x27,3223133x210,1100x16,x07,100223x15,000x26,3132x15,3x28,332x07,1x07,10223x15,00x27,11331223x15,32223311x28,x07,100233111100x27,x36,2223x16,33111212223331000011012223x15,00x25,311333122223x18,23313123333110030012233x16,002222111133122223313333x26,33313331310010000133x15,0002223121331x25,31x36,222233313332131001x05,x16,0002223122131x26,31x312,13x25,x15,x05,22111x26,31220113x26,31x311,113x28,101000022213x26,12200113x25,3331x39,1133122233310010000222331x25,100001332222x35,1x38,1333313333100101002222333222230100133x25,x35,1x38,1x35,1331210101x25,333322221110133x25,1133331x314,133313110122223333x25,1111332222311113313222x310,113313211021x37,22221000x26,x18,3311122x37,13311132110221x36,223100x27,x17,33x17,233331133111333110221133332221000x25,312x15,333133x15,33x18,311310122213332221000x25,112211113311x35,x113,313310122220132221002222312222111331322x36,x112,31310011220002210002221122001112331022223333x111,313310013120002210033311110011102310x26,333x112,311300131x26,x35,x110,311x28,33133x112,3000013233223333x111,231x35,22233310033x110,3x05,111133x111,3333x16,33322333100003x18,3x06,x114,x36,11x35,11133331x06,3x17,3x07,x110,x38,1100002233313331x07,1133113x08,121111x28,x15,000x26,33131x08,330033x010,100220000333311001000x27,3311x025,11001333x15,0001110x27,331x028,113x18,00100213311123331x029,133310011101002213100213331x028,111331022110x15,0110221111x028,1001110111x011,111x033,111x044,",
                        "WEEZINGFront": "p[1,2,3,4]x0101,222x011,2222x037,22223x09,x27,x035,222323x08,x25,32x027,31111320023230032x05,2232323x010,3111x012,10023331300332232320000233323x010,322233x010,1200x35,13000222322200002323x010,3123311x010,13232x36,0000x26,x09,11300031111231111x07,313232x36,1300x25,33x07,3123x15,22x36,111300311132x38,113002232323x07,1223312x312,11112223312333232311300032323x08,10231x35,111x37,222333x15,33323111x05,333x05,220031x37,10001x37,131000011113131313x012,22230011x35,10000x39,1x06,111331311x013,32330112333310100310122x35,11000012333113x015,330012x36,00331101112331133x15,3231x021,11233311333310x15,311x35,23232331x021,12333100333311112331132x35,23231113x019,3133310103331112331123030323332313131x018,311331000233111231111303030x37,13131x017,132331002331112311113332323232x35,13131x016,122x36,10112313131x36,23232x35,131133111x011,121x35,x15,333131x38,232x35,13133112001x011,113133002112x315,232x38,1x25,01x011,1133331111232x323,222322221x012,113332112312x325,2233231x011,31x35,22312x37,1x324,1x011,331x37,12x36,131x321,11x011,31223331313311x36,131x318,113x012,122331131333221133313131x316,1311x012,31211311x35,0221133131331x37,232x36,11x013,311303113333000121131311x37,232323333131x014,33003133133100102231331x38,23232333311x019,13133331100033313111x39,2323313131x017,1313233331133331321211x36,232x36,221x010,222000131101x311,0102211x35,23233331221x08,x25,3000131011x310,10000221133332x35,1321x08,2322223001310210x310,13x05,22132x35,1333122x05,2323222201331021101x310,130000x39,11112223x05,23223230133312111121x323,13022232x05,222323011x36,2x15,x318,131310022323x06,2223013211x36,211101x317,1330000323x06,222200123111x37,2110110x313,1311x012,22322201333111x38,11100x312,131313x010,2232322001311132022x35,110211331x38,132213x09,2223223000113310000233331002121331331313333222100022200002222323x06,3100002333302111133131313133232210022220000232323x08,31300023333211113331313131332313002223200002323x010,31330023333211333313313101331300232323x011,22000022331300131x38,13111000113002223233x010,23230002222311231313131331331x08,22223233x011,323300023222231111313133111331x06,x27,x013,232300032223200033x18,3331x06,2232323x014,33x05,32323x06,33x16,31x07,232323x023,333x012,3311x09,2323x062,",
                        "KOFFINGFront": "p[1,2,3,4]000022x035,222x07,23222000022x026,x25,x06,23322000x25,x06,22x016,232222x06,222000023222x05,322x08,22x06,322232x07,22000032322x06,33x07,3222x06,32323x06,22220032323x015,323220003232323x06,x26,02323x08,1111x05,32320x25,323x07,22232303233x07,102311x05,33x28,x010,332320033x07,3102331x07,3222323x012,2323x011,1022311x08,2232323x010,2333x09,31133023311113000112232121002x05,2232x08,11x37,113x16,222122121002320000232300311031x311,131313323331221000323002022320312311x35,2x05,23131313133310022300300x26,0012231323330000332023131333131003222300002232300010213233320x36,00331x35,1303232330000232323000101233330033223200x38,100032231x06,323320031323333002200002x310,1000231x08,33220001x37,x07,x310,131x015,200031x38,2030323320x35,1311x06,2x05,2222000131333200330323330000x35,13100002222000x26,001333320000x36,2200x35,13133000232320x27,001x35,20330233200x37,1313110003232303323220031x310,20002x37,1313131000032300323223032131x36,2002320320x35,131311x010,3213103211x35,0002x35,00003331313111x011,33100131313333223331333320x35,1313331x015,1331333x15,313133x16,3331312001x013,2211133110000131331100001331313320100022x07,x25,133300010013331010000333131333100022x07,2322231331x05,13331x06,x35,1111x013,222232x35,100x36,0000113333113x015,23233031x313,11333113311x016,32323002331111x39,112213113000022x011,333001233x15,0x15,012221111322002222x06,x25,0000133131122012222012211133x26,32230000x27,0000111133311133331111331002322232323000x28,x05,110011x37,1133321003232303232000x27,3x012,x16,001321000032320032000022232323x012,13221000011x06,322x09,23232303300032x06,133x012,32222x09,23232223303232x010,22x07,3232222x011,22212102323x09,22223x05,2322212x011,3212130033x09,3222323000032321210022x08,3313x09,320032322232x05,3212100022x016,2000022000322332x07,121x034,322x067,",
                        "LICKITUNGFront": "p[1,2,3,4]x0636,x18,x06,11x038,11x28,11000100111x029,110011x212,1100112221x025,111001100x210,3333101x25,1x022,11222121200x29,x36,11x26,1x020,1x25,311x211,322002331x26,1x020,12222331x214,01122213x26,1x018,1x25,331222x35,x26,10113231x26,1x018,12222331022x37,x25,11113231x26,1x018,12223310000x25,33x26,1132231x26,1x018,1222312002332233x213,31x26,1x018,12223122221132113x212,31x25,31x019,12231x222,31x26,3x15,x015,122213222x38,x210,31x26,10022211x013,132231323x18,333x27,31x25,3100x25,1x013,1222313x112,332222313x25,31x28,1x012,132223x115,32223132222312220x26,1x012,13222333x113,222333322331x210,1x013,1x37,133x19,222x38,1x211,1x013,11x35,131333x15,322x39,1x211,1x015,11331231333111132331322x35,1x26,132221x017,1112313331333231133222x35,1x26,132221x017,12313333122211133x25,33331x26,1322210000x16,x07,12313333x15,223x27,33331232323132210001002333110000120x35,11122000x28,33331323233132231001002x35,100120313333122000023x28,33331323331332310122232x35,101233133331000022333x27,33331x36,1323101233202333311233133331000223333x28,x35,1x35,133310123332x36,1233133331222x35,2002x15,x35,1x35,13331012x310,1331x35,1x36,200021x05,1133331333313331012x310,133133331x35,2002221x05,222133313333133310012x310,11x35,1222200023312x18,3133133331331000012x39,1133331x06,223331x29,3133313313331x05,12x39,133331x26,33331x211,313313313331x06,112x38,1331x310,01x211,31331331331x09,112x37,110x38,00012222111222231331310131x011,x19,x012,212221033122231331310131x015,100001x09,2231222133312223133110001x015,10000221x28,33312221333122231311x020,1000023311x310,122211132231331x020,100022233x15,x36,212222332223131x021,100222333x114,x27,3131x021,x17,331111x011,x110,x021,100x25,1111x045,x110,x037,",
                        "HITMONCHANFront": "p[1,2,3,4]x018,3x05,113x038,13100312033x036,332101220231x034,301323122002310313x029,30132312200023110033x022,11300012132312200231100231x021,100211112322122000231000231x021,30000221322212200231000231113x020,12000213x25,0002310023132003x019,32200213x25,0023100023120021x020,1220013322200023000233200231x020,3222013322200020002232202231x021,3222311222x06,211x25,31113x019,122331012x06,2100122231133313x014,3x15,331001x05,2100012223133222313x010,31222233111011x05,112003223133222002313x07,1x28,3x15,0000110103223113222x05,2313000012200x25,3112220002111313223133x26,x05,23000120000x25,313x27,111222313333x210,0100332200x26,313x212,331x35,x110,30013x211,3123x29,33x111,x09,13x211,31323333222333111133x15,31x08,333x210,3113220223331113323331113331x08,13x29,33131x36,1113220223311323113x07,133x28,3313x18,333322233313223111x08,13332222333133x16,322223323331322111331x08,1x39,13x15,3222002233331321111313311x07,11x35,x110,2200022333131111313313331x08,x110,3222313202233313131333122313331x09,111133331113221322333131331222322221131x07,11x311,112312333133321022223x25,11x05,3133x27,x36,133133133322102222102222310000333x211,33331331311332221022221102231x05,13x213,333313110132222103333111031x05,333222000x28,33313100x15,303x16,011x06,132220000x28,33311x012,13331x09,13222000x29,3313x013,12231x09,13222200x29,331x014,322113x08,13x214,3312x015,322223x07,13x213,33131x016,3322213x05,333x212,33131x018,322113x05,13x212,x35,x019,11331x05,133x210,33331x019,133331x06,1333x25,x38,x018,3223331x06,x315,1x019,1333313x07,31x310,13x020,311113x010,311x35,13x041,31113x032,",
                        "HITMONLEEFront": "p[1,2,3,4]x040,311x07,111x042,30001x05,10001x041,1000011001200001x040,1000220111200001x041,1x27,122201x039,x15,x211,1x037,13x25,112233x25,1x035,13x29,11333322211x033,100x29,31133332221x032,100022221122230133332221x031,1000222211112300013331121x030,100002021101123002133100221x06,111x020,3000200100032220021310002210000110003112x15,x010,10002201101012220021110002210003022200011000023x16,000100222210011222232231112221100001002201x011,20231102112222113x25,3222x16,21x05,13223x09,202020222x16,x211,3223111131x08,121x08,20x210,1101x212,11x36,1x09,1x09,x213,111x212,33113311x010,3x08,22221111x27,1x214,333111x08,111x08,22211333311x26,1x213,x35,1x06,13003x07,2221332222331x25,1x212,x36,10000130003x07,22221320022231222233x16,x26,x36,10001022003x06,22223332002223332223310010011122x38,1001002223x05,20222133322223331222331323132101133111333100013022300002022221x310,12233313331333321112221331x05,1303x05,202221x310,12233313333133133131222333x07,11300020x25,1x38,1323333133331331331311223331x08,10020x26,1x314,1x35,1331331313123331x08,122020x26,11333311x36,1333313331313313133331x08,13x212,111x38,1333113331131311313331x07,13013x214,x38,11113311113x16,33331x05,13000033x210,x310,10000112x110,3331x05,1x05,21333x25,x310,111x07,12222x15,33331x06,11322221x312,x15,3x010,1x25,1133331x010,1111011x36,111133331x012,11x26,331x019,1111300111331x015,11x25,11x025,1133111x017,1222231x024,1221331111x015,1222311x024,322211332221x014,x16,x023,1222233332221x014,1331111x022,122213333111x015,12331311x021,322212321x019,1113311x020,1022122221x019,133313311x018,1001122221x020,111331121x017,10010120221x020,13313121x018,11001000221x019,11133321x023,110021x019,32113221x025,111x019,1x27,1x047,1x27,1x048,1222231x048,10133101x048,10100101x049,1100111x050,101x054,1x05,",
                        "MAROWAKFront": "p[1,2,3,4]x024,111x043,111221x032,1110x17,22221x021,1111x06,12231222x18,x021,10000x17,2331222x37,1x021,1x09,1223111122x15,331000111x014,100220000212111x27,333x16,2231000111x08,1210000221113x29,333311002231001000111x05,1100002213130x210,3310002231001x06,21x05,1002221013x05,x27,330002223101x07,2210000102221031x07,x25,3000222231001x08,22100001222101x09,x212,31001x08,221x05,111031x09,x211,31300012200002221x09,1x010,x210,311310011x28,1x08,31x011,x29,1313100101x27,1x08,13x011,22223322333133111001122221x09,1x011,22233113222313300010021211x010,1x011,22311001222313x05,x15,21x010,1x010,231111001222312x06,x25,1x010,1x09,2311011012222312x06,x25,1x010,12x07,23103113030223122x06,22221x011,12200002231x06,100023122x05,22111x012,1x27,31231113300003112200022111x014,13x25,331x010,21312220021331x015,1x25,31x010,21333122021331x016,12222331x09,21x35,1203111x07,1x09,12223312x09,122x35,10211x06,111x09,1302312x09,1x25,333120x18,021x09,13023133x06,1120022223131021x07,21x09,13223113000011x06,22113312001x05,231x010,13331130011x08,1123333120120022231x011,11133311x06,31132223333120012223331x012,x15,003111130000221133312001x35,1x016,133x011,112233331202133331x016,10313x06,113x25,333122213331x016,100300x15,30002221133312221111x017,1003x012,13223333122311x017,1000331x07,313022233331233113x016,100033313111130000223333133331113x015,100233331x08,22x35,1333x15,3x014,1002333311x07,311133x111,3x014,12x35,x110,000x114,3x013,1x36,1111x09,33x112,3x014,1333x15,3x011,33x110,3x015,11101111x014,3x19,3x019,3113x015,3x17,3x021,13x017,3x15,3x042,x35,000",
                        "CUBONEFront": "p[1,2,3,4]x085,11x022,11x013,1021x05,x16,x05,11101001x012,102310111x05,21100100210021x012,1223113x09,211002310221x013,131x013,21003122231x014,13x09,2x06,21111331x014,1x010,12x05,31122131011x09,11x011,2122200122122111331x07,121x05,2000223313332022122213331x07,1210000200023x17,3223112213331x06,1221x07,23111x35,123131222131x07,12312x05,23111323111213312222131x06,122312x05,231132311012111x25,31x07,122331x05,231123110012113x25,31x07,123331200002313311100121132222331x07,1233112x05,212101101211332213331x07,1333101x05,212211112211332221331x08,111001x06,21x26,121332221331x013,1x07,2x16,213322221131x012,12x012,22211322221111x012,1x013,222113222311331x011,1x014,21133222313331x011,12x05,332x05,21132222313331x011,12x05,31120002113322233113331x011,12000021120221113222231013331x011,12200001202212111223331001331x012,1x29,x15,013331000011x014,1x27,10110001331x022,x17,0110001331x027,111100002111x024,1111x07,21x026,1x010,231x025,1x011,31x026,1000022000021x028,10022x05,21x029,11120000231x032,1122231x035,1111x021,",
                        "EXEGGUTORFront": "p[1,2,3,4]x010,x17,3x047,1x37,113x046,111x36,11300011011x05,3x112,3x019,311223333113x18,0111x312,113x07,3x114,223333x110,3333x17,x36,111300311x314,1123333x17,333311x316,1101x25,3x19,33312233x16,331113333x19,x37,10x15,x25,00002113310232x15,313331111320023333x18,x05,3x17,00022113100011113331113311112002x35,1x011,x115,31102111331331113202x19,31x08,11x35,x18,331331011311311323x15,20023331111x06,13331111333111133133331311331331112023x17,33331x05,311112222333311311002233x18,3331111x37,1133310000301x27,333131300x116,202000211133113331x05,1x28,31313011x38,x115,223113x15,30001x29,3121213x28,3331x35,13131321122313100010001322221132122313x212,3102333131312221122131x05,1012221000312013x214,310023113313222111231x05,1012221010310132222x08,2222310023123312222101231000010122230003101200003x05,30000223111310231x25,101310000313222211321120022210222012222023133111031x26,10110003x28,000312221110222200111120213222211133322110110001x27,0000120110001x25,1000011221x26,111322110010000130222x05,120020001x25,1000020021x25,100012211x08,113x07,120030103x25,3010030021x25,1010122321x07,1123110000120003330x26,3333000010002230003x25,1x07,11011000012x06,3022x011,1000022131x25,31x08,111x05,12000313x08,2x06,1x05,x26,03113x09,12x05,120001022200022232000021x06,220033111x011,110000120000113x25,3113200021x07,21100111x013,1100012000322x15,2210300213x07,22x16,x015,11112000010x15,0130000213x08,2311131x018,120000x19,x05,21x09,2222331x018,3120003x17,300002113x09,22221x018,31120000x27,x05,21113x08,22221x017,31111x015,2x15,33x07,221x017,3x15,22x012,2133x15,3300002213x016,3x18,22x07,2221332x16,x35,111x016,3x16,33111x27,111332x15,2213331221x016,132231113333x17,3333221111222011122221x014,1311122111222x39,22211131000133120001x013,1x35,1121311x212,131131111x35,1111x012,31x37,12132x112,321113333x25,3331x012,1x39,121x215,11333221111222331x010,133222x36,110x213,0113321122221122331x08,x17,223333121100x29,0013321x28,12231x07,1x38,122333110111x07,1111321x210,1221x07,1112333223312331x05,x17,000122120202020202121x06,1222133211233311x017,12102020202020121x05,1000212212212311x019,121x09,121x06,100001210002113x021,111x07,111x07,x18,000013x025,x18,x016,x15,x0211,",
                        "EXEGGCUTEFront": "p[1,2,3,4]x0193,3113x015,2331x016,22x012,3110000113x010,31000031x013,1111x09,31x010,31x06,31x08,1x010,33013311x05,312x012,2110003x011,1x08,3003313331000100112x08,211001031x010,31x07,30010031331111x05,1122020211x05,101x09,3001x06,1031003011321230001031020213010003103x08,11001x05,1230333023x25,333111320000231113333013x06,31330010000103x06,32222122x015,221031x05,221220131000013033000203222122x017,3x05,3222122220010000100010020232221222x015,3x06,11221x25,01000030001002223222122200023113132000012100230011x26,01x05,100022223332122220023x06,320001231222001011322221x05,3x26,322321231111x013,122112230000x25,1x07,12222322221310031011x011,32221222233x26,1x08,31223221130003010001x011,1x27,3x26,1x011,3111122x05,1010021x010,3x26,1x27,1x012,122221x07,32021x09,201x25,3x26,1x013,102221x07,233221x09,22122221x25,1x014,30003x05,112201311x08,20221122212211x014,300001x05,131200321x09,202223x15,x016,100001x05,213122221x06,2020x25,33331x016,100001000x210,1200002020x27,3231x016,10202010x210,122x05,20x25,3331131x016,12020230x210,122000020202231x05,11x016,311112210x28,12220002020231x07,301x014,11000011231x25,11222200202023x09,2001x012,1x08,12231111x25,00202221x011,3001x010,3x010,1x211,0202221x013,2021x08,3x010,221x215,102x012,3201x08,1x09,22221x213,3003x012,10231x06,3x07,20x26,1x212,1001x011,201131x06,1x08,20x25,1x211,30001x012,213221x05,3x07,20x27,12223232222100021x010,203222100003x07,2020x26,12232323233000221x011,23222100001x08,221322322213232323210002001x06,30003x25,10001x08,21322212221232323231000100110000300001x25,100011x06,210222232221323232310000100131000200023x25,100012120003100x25,322133233321000021000200322223111322100012031200100122221211x37,1x06,1102000331100x25,100032001000311x25,1121x37,1x015,100032221x05,131x05,x27,1221x37,1x013,32000132221x05,3x06,x28,1221x38,1x012,22113322221x06,10000x29,321x39,1x05,30000x26,322221x07,323111x27,3221011x35,11x05,113x25,122122221x08,1222213x25,1210000x15,001x06,3x15,x27,1x010,31x28,311x012,1x05,x210,32221x012,11x25,11x015,1020x214,1x015,x15,x018,102020x210,1x040,132020x27,11x043,13020222211x047,3x16,x068,",
                        "ELECTRODEFront": "p[1,2,3,4]x095,x19,x028,111x09,111x023,110002x011,11x020,1x06,232x010,11x017,1x010,2332x07,31x015,1x015,2233332001x013,1x026,1x011,10003x024,1x010,10001x022,201x09,100002x023,201x08,1000021x022,201x07,1x05,221x022,201x06,100002001x022,201x06,10000200010003x017,201x06,10000200010001x017,220100001210002000010003x06,x16,0000220100001210002000031001000011200030000222010000120100201x07,30312x05,20000222010000120210021x08,1x08,20000222010000120231002222x07,1x06,2000222201x05,1202321x011,10002220000222201x05,120233321x07,x26,x07,22221x06,132x36,2111x015,221111x06,1x36,1x35,21111x09,x17,x07,1x35,1x310,2x17,23111131x07,1x36,1111x316,x15,x09,1x36,x17,x37,1333111131x09,1x37,x113,333311131x011,1x37,11132200002133311131x013,1x37,132200002133311131x015,1x37,1222002133311131x017,11x36,11222133311321x020,11x36,111x35,11x024,111x38,112x029,x17,2x0136,",
                        "VOLTORBFront": "p[1,2,3,4]x0337,3x15,3x031,31x27,13x027,31223122x35,13x024,12022300223113331x022,1312231002112233331x020,132213312112200013131x019,3001213313210000313113x017,120010x35,110003131311x017,121011x310,13131113x015,x38,x15,x35,13x15,x015,1333311220000211113x16,x015,131122x09,222x17,x015,1113x010,x27,1111x015,12x010,x210,311x015,1x010,x212,31x015,3x09,x214,3x016,3x08,x213,3x017,1x07,x214,3x018,3x06,x213,1x019,1x06,x213,3x020,1x06,x35,x26,1x022,100003x25,322221x024,310030022232211x027,310x35,011x031,3x16,x0296,",
                        "KINGLERFront": "p[1,2,3,4]x017,113x016,111x032,132221x014,133311x028,112000021x012,132223311x025,12x07,31x010,12222x35,1x023,1x26,00023x010,1222x37,1x021,1x29,0231x08,12222x38,1x019,1x212,31x08,12222x39,1x017,1x25,333x25,33x08,12222x310,1x016,1222x36,2222331x06,13222x311,1x015,122233311133222331x06,13222333111x36,1x014,12233313311322331x08,13223313331x35,1x013,12233313x15,32311x08,11323x15,31x35,1x012,1223313x17,2131x08,1312x17,3133331x012,123313x18,3131020000201313x18,313331x011,1223313x110,310300003013x110,3133331x010,122313x110,31001000010012x110,313331x010,123313x110,31021200212012x110,313331x09,122313x111,31032300323012x111,313331x08,123313x111,31032300323013x111,313331x08,12313x112,31012100121013x112,31331x08,13313x111,3131121001211312x111,31331x07,123313x111,3131121001211312x111,313331x05,123313x18,311131331211112133131113x18,3133310000123313x17,33313131312133121313121323x17,3133310001222313x16,3223131313323333233131312333x16,3133331001222313x15,3222331x37,11x37,1203333x15,3133331012222x17,320023313311331221331133100x35,x17,33331122212221113200233331000132332310001200x36,11132213331122122233132002233331000013333100001002x37,13233313311223023313200022x35,100013333100012002x38,133332331123202331220022x36,101001331001012022x38,133332331213222313x26,x36,120001331000212022x39,1x35,12213223313x25,x36,13332033330233312222x38,1x35,1201323313x26,x36,1x314,12222x39,133331111333313x25,x37,13331133331133312222x39,133331110133313x25,x36,121310133331213101222x39,1333121121133132222x37,100100133331021201222x39,133312112213313222x37,13002001133110002001222x38,133121001113313222x37,1x06,321123x06,1222x38,13311x06,133122223333112332x012,22321122x36,1331x08,1331x25,31122x019,222112x35,1331x09,1312331113311x018,221133111223132x010,1131110031000113x06,22x06,3110221300111011x010,1010211101x06,1300x26,00310000221011122121x09,102102122113x05,221x28,1x05,22311221201221x06,1110100213222132002222x18,00002223122331002121110001221110210113331132223132000023132223112331101221112210001122112100011103x15,3x08,3x15,301110001211221100012211221x038,122112210011100111x038,11100111x0337,",
                        "KRABBYFront": "p[1,2,3,4]x016,31100113x022,311x05,111011110111x05,111x011,110010011331213312133110010211x09,12102211333313133131333311022123x08,11122231311133233132111310223111x07,11021321312001x36,10021312312211x06,212221311x05,133331x05,113122313x06,1212221132010013333100102311223121x06,12112310232000x36,20023201231121x06,121011223133332033223333132211012100001113100133101x35,22x35,1013310013111012001001331001111x36,1111001331001200x15,300133102122211331122212013310031111011100013132200002211220000223131000111012311101100031x05,22x05,1100011011123112311211100100311x06,1110010011122123101231321213000022100001x06,31212312330012311321110002222122122000021113311231002x16,00211x25,31132222011200x16,000100211x06,11113000031111x06,1122210010133x15,3x016,3x15,33121000132331333312x012,2133331333310000130331x35,12x010,21x35,1333310000132331x35,21x010,12333311333310001x36,13332221x08,12223331x36,100132333311332221x08,12223311x36,100130333311122021x08,12223111x36,100130333311110021x08,10221111x36,100132333311001021x08,10010011x36,10001x35,1100101x010,1010011x35,100001x35,110031x012,130011x35,100001x35,11x020,11x35,1x05,1323231x020,1323331x06,1x25,11x018,11223331x07,1222231x018,1322231x09,1002231x016,1302221x011,10022311x012,11300021x013,11222331x010,13220021x016,11113x012,11113x049,",
                        "HYPNOFront": "p[1,2,3,4]x077,331x053,101x052,31003x016,111x032,10221x014,11331x031,3122223x011,1132231x031,13222313x15,30011322121x032,122211x05,2231132231321x031,332x06,x29,311321111x029,12x05,x29,31113210001111x023,31320000x213,13221x07,11x020,10012200x215,12122220200001x018,1000121x219,1222122202001x016,100001201x217,31222312212001x015,12300012313x216,112222122121201x015,300032230130x213,1221222121321221x015,100012223110x213,122123123133131x013,31120001222210x25,311113222313133133x15,x012,3112100001222310222230130003223113x15,3331x011,31122120000322210x25,1311113322313111x37,1x09,112222120230012310x25,1333x25,31322131x36,1x08,1x27,123200121x27,31223322231222131x37,1x06,31x27,121000021x27,313x25,31322213132333321x06,1x27,3312000011200222231332223132222133122322231x05,122231113312x05,100002231x36,12222311113x27,1x05,1x26,31312x05,30000231333111322221201001x27,3100001x27,110120030010023x15,3202012320212223x27,100003x27,1001223200123312222x06,21102111231x26,31x05,1x27,3001212000111002x09,2102303231x25,31x06,1x27,1003122x018,21021312312233113x06,1x27,10001122x06,3x06,200223x25,33x15,3x08,1x27,330032112220021x06,3000221x35,13x013,3x27,3100012231122122000023x26,x15,3x015,1x26,3100001222311311222111221111x35,x016,1x27,330000122223333111331113331x021,1x27,3100311x25,x35,1x38,1x021,1x28,1133231x26,x312,1x021,1x28,3132223x28,x310,13x020,1x29,312223x29,x36,221313x018,31x26,312231x220,12313x017,122221221331133x219,322213x016,122121221323333x26,3333x214,13x015,1221221221x210,x37,x213,13x015,1221221221x27,3331111333x213,13x015,312312311x25,333110000113x213,31x014,1x211,333111x08,133x212,33x013,1x28,333111x012,1133x210,31x014,1x26,311131x015,133x28,3313x012,1112222x36,1x015,31133x25,333111x09,11322111x38,1x015,1311322333112221x07,1x28,133322231x015,1333133322221131x06,12231x211,331x016,13333x28,13x06,12322213x26,3311x018,13x25,1112221x07,11221x25,33111x021,13x27,1331x09,11x35,111x025,1x37,111x012,x15,x030,x16,x010,",
                        "DROWZEEFront": "p[1,2,3,4]x015,13x017,11x026,1223x014,11033x024,32221x012,1102221x024,122223x18,3010031131x023,3222313x26,333122311331x023,1231x211,3223111333x022,321x216,311331x023,31x26,0x210,331331x023,13x25,020x212,3331x022,1x25,02020x211,3331x021,33x26,000x213,3331x020,13x25,000x214,3331x020,11113220022223x15,x26,3331x019,100121x25,312100001x25,1131011x011,31100x15,x26,33x16,x25,100211021x07,31100210132220002222333x29,1222312211100003021222311322x35,x210,3x25,13331331221000122213231132322002233x27,1x25,133313313210032133313311322200022223222231x27,1x35,1331001221x35,00122200x26,x15,222122221x37,11100111x35,221223333222213332221122111322x35,1221122x36,13313200223211331111322100x25,x35,22112x38,111220x25,311133322221x28,x35,10011x37,111320222231x35,x26,1113322233331x05,31133113313x25,331333x211,1x36,112x07,31x36,x18,33x211,322111133331x08,1x37,1x37,x212,322x38,1x08,1x36,1x37,x214,322x36,1x010,1x35,1x37,x213,3313133311x012,113331111333222x35,x25,311113x15,x014,x18,33223x15,32223x111,x016,3x16,33x18,333x112,x016,x132,x016,33x123,32223113x014,313x122,3x15,231x013,31123x120,3113111131x013,11123x120,21323x15,x012,311123x119,31322231111x012,x15,23x118,211323x15,3x011,3111123x118,21113x17,x012,x15,23x117,2x111,x012,3x15,233x115,3x111,x013,x16,2233x114,3x110,x012,x19,22333x112,3x19,x011,13133x17,222333x110,3332333313x09,3010003x112,333x16,33023000231x09,1010003x16,x06,3x15,33130023000021x09,x112,3x014,x112,0",
                        "ONIXFront": "p[1,2,3,4]x070,11x053,1231x052,1231x052,1021x052,10231x052,1021x052,10213x15,3x07,3113x034,10211222133113003x16,3x032,1021310221323313x19,3x029,1012131222212333x112,x027,10010213x26,3333x18,2221x026,3001021x26,131323x16,x25,1x024,30022123232221331222x16,2223321x023,122231123222213132223x15,33322221x022,1323313232311313322231111x28,1x022,1x39,132231x35,1111x28,113x020,11233133313221131333x15,2x05,22x15,x019,1123131332112133x15,33112200022111131x018,12121231212201x35,11333312223221113321x012,1110010111211121001322231x36,1232221112221x011,11110001231011300013222311x37,1332111x25,1x010,11310000110031111x36,111331x35,x15,2322231x09,1111000010300311x37,10113331x35,11113200221x08,1133110001030211x36,1110011x37,x16,200221x08,113111000103021332333113100001333311133331120021x08,x16,000322013222331131x06,x16,x36,120221x08,11331x05,3x26,3311131x010,1x37,12231x08,113332100001322223311131x011,1333313331321x08,1333221x05,3x18,31x013,1x36,x15,x07,11133221x07,31113021x015,13333x15,x08,1111331x011,3113x017,13x18,x08,x16,x030,x112,x09,111331x028,13333x19,x08,1133331x026,131333132221111x07,113332221x024,1x36,100002111x07,113320001x024,1x35,122000221x08,111220231x024,1x35,122002221x08,11122311x025,1313331x26,1x09,x19,x025,131331222211x011,x19,x021,x15,333122111x014,x18,x019,1x35,x17,x016,x19,x017,1x37,x15,x016,1331222001x016,1x38,12211x016,133132002x15,x06,x15,013313331112021x016,133312221320021000013313311333x15,22221x016,1133x15,3200021001x36,x110,23221x017,113111133x26,11x36,x111,2231x020,x15,331223211113333x112,221x025,133312231112x110,0x15,31x026,13333x15,200222x16,00x15,x028,133x16,200022221111x036,x19,20022322111x037,x19,222322221x040,111001112323221x048,x17,x025,",
                        "GENGARFront": "p[1,2,3,4]x058,33x012,3x033,2130000300003313000033x026,2113000130031113003112x08,2322x015,311303113x16,33112x07,233132x015,21113x114,3332022331132x017,3x121,33311132x018,2x120,33111132x018,233x124,32x019,313x123,32x019,2x125,3233322x015,3x124,311112x016,2x129,2x017,313x126,3332x014,21323x129,32x012,213003x127,32x013,2130003x125,32x013,231320103x19,323x111,32x014,231130103x16,320003x112,33332x08,2323113202x15,3x06,3x114,32x07,23332311133x15,32100002x114,32x07,2333323x111,01002331113x19,32x07,23331123x112,33331111323x19,3x06,2331111231130x113,332223x19,3x06,23x15,231113233x15,3223222303x110,32003003x16,231111303032032023000323x111,3231303x16,23x15,2030300300030023x113,311300311133233x15,23003003003023x117,2002333200333x15,33003032023311133x112,30000220002333x19,222231111333x17,2x15,2x09,2333x116,22333x17,211113x010,2233x114,223333x17,3311112x011,2333x112,2333x110,331113x012,2233x111,23x112,3211332x012,2323x110,23x113,321132x013,33233x19,23x113,21132x013,2331233x17,23x112,3211132x013,23311233x16,23x110,322x15,2x012,23311112333111123x18,322111311132x010,233x17,2231112131311132211133111132x09,233x110,2311312121122x36,x15,32x010,223x18,3322333030332x36,13x15,2x012,22x36,22x013,2x35,x16,32x035,223333x16,2x037,23333x15,32x037,2x35,11132x039,2x37,2x040,23322220000",
                        "HAUNTERFront": "p[1,2,3,4]x016,2x016,2222x020,2x022,23132x011,200002x06,3002000200200020000231132000202x05,222x013,2x010,20023111322x010,2332200002002002003000230300223111132x06,2x05,233322000032x013,2223x15,3203x010,231133222x08,x210,3x16,3200003000200023111133220002222x37,x110,320020002x06,2x16,33222333x117,32000301x08,23x17,233x120,32002x05,22200023x16,23x122,320000222333200023x15,23x123,322223331113000302311113x125,333x16,32x05,2311123x133,32x06,231113x134,2000020002113x119,333113x19,32020023222313x117,33000113x18,32x05,211333x118,2x05,110x17,32x07,2x121,2x05,2110x17,2001020002x120,3x06,3120x16,3202x07,2111100x112,3x06,21100x15,3220002000202311130003x18,3013000031203x15,33322x08,21111x05,3x15,3010100031100x19,332200002023111300031031111011003311102x111,3220022223x15,0010103111133331101003x17,2213220002x35,1211300x114,0330x16,233322x06,23x15,2111333x18,31110010x16,331132002000023x15,2x113,00110013x15,231111222x06,23x15,0231103110011020102x17,3x15,2332x05,222x15,001100110001010003x16,2311112311320002x35,11110012001003001300x17,2x15,3111132023x15,32111001202001001110x16,3311113311113223x18,3111213010011011131111222111123x15,3223x19,2x15,2132x19,2333211123x15,32023111x26,3x117,23113111323111133202231233111323x114,2311132113231113331320222311132233312x110,231111321322311323111200231113223313232x18,2311113223223113231111202311132231132313223111123x15,x25,31122311113003111132311323113202231123111132311133223111132203111323111231112002022123111133x16,2311132200023132311133111320000303233113223331111213222x05,23231111311113x06,200233332122233111223202x07,3111311113202002x05,22221112022333222x010,31113111132x011,23111132032222x012,2333231132x07,20200002311120000200002x09,22202332x05,2x011,2313200002x018,22x020,2222x011,",
                        "GASTLYFront": "p[1,2,3,4]x080,2x058,202x045,2002x012,2x034,2x014,2002x07,2x027,2x07,200002x05,2002x030,2x06,32x05,200202000200002x036,2x05,2222x011,200002x023,200202030322003022220022002x07,2x014,2x06,232202202300322200302002200002x022,202002022000223002302020022023002022x022,222030020232223230232320020032x08,2x011,20000220202032303322233203230322322002002x06,2x010,20000200232300323230232322332300230020302x013,22000202320230322332322232322223200220302x017,2000220023323232233233323233x25,303200020002x07,20002203022332232222323323223223132202202002x06,2x07,20020020033232233232332332323312232300202002x010,2020202202323332223323323323333112320x25,002002x09,222202202232x35,2332332332331113x26,003x07,2x05,2022230323233323233223232233312213323032022020002x06,202022032x35,2323323323233331200133332023202202x010,2022233332323333232123333112000332323232022020002x08,2333323222333233313233312x05,333223222023002x010,221232232333133312x35,12x06,3233322300322002x07,20221333233231232333233312x07,332323323222002220202x06,213333233231331333312x07,33323332223203223x010,221113333231233313312x08,332213223222202x010,2002122111333312131312x08,2332332232322220002x09,2231022211133121112x08,2x35,1332332202220002x07,32330000222x17,3001x05,x35,13223222200202x08,202323x07,22x17,010002113331133x29,002x06,20023223x07,12x17,20311333311332323x25,0202002x06,222232x06,102x15,3111x35,1113222322032202x09,200022233x07,1131311x36,1001332220202202002x011,322322320000111131x36,111000322323x26,02x08,20020323x25,311331x37,x16,0013222320320200002x010,320322221x38,x19,310022220000320202x09,20020232202311100011133x15,33310322223202002x013,203323323333110003x16,32233332232202002002x09,2000022302333323110011113332320x26,3003x08,2x010,200203232x35,100x37,022022033320202002x013,2002032303303223103332332022323323233x017,2x07,32322232233132322322232022203x05,2x015,200220000332033033233222020022003022202002002x013,200002032303332220x25,020230230002x019,2002x07,22303232303222022332302x06,2x017,20020020022022300002322202020222000200002x029,232032x06,2200002x024,202002020002020200002020022x05,2002x029,2x07,2x010,2002x030,200202032x05,202022x040,2022002002x09,2x041,200020002x0136,",
                        "CLOYSTERFront": "p[1,2,3,4]x083,1x023,31x05,213x020,31013x019,3100100032211x015,311121012113x015,1000210001022213x010,1110000120312221113x010,1002231000010222112x06,31x05,2210031x26,3133x06,1002221x05,10022233100001x05,22211002312222x37,10010022231x06,100222331000010221111310223x15,x37,1030022231x08,100222310000311133321202231333311133310010222231x08,300022130011133322221002231x37,1110000322331x010,1000133113333x26,100222133332223312001221331x010,310132331333x27,12022231333322233111222311x013,1322233111x26,3x26,31333322223312221x017,1222233x28,1x27,133x26,32222313x015,313x27,333x211,33x211,3121x014,3121x25,111333x26,3233x25,1133222231231x012,320x26,1002133x214,100133x27,13x011,30x27,102231222x05,x25,312003132222322313x09,300x26,1222232200011100022220002313x27,331x08,3100x26,3x26,0033x15,002222022233x28,333x07,30000x211,003223311110x29,1x28,331x06,31x06,x28,00122333x15,0333x214,3313x05,12x09,2222001222333x16,003x28,0002233331x05,1x06,2200020001222x35,x15,3002222x08,x35,1300001000023111x05,132223300003311123x08,1111003332100001202112223x15,32222003131003333130003x19,0332100001221122333311113220031132311033323x16,31111311001x06,111123333x15,3003111320231303x25,00133311133111x09,11033330011303x16,323111300222011002331133111x09,11100021100031x05,3131130033300133110003133311x09,110x17,311110001001100100011113331111013331x09,11330011133331111x05,11x05,x15,3333111013331x09,10331011x35,x15,300111100x16,x35,11011331x010,10311101x36,x115,31113333111011313x010,30311100222333x112,2003113333110011101x012,32311100002333x18,20030311x35,00111101x013,102x17,0213311132x06,111333310x15,01x015,102x17,0113331111320311x35,10x15,01x017,102x15,310111333x16,x37,0x15,201x018,30211133102111x314,0x16,013x018,1001133321102211x310,00333111101x019,30023332222110021133330000333200110013x018,100x27,3331100222000133222010000231x018,3000222000013x110,3320001013022231x016,1023000011110x110,332013110001002231x014,300023311102210x18,33201331x05,3002223x012,300023300001233103x15,332011331x06,100221x012,100221x06,1110100x35,2010011x08,10231x012,30221x012,313x05,3x014,311x014,313x013,10231113x049,1002233x049,102233x051,1133x0196,",
                        "SHELLDERFront": "p[1,2,3,4]x091,13x038,321x011,11x024,3101x09,1001x024,3201x08,102213x023,120x18,22232213x017,331111001x25,0311x25,13x013,31x25,300003331122233322221x010,1x27,033311x25,0001111222213x07,1x27,031x28,001322223321221x05,3x26,031x28,0001x27,112213x05,1x25,31x28,00013x27,012113x05,3222231x28,00001x28,032210110000122213x28,00013x29,01221121000013213x27,000013x29,00121323x06,1133x26,000013x29,003213231x07,13x26,000013x29,0021132011x07,13x25,000013x29,00033220101x08,13222000013x29,000212203001x07,11322000013x29,0002122110001x06,123130000233x25,x07,3222000021x06,12331120213x25,x07,2122x05,1x06,123333x15,3x25,x06,2122x05,21x06,123333112011x25,x05,21222x05,11x06,12333110000113222200021222x05,211x06,1233111001013031332231322200002121x06,12311311003113x19,32002211321x07,12133x110,3003x19,3321x09,1233x110,00101111x36,021x09,12331333x16,300x15,x36,021x09,1231x36,x111,x36,0211x010,2102223333x110,x36,0211x010,1022232233x17,31x36,02131x010,1022320023x15,3311x35,021131x010,10232000031x36,1x25,0110131x010,1222200001x36,22x16,000011x010,1022000021x26,11x023,122002210x16,x026,x16,x027,",
                        "MUKFront": "p[1,2,3,4]x037,31113x049,11002221x047,10000222213x044,3x05,x26,1x043,10000222233221x042,100022223331221x036,3121001x25,333313231x034,30000111122233331332331x032,3x05,222211333113333231x031,2x05,2020222111x36,2231x030,3000020202222x39,21111x029,100x25,3x25,x37,2130001x028,1x25,3333x25,33332333x05,1x018,2331113000122x36,233222332231x05,201x014,3112x05,2113011x39,22223020100002021x012,31x06,202023311133111333323220202102020221x010,11x07,202020233112100011x35,22000120x26,1x07,31x25,x05,202222313121x05,1333320202233x25,31x06,3x26,3x05,2223311221321x05,1311320202133222331x05,13222333223223331133222232210000133313302331x36,10000x37,20313331120003000x25,1000123331x36,1133310000322333200023112x06,32000022231001233331x37,131x05,1222200022x35,010000332220002310010x314,10000300200022x311,2x35,x25,331001233331x38,100001x05,222x37,x28,33322233331010323331133311310000120020x26,3332200x26,3332233332110122333311113310000130x28,x35,200022332233323332231021223333113131x05,3x25,32x38,200233332x37,2233121022333133321x05,13232x37,111132023311223333232223123122231333121x06,1x37,x18,3223111123333x26,122331113333121x08,133x112,223111122333x26,1122x38,101x08,1333x111,223111122223223322132222333231131x09,1233x110,323111132223223332131x26,33001x010,12313x110,23x15,x25,x35,13312222131x013,301013x19,03x15,x25,3333122323111331x013,301013x19,03x15,32022x35,22x39,1x012,3210013x18,03x16,2022223332x310,1x012,1310013x18,2311133120022232x311,1x013,131000x19,32132221320x25,x35,2233331x014,10000x19,32122223120x25,3223322233331x013,3000x18,3132122233120022022223322223331x013,30003x15,332132122333120022002223332222331x016,131111322213012333310002200022x35,223331x014,1131113200213013333130002220002x310,1x012,313311133x25,10133311000x210,x39,1x09,13212111133322231213310100022223x25,x310,1x07,302121111x38,1213312300x27,332223333233331x06,1323001111x38,123133x213,33x25,323231x05,10031003111x37,1022112222331333x26,x35,23231x05,3200013223111333311322233203330x36,x26,x38,10003322022130023x15,3300022223331x39,x27,x36,1003332223313x06,222200222311133331111x36,222323232331011x38,11302222x313,x19,x36,23232333100011133x113,x37,x119,x36,111x06,x111,000x123,0000x16,x028,x113,x018,",
                        "GRIMERFront": "p[1,2,3,4]x029,33x014,33x017,33003003x012,3003x015,300333223111x09,3001x014,30000223330021x07,300223x013,32222000022231x05,33x25,011x012,122000222331x05,300222200021x011,13x25,3331x06,322232002221x012,332x36,1x07,1x28,1x012,13322233331x08,13322233313113311100013332x35,1x08,1x36,1130000233331312x39,1x08,1233313220002231133312x39,1x08,12223003x25,3100012122233322331x08,10222101332233x05,3232222002331x08,1023000122333100100131022002231x010,1210003002331x05,131200002331x010,121001x05,23100013312000223331x09,1101x26,000231133232000233331x09,1122x35,22220023320022022313331x09,13x17,33222x05,232022133331x09,1113x17,23322022233223132331x09,13133x16,21331100213331322231x09,13123x16,2111132231211x25,131x08,13322x16,2111333221x26,00231x08,133303x15,211122223122220020231x07,13331031111323132232332x06,2331x07,13331031112233132232133220002311x08,12231031120023130212133130003121x09,12310313000231222101333130031231x08,13310312000331202121322312212231x09,13123320023330223132003133122331x07,312121332233120231332200311323331x07,102131x37,002x36,2222x36,1x07,102131x35,10023313311133222333131x05,12223213333130233313323311133311331x05,1322303133110233113322x35,111x35,1x05,33310231130231113322x35,2x38,1x06,11120x25,3111x310,112233311x09,112022311113311133311100x15,x012,3x15,3x15,000111x013,",
                        "DEWGONGFront": "p[1,2,3,4]x017,111x043,1122211x040,1000222211x037,1x07,22211x034,1x010,22211x032,1x012,22211x030,1x09,3110022211x025,10012x06,3322231002221x023,1010012x05,x27,31022211x021,10010122x09,22223002221x020,1002111322x09,22231002211x017,31023122211222x08,x28,31x015,100111x05,21222333x05,x28,31x013,32x06,2220001x25,333110x28,31x012,1120000221100001x29,11113x25,31x010,31010000211010001x210,x35,1222231x09,111300002111100031x28,33331101222231x07,3133222000011000021x26,33311100001222331x06,100031x012,3122231111x07,1222231x06,1x017,231111x011,12222331x05,32x010,2x06,223x012,1x26,31x06,122x06,221x08,211x010,1x26,331x06,1231132221x011,2311x06,1x27,331x07,11221113x014,22110011x29,31x06,10122101x016,223111x210,31x07,122221x018,2223311x28,331x06,122x022,2223331x27,331x06,12x014,3x09,2223331x27,31x05,112x013,223x08,2222331x27,31x05,113x014,221x08,2222333x26,31x05,121x015,21x08,23223310002223100001021x016,210000300023223100002231000010223x015,2210000300223233x05,210000102221x016,21000030022321x06,210001002221x017,2100030002231x06,2300100222233x017,10000300221x07,300010x25,31x018,1000300221x07,10001222322231x017,100030211x07,3000012232222331x017,111011x09,1x05,12322223331x030,1x07,1122233331x029,1x010,111333101x027,1x014,11100031x024,1x023,1x022,1x025,13x018,13x028,313x013,11x033,3113x06,313x039,311113x016,",
                        "SEELFront": "p[1,2,3,4]x070,31113x013,3113x025,3x05,1x011,1222213x023,11x05,1x09,100022221x013,1x07,3x08,3x07,1x05,2211x013,1x06,322x07,1x06,1x06,22221x012,1x06,122x08,100001x06,x25,1x011,121x05,32112x07,1001x05,22221121x011,121x06,12222x07,1010000x27,11x011,1231x06,1x25,x06,30000x28,31x010,10221x06,3x28,00010023113322231x010,1100231113000313x27,000231001113331x08,110100231000130000311113200211x06,111x08,1200102231x05,11x07,1300231x016,1x05,1231x07,21x07,1002331x014,10001000110001x05,21x06,30002331x013,300101x06,101000023x07,3000231x012,3x020,21x06,10000231x011,100031x07,31x06,23x06,3x05,231x09,30001011x05,10110000222300003x06,2231x08,10001111x05,11110000222100001x06,2221x08,1000011x07,110000222210001x08,2221x07,1100111x05,3111301x25,1001x09,2223x07,303100010113x05,301x25,11x010,22223x05,3001x05,111x05,1201x25,1x011,22221x05,100010002313x05,30021220221x09,x25,3x05,300221x28,001002312000021x06,x28,3x05,122331213231322322331x07,1300x210,1x06,3113313323313123331x010,13x210,1x09,131323331101111x013,13x28,1x08,1021303331x021,x28,3x08,1001303331x023,x25,1x09,100013331x024,x25,1x09,10000111x026,22223x09,1x033,2221x011,1x016,23x013,22223x011,1x016,231x011,22221x012,11x012,3000231x09,22221x012,121x012,100023312x05,x25,1x013,1021x010,2100022313x29,1x013,100221x09,2100022331x27,31x014,10022212200002221000222231322231x015,1000223113x27,30002222331331x016,1000222310013x25,3100x25,331x018,10321233x05,11322210x26,1331x018,1313311x08,311112212233111x019,1111x015,112133331x041,x16,x017,",
                        "DODRIOFront": "p[1,2,3,4]x077,x15,003x047,100200131x046,10020003110311x034,1111000100020031103111x033,1000010120220001100111000111x027,1020000112202020110313011100011x024,1002000021x25,0x16,01200002001x023,100020002122231123x15,22000200001x022,1000200021323122221322120202200001x022,1000220223131x25,3222212022x05,1x022,100002222311x212,1202x05,1x023,1x27,31100x210,012220001x025,1322223311100x26,00031x26,1x023,10013313331211002222011131322231x024,1100131333121010222010113133331x025,311001133331211122211113313331x027,11003113331x210,3331331x028,311011013331223113233331331x030,3x15,0133311000133331331x030,1131113111331100211311331x030,1002113223111310021113111x07,311113x017,10002132222313310221113331x06,3113x020,100031x25,3133102311323331x05,113x020,1210x28,331312213323233310x15,x021,1210x25,0002311123122323333x16,311113x016,12112222x05,311121322232331132013x16,3x015,121222202311131112122223111322201111331x017,1x26,111013311131222311112222031302231x017,1x26,1111331111222231113x25,030222031x016,1311x25,333111x25,32311x211,0031x017,100122333311323223323331x211,0011x017,100013331113332313232311x211,0111x016,1000x15,0011333311333311222000x25,0131x016,102211x06,11331111331113201100x26,31x015,100211x07,x114,20111101222331x015,10211x09,x111,013201011222311x016,1221x012,x18,00013x25,3331001x014,1021000011110011113x15,x05,11x37,10001x013,1011000122x15,333x16,x07,x18,22201x012,1210001002123x16,00131x013,11112201x010,1210000120123112110000131x013,x15,2201x09,1110000121103112310000131x014,131011201x08,11x06,11221103100001331x014,1310001201x07,1x08,123113310000131x016,131000121x016,1210111x05,131x016,1310000121x016,1x09,1031x016,131x05,11x026,121x018,131x05,1x025,1231x018,131x030,1131x020,11x023,x17,23131x020,1x022,1022332331131x042,122311231101031x041,x15,03100001031x043,1031x06,1233x043,11x08,111x026,",
                        "DODUOFront": "p[1,2,3,4]x067,11x036,110011x033,12002221x031,133x26,1x029,130132223331x016,111x09,131132230131x014,1100011x07,123322231131x012,11x05,2311x05,1x27,3331x011,1222000222231x05,12112222331x011,123x29,1011100100132331x011,1230322223332313231110231331x012,1231322230113312323102x15,x013,123132223111331223102111x016,12332222311133133102111x017,1x28,x35,131021111x018,1211x26,3331312133131x017,11001222233313331x36,1x017,100122333311x310,1x016,100213331111x312,1x015,102x15,3223333232x35,1x015,1021000013200232323233331x015,101x06,120002323232331x015,1021x05,132200223232331x016,121x07,11220022223311000011x010,11x010,1132222311000031331x08,121x011,11313111130031133311x06,11x013,111103x19,21331x019,3113000031111011211231x018,111x07,310121210121x018,111x010,121010011x018,3113x010,121x024,111x011,1x025,3113x037,111x035,x17,x031,1121311331x029,102121001131x029,1101x05,11x030,11x023,",
                        "FARFETCHDFront": "p[1,2,3,4]x060,111x019,1x020,110001221x07,33x09,11x018,10210001201x06,1130001000013x019,1021001321x05,31313001100012100113x014,1321001201000013331001310012101331x015,1321013210003133313012100122102213x07,11x06,132231201001x35,1032300121002311x06,100111000013221222111x35,13012101120001321x05,11002211101322232223311332310123010220012231x06,11132221122223x26,3132331122100220102221x09,113x25,32222322223133331221202231002313x010,133222122231x25,313321313200212000131x09,13x25,132313x25,3x16,322203122001213x08,1222022113112000222132231222201022201031x07,1322310231112311302231221x26,1002210021x07,122100302112100001023123x26,13200310001x07,122103130133x06,12313120222312200132001x07,12210111322311300013331200222132220102013x07,1221010133313113001333120222312222100231000130001323130111130113001331x26,332223120031001021300133311322310113003331x26,3222213220310010000311331322000011200133312000x26,31222013000112000011322x06,311133312x05,x25,1322231x06,312000132x09,2313312x05,222231222331x08,31201332222000022221313x05,222312223313x010,1113222000031132312132000222332222331x013,122x05,31322113213x212,3313x012,12200002x16,3222213x210,3331x012,12x05,210002113322213x28,333313x011,1x07,112200002111331332233x19,32x06,112x07,3311120002222x18,x37,132x06,12x08,3213333111x28,x35,2x15,2x07,12x08,12133332333111x27,x36,x16,x05,12x06,212133332000223331112222x39,031000012x05,212133332x05,x25,333111x38,01131000122000112133332x07,2222x36,111133332133100001231122113332x08,222x36,11113x15,2313x05,x15,30132x011,22x35,11110000233113x014,132x010,2x35,1111x08,22x012,1112112x08,23333x15,x021,13000221132000023333x15,32113x017,x18,221132233x17,33x25,113x011,1112x07,3302x19,013001113200011113x05,1x06,223130022221333x05,1220001113003000130003111222311x05,221322x07,12220000132212001x06,3111131302221132x010,112222x15,3111x015,11113x014,31113x011,",
                        "MAGNETONFront": "p[1,2,3,4]x023,111x043,1320031x040,122333001x010,13x027,13x15,31x09,1221x012,31x013,1120211x09,110021x010,1221x013,11113x09,1100001x09,120011x010,13x05,11x06,1133001x010,1000011x07,13x09,130001103331x012,1003211x05,1x013,301102231x014,13330110001x05,3113x06,1122221x05,1100001100013330110032000100001x05,133321x05,10210012210001333210120023x06,300001333110001100021122001000133331320021x06,100003331110112330021120003110113331x25,1001000100001333111322333110110033311113331x25,3x06,300001x310,11x05,11x35,123311x26,1000010020231x37,11x09,11x37,11x27,3113202020331133111x013,1133331003111x28,11102010011x018,11110001020133222210201021x019,1011x06,123213333221232121x08,11x09,100011x05,10201x36,1020103x07,10011x07,1102311x05,111x38,11121x08,120011x05,101133211x06,11x38,2131x09,12011x05,300112211x08,11x35,1310111130000121200100001023112211x09,3111311321002011110231201x05,133312211x010,13111321002020213001011x07,1332231113x07,13311321002020200331x012,13132000231000031310021310020200001x014,12x07,21000011001133100020200001x012,12x09,2100003110011x05,2x05,1x012,32x09,23x06,1x08,311300023x010,322x09,1210110122x06,1000010021x010,1222x07,32121321122200023x06,3221x010,1x25,00022303003021x27,10010001221x010,1x29,33212132133x26,1x06,1223x010,3x26,022331210110013111223x06,321x011,31211x26,333x06,11020122100001221x012,133331x26,1x07,12321322311322111x010,1x36,122221x08,1020133x25,1122211x08,122112212231x010,1113332222132222331x06,13211122113x014,113222213331133001x05,133112211x018,31113133x15,0111000100111321x024,133113011113000100110011x024,133310001130000x15,001x026,13001x010,1101111x027,12111x012,111x029,1113x044,313x06,",
                        "MAGNEMITEFront": "p[1,2,3,4]x0293,11x037,1301x035,1301x036,1212102111132x028,1012113332211000011x024,13302200231011221x022,13x25,002211022211x020,21x29,1330031221x019,132223332221331112221x019,122230003221333100011x019,1223x05,3221333311x021,12230100032231111x022,11323x05,3233313x021,113312230003223331111x017,110003132233322333120301x016,120031113222233331103231x016,1221103311x35,113210301x017,112000x18,32000111x019,122110101222x029,110011113x035,10301x035,31231x036,2112x0420,",
                        "SLOWBROFront": "p[1,2,3,4]x029,1113x038,11x011,13220123x17,3200x15,x018,1301x09,13332311x35,2222131332001x014,11112001111x05,13333133x210,132211001x013,12012000203x05,133313x215,100121x014,131200001x07,x16,33x211,1322221x015,112200031x06,31333x26,311132221132231x016,32200003x05,3133x27,310001322231331x010,1300001322x05,1000x16,3x25,1x05,12222311x011,1010001322200103011200002113333100100122223312x010,1201301332221212122x07,211331x05,122223313x010,32200111322120111120002110002113100013x25,331x011,12212000112201323122221x06,2x15,3x26,331x011,132100222120012003111222x07,113x28,331x012,13200022220030002101111222x05,2113223223331x012,31200002220100003x19,22x05,21132223331x013,31010000130002212011113001122x05,212223313x013,12101x05,22231200010110x15,22210212233312x012,132101x25,31122000102x19,212231233312x013,121302111332220000102211333133312221x35,1x013,132132001222x05,22022213331333312221333312x013,122132001x06,222233201x36,110221313312x010,100013231322x09,x25,x18,00003113331112x07,10100132213223x010,2222312221x05,11322223312x06,1210001322133x011,22311112101000133x26,331x06,1201011332222003100002231113200130102133x28,312x05,1320133113332221012211132x05,212001x35,0x26,331x05,132022223x17,201132x07,21320213333100x26,31x05,3121220000x25,13001x07,x25,00133331000x26,31x06,1312x09,21320010000x26,002133112000x25,331x06,3122x07,222033200100002222002121122000x26,331x06,3122x08,220333201x06,2221121220000x26,3312x07,132x09,2x35,1x010,22122000x28,331x08,1322x09,23332x010,3311x210,3333132x06,2313222x09,22x07,31130001x27,x36,1331x05,2313113222x010,223113x07,1322x38,11333130002313323113x27,311113x09,2031x38,11x36,10003113x26,3x15,3x014,23021x36,1133223333130211322223x07,200023x08,2231223x16,33x25,33331031132221132x05,300223x05,223111222231333322223113333121313223021132000210210002231112312222311x07,22313331313132220002113202102122311122000322221x05,x27,313311331322200001213202103111221x06,2221x05,x29,31311332132210000223102103132x08,22210000x29,32313113221322210001320003002213x06,12211110x211,32313132221322231322x09,2211300132100001x211,32313132221113x25,x013,22132231000013x210,32312133222101113322x09,x27,3111120213x210,3313021322230013111133x27,333x17,31122133x28,333120013322231221000x113,00011333x16,3x26,333130002133x27,111x27,1000331011322212100012222x35,12x05,1333222232223x25,3233322311322212012021x38,12x06,211333x218,3113221130001221x36,112x08,2311133x211,33111132211320000211x35,1132x012,231111x36,x15,333211132x08,3x15,22x018,23x115,322x011,33332x09,",
                        "SLOWPOKEFront": "p[1,2,3,4]x0125,3x014,x19,x016,1x011,1113x27,311x013,30113000031113x213,13x011,10000311130x215,3231x010,3200002020202x36,222232323233x010,12x06,202x17,333323232331x011,31x25,113x07,1132323233313x012,31113x011,3132323331112x022,3x16,x36,11112x019,311333x25,13x17,2x016,1111333x29,13x15,2x013,113213333x27,0022211113x011,31322213333x27,00002200112x010,3x25,1x35,x27,000021220013x08,3222111x36,x27,31132212220013x06,321132211x35,x25,1222212212222x07,3013332223x16,3331x26,121322223x05,101333211332002221112211001231322313000011333133222200223331212200122133310100002133100x28,300233132231223133101x05,2130100x27,x05,3313312233111101x06,110000x26,30001003311x35,12221x08,10x17,333x06,3231x35,10022x07,1113x05,23111x05,323331131x010,2312x012,1100322x35,111x08,111x015,2111233332200311x05,1321000100001x09,21333x25,003100213221000x28,x08,213x26,0002101013331223x17,322220030213x29,101013333x117,002133x25,311101221333312011x35,120110002133332231001012211331031x38,1111000131x36,10210011321110011x37,1110002113x17,212000x25,31000x17,3200021x210,11x09,2213x010,2311222000x25,x014,113x05,231112x029,x16,02x019,",
                        "RAPIDASHFront": "p[1,2,3,4]x072,33x011,31113x024,2x06,1111000033x09,1x05,31x022,2x05,10012110003x07,11x08,1x021,2200010000120110000130013231322200031x020,2x09,132210001031213222132220001x012,2x017,13223000102311320021322220100011x05,22x08,3x08,13221000012213x05,2133322031100310022x09,3000100001222230000132x06,2231332002220001x011,3000030001x25,100001211x05,22221322332203331x09,3300012301320222300013101x05,x25,1x35,03x013,300012213222022300313213x05,x27,133332033x014,1x26,002221012222x07,2232322x35,20001x012,12222x05,22313213x08,2231322221332200003x09,3122x07,2233112x09,223113x25,133220001x08,1x010,2223313x06,3002311133220022133222003x06,1x08,3322233310100003223x15,33200002213222201x06,3x06,33322x36,103x15,3001311332x06,21322200100003x05,233322x37,1x08,13333132x07,233222000300010002233332x38,1x07,102333132x08,21222000100030002233322x37,1x07,1002233132x08,2212200030000302233332x310,1x05,300022131x010,231200003000102233332x38,11x05,3000013331x010,2212200010001022x312,1x07,1001322231x011,231200030001022x35,2x35,13x19,3x26,3002x08,231200300001022x39,1132x013,22220002x06,2231201x05,3022x37,132x024,200002231131x07,1022x35,12x023,22022022231331x08,3022x35,2x025,2302222331331x07,1010223331x011,2x015,2322223133323x06,1002222333x011,22x08,2x05,23322313332223x06,12212233x011,2222x06,32x05,23133113322221x07,1101221x011,231222000212x06,21311113x25,1x010,131x09,2331333x25,32x06,21100011x26,3x05,2x05,1x07,223311x39,12x05,210003111122221000022x05,1x06,2333x113,3x05,21003111311222230002x06,1x05,223311x36,1x05,12x05,1001113333112210002x06,10022223111x37,x07,3x05,30031x35,22223x05,1000100002231131x36,1x07,1x05,23000113322231x06,10003000223130012x35,x09,1000021x05,311113x06,12101000223100001233331x010,100021x016,102211000221x05,122333x011,3000231x015,10322300021x06,322231x012,100221x016,133200021x08,32231x05,2x07,100231x015,123200023x08,12221x05,22x07,10221x016,1230023x06,11012221x06,22000013202231x015,121002100020012112223x010,3103320223x016,100023000220013322223x011,313302211x015,300030000220013332221x013,31322221x013,300021x09,1112221x015,3322331x012,100221x011,12221x016,1x36,x011,10223x012,13221x016,33331113x010,30221x012,113331x016,x17,x010,x15,x012,x16,x016,x17,x010,x15,3x011,3x15,x016,3x15,3x010,3x15,x012,311113x016,31113x07,",
                        "PONYTAFront": "p[1,2,3,4]x0185,13x012,11000113x024,1321x011,12213300213x020,130023x010,1221320000201x016,31300001x010,12223x06,2221x014,3x06,23x010,3203x07,2203x013,12x05,21x010,10002x06,222201013x09,3x05,21x011,1003x06,x26,01001x07,32002221x012,1002x05,223x25,02221x06,1002220013x010,1002000022123x29,3x05,30222200001x09,1032000021231x29,1000030x25,x05,1x08,12320000312313x28,1000010x26,x05,3x08,1322002103313222022233000010x26,x05,1x08,123200320221332200130031003022223200001x010,12003x05,233200001132010010222322001x010,13x05,1100023300002222010010222332000312x07,1300001010000233x26,0001013223333200003x07,320000111x05,233322x05,21012233332200223x05,3x06,11x07,222333310022311133332200221x05,1x010,12x06,222203113x05,1333202221x05,1222x06,122x021,133x25,3x05,1322230001222x022,1322221x06,322232201122x023,133213x08,12222131122x024,311x011,311301012x025,1x020,3x016,1x09,1x019,123x07,2x06,21x08,21x017,11221x06,22100002221x06,223x016,102221x05,221x28,31x06,223x014,1002231x05,223x17,3331x06,21x014,122231x05,221x05,11331111x06,23x013,1223310022221x07,1x35,111x05,1x014,13331x25,1x09,122333311000033001x011,1131x25,3113x07,122333111000310131x012,1x28,1x09,12233100103331331x012,123332211x011,123310001x36,1x012,1333221x012,1233310001x35,1x012,13333x16,3x07,12x35,10001333131x011,1x39,1x07,1x35,110000133331x011,1x38,11x08,11331331000013331x012,1x36,11x09,12111011x05,13331x011,11133111x011,x15,x08,13311x010,12x15,x013,x15,x08,x15,x010,x16,x014,111x09,121111x011,1111x027,x15,0000",
                        "GOLEMFront": "p[1,2,3,4]x0209,311300x15,3x034,31333311x25,3113x029,31300222212000223331x027,1320023x15,3002223331x025,1322311x26,3112233x15,x022,112312222000222231131200021x020,1131222x08,22231122002231x013,11110111122x011,2233112222333101111x06,10022111122x012,22233x111,00010000100033311222x011,222233131x05,1x06,10001000x15,222x011,22223311x07,1x05,10001000222112222x08,x25,3331122200001x05,2100100233311x25,x05,x27,33313111x05,1000221001200x15,x215,x35,131x06,21002231001322221313x212,x36,1101222002312223310011333313133x26,x310,110001112231x35,10001211113311x316,113000122233x16,x05,121x35,113333x112,32000133331313331x06,11x36,x15,3x25,3x15,3220001111331331x08,1x37,11322x06,2231132222x05,331111x09,1133331112x010,21133x27,33311131x07,122x16,3x011,23113x27,33311331x06,12002221112x06,31110023133x25,333311331x06,12002223101x05,313201002113322x36,11331x06,132222331110000313000100031x39,113311x06,1132333310100003113001000211x37,1113113x06,311333311110000103131302021113333x18,x08,x19,3000030011302322x114,3x08,3x16,2x07,3113022122x111,331x010,3x15,3x011,221222x110,3331x011,3x117,322231333x16,3311x012,3x15,3x17,3x25,31x35,x15,3113x013,x16,3x15,32222311x36,x18,x014,1133311x35,2231111x37,x17,x014,322233x113,x39,111331x014,1002233111333x16,x38,11133201x012,3000023311x35,x15,x38,113320001x011,12000223311333x17,x35,11133220003x012,1211133x114,33x15,3220001x011,111332311003x117,3123x15,3x06,311x05,211310003x18,3x15,30111000202113001001000123122310000311113x08,100130130210030132123213313331x018,123133133313310311311131101113x018,31131131113110",
                        "GRAVELERFront": "p[1,2,3,4]x037,33x016,31x027,3001x014,3021x026,1001000331000310003021x025,30001103000103021001221x025,10221130002103021111221x025,12211210021101221221221x025,1112331221113122133311x015,111x07,122213331123311221x35,111x011,1000100110102221331x35,1111x35,12221x08,111000111001122221231x35,1012x35,12221000110012300021210001122111213333100012233331112001001012200x25,0222211113x17,00012233331x05,30231222302111323232311133331110000311133110000302233x25,1003132323131122x35,10030213111x05,10233323231003331x35,131223302310032313331x05,122333113210333113333131112232311000313333110001213331221x35,1001333313112231111000303333121012223311022x15,0022131131311233331000122111222111133100002020220223313313x15,33310001230231223131211x05,20x25,3331333111102133100003222313333132232x05,2022232331333311123131x05,1223133331322210202020222323311333111311113x06,111x36,1x25,12020x25,33120133121133111x08,11x36,x25,1x28,323322313322x16,3x09,113101x215,x36,132323x16,x09,11100122232322221222x36,11233x18,x09,1310x26,3223332200x36,13331222x15,x010,11x27,112331220023311133331233x15,x011,131x27,12313202211222x36,13x15,x011,111x25,00212112211220002x36,131111x010,12211222200011311121x05,2x35,13x15,x09,3022313223220003331x06,2x37,131113x08,3222331232x323,131111x09,31113331232333322x316,x16,x08,311331211x36,122x39,1333312231113x07,10021111311x36,x111,x35,2222311x08,10232313111x38,110022221333320022313x09,11333313111x39,x16,x35,2002331x010,111333310031331x315,132111331x05,3x15,3333131000131x38,13133311112221310000100232x37,10000111131x35,13131311122211x05,10022x38,11x05,1113131313x16,31222111x05,x15,x36,1221x05,311113x18,3312231331x09,1333111221x08,3x15,3102213313313331x09,11100111x016,122213331133331x033,1222x16,2231x035,111x05,12221x044,111000",
                        "GEODUDEFront": "p[1,2,3,4]x0134,111x031,1110112221x027,1112221222331x025,11x27,12311x025,1x25,1223131x027,122122313311x027,12222133111x029,1223311131x06,33x15,x017,123113332100033100022221111x014,123322110031223000222233131x013,1211110001002221112221000131x013,12221000100023002121x05,231x012,13223100300021002123000222231x012,1222100032223x26,3x26,31x012,13222101311x26,11113x25,31x012,132221121013222100001x25,31x013,13233120021221000x28,31x014,13331x27,00x210,31x015,11312213232222310x26,31x017,1122012323231000x26,1x018,122001223210003x27,1x017,12230122210003x25,32221x017,122312221003x26,3322211x015,1x27,133x26,313322221x015,1x29,1222231111322221x015,12331311122223111331132221x015,1x29,331112223313221x016,11x25,3311001x25,31221x018,x17,00001221x26,1x029,1223112221x031,12231111x032,12233331x033,x16,x0163,",
                        "TENTACRUELFront": "p[1,2,3,4]x021,x16,x040,11x06,111x035,1131x05,130311x031,1000110002210003311x028,100011x26,100003331x026,1300111x26,1000313331x024,133x15,x26,11031113331x023,13x15,x27,x18,3331x021,133x15,x27,x19,331x021,13x15,x29,x18,3331x019,133x16,2111222x110,331x019,133111120100112102x18,3331x018,131111221100111032x19,331x018,1311122313x15,2322x18,3311x016,x15,2232133111122322x17,3331x015,12111223222133112222322x17,3311x012,130211223x25,111x26,3222x17,2213x06,111300032233x27,1x28,32222111222333111001x08,332222x05,12x05,222333x25,x38,101x07,x26,0000112x09,222x35,222x35,1001320x29,00012x08,x214,x35,100013333222211222012x06,22211113332222x36,1x05,1x35,x16,2221x27,x18,x310,1x08,113x16,233131222231222x17,x35,11x012,x17,0001011113010031113x18,x019,131100x15,000313313331x024,1313311333x15,331331331x023,133331113333x15,311331331x021,133133x16,3x19,331221x020,103111x06,x16,00001301201x018,1000012222x06,112200221001201x017,1x05,1111222x05,11222212001201x016,12x08,11122x05,x16,000101x010,11100001x211,1122x011,21201x08,100010000x19,2222112222x05,2210101x08,100001x05,1311133x110,x25,11001001x06,10002001100123111003310133110x16,0001001x06,120212000112211110221000133101331310012001x07,12211220022111012221000133100121310012001x08,1100122221311012221000122100122121012001x014,1112310001221000122100122121012201x016,12110001221000122100121012101221x016,1210000122100012210012101210011x017,121x05,1210001210001210121x022,1x06,121000121001221001x030,12100001000121x035,1x010,1x064,",
                        "TENTACOOLFront": "p[1,2,3,4]x017,3x15,3x031,31x06,113x026,3113x05,23x15,x023,31113200023x17,x022,x15,30002100x16,x020,300331320221001133313x019,100331322221110x35,1x019,113031322223111x37,x017,31133313x25,111x36,1x017,11133313x25,311x36,11x015,x15,3133x26,31x36,13x015,13111123x28,31x35,131x014,1231123x210,311331331x014,30222322200x28,1113331x015,1033222011123x26,x35,1x015,3x25,01011123223223333100011x012,13222011131232223222331001021x011,1x25,11331x29,310012231x011,13x25,1113x29,310012210000111x05,133x216,331001221000102210x15,332222312222x36,x15,3231001332210023111x36,1x35,113120022122100011321000221111302223x15,312202231221x05,121x25,102213223102201312222311221x05,12111222100021331200001312223111231x05,1321113331032133103001332123311221x07,12x17,0121331010x16,21111231x07,13211132211121121113223112133131x09,1223113223331133332233112113331x010,11333111102102231133131131331x013,111100010103110011000010111x021,x15,x0338,",
                        "VICTREEBELFront": "p[1,2,3,4]x026,3x16,3x039,313x05,1x07,2100003113x029,1322310010000222002103x15,3x027,3x25,311000x25,3222x17,3x026,x37,111022220x27,x16,x026,1x35,x15,323x29,11133313x024,133x110,x26,00001333223331x022,311300003x15,22220002223332323333x022,1100001x36,122200x25,3x25,x35,x020,1100001333311112200x211,x35,1x019,1130001333202111220223x27,x39,x017,1110000133312021120x26,0222x39,1x016,13110003333111122120x29,x310,1x015,133110001333x17,0x26,x39,113333x014,33331100013333x16,02x39,1111300011x015,123131000013223x15,23x19,331x022,12213330001320231111311112221111331x020,332213310000130023x19,202111331003133x014,12221333100011300033x18,2021333100001213x012,1222133310032213200223x16,20033331x05,1221x011,1222133310012231132222x35,12x35,1x07,3221x010,322221333001001221132222x39,1x08,12223x010,12231333103003221311x310,13x09,32221x010,1333313313210001x35,x18,3x012,32223x09,x36,1311223132233122122213x014,12221x010,1x35,111x28,312232221x015,122213x010,1x35,110020022223100001x016,122211x011,133331302x05,22233113x017,1222323x011,31331002x06,2223331x017,3223231x013,311002002000222333x17,3x09,32221231x015,100200300200233x110,3x07,12223231x015,1002x05,200233x19,331x06,32232331x015,100220000200223x16,x36,10000122213331x015,1002300202002231111x39,13013331x35,x015,300200030200223111x312,1333313331x017,302x05,2002231331111x38,11331x35,x017,102002002022231x36,x112,33331x018,130203002022231x315,x16,3x018,31102x05,22223x15,x38,113x025,11132000202223310000x17,3x028,1131320032222331x039,3130033x26,3331x038,313000013322x35,13x036,311x06,x38,111x035,3113x07,1x35,1113x035,111x010,x16,3x035,311x012,3113x037,111x018,311113x028,311x018,x38,13x025,111x013,3x15,33x27,313x022,1113x08,3x19,x26,x06,313x020,1111333x114,2222x05,313x023,3x113,3x05,3x06,313x028,3x15,3x012,311113x0133,",
                        "WEEPINBELLFront": "p[1,2,3,4]x0118,313x044,10001x042,3x05,1x041,1002223x041,32223333x039,322231331x029,31113x05,133331331x027,31x35,10000x16,333x025,3122x36,10003x15,31x025,1322x35,1110013223311x025,12322333310001132332331x024,1232223331000013223322331x023,32122233310001320022223331x021,3223222333310012000022223333x020,1222322x35,1130022022223331x020,10221222x35,12002202222x35,x05,311113x08,30022322x35,1x05,x25,3333100031x36,13x07,30221222333310000223322333310012222x36,1x06,100221222333100002233222333131x27,x36,x06,100221322211000x26,3113331x29,33331x07,31022232123x28,12222131x210,x35,x08,1002211123x26,32211003x211,33331x09,310101121x25,312111101220000x25,33331x011,3101303222333101111012x37,22x37,x012,3001x38,00110033x06,231x36,1x012,11x310,1000013x09,23133331x011,3x17,x37,113312x05,22233313331x09,132x05,223x15,33331112002231133331331x08,12x06,x29,3x17,221300003131331x07,12000022x37,x25,3x16,3x08,13133x07,3002223x19,3222331111x011,111x07,322223x15,3200231132333111x012,13x07,12223111132x05,2311x35,11x09,3001x08,122211113x08,2311333313x010,31x09,1222111132x08,21133331x022,32223111132x06,231x35,1x023,12223x15,32002311x37,x024,122223x19,x37,1x026,122x317,1x028,31x315,13x031,31x310,113x035,3x18,3x0217,",
                        "BELLSPROUTFront": "p[1,2,3,4]x057,311113x033,1x05,21x031,1x07,21x029,3x08,223x028,1x09,21x027,3x010,223x026,1x010,221x026,10330000332221x026,130130030132213x025,131130031132231x025,303300003322101x026,30022000223101x026,10222200221031x026,12000222230013x026,1000222231031x024,3111031122310013x022,31001310221310031x022,100022102222100313x021,122331232111310311x021,1000222131223103113x020,3200222231311103111x021,1211322333113311113x021,110011x36,x18,x020,3x05,3113333x15,333x027,3x19,331x031,x15,31331x022,313x05,1130131323x021,10003100311013331221x019,1x06,1300101333322231x017,1x010,10133323222231x014,101x09,3001322233200031x011,10001x09,1001x25,33330031x08,1x014,3000132x06,33x026,100003x15,3x029,1x040,313x036,100011x033,1x059,",
                        "MACHAMPFront": "p[1,2,3,4]x015,133111x044,31133300022213x040,13320000232222313x037,1132000222322223121x035,1132000022221333312213x033,1322000x26,3111122231x017,33x013,1322000x27,3113223331x016,3001x012,12200x28,31321333111x015,3000010331x07,1x211,331321111331x015,1x05,10001x06,1x210,331113313221x016,132200100001x05,13x27,3331001133111x017,1322221220011100031332223333110000111x018,13132222122201010001x311,11000011x017,131322221322310010031x312,1101001x013,11331313223113331221000x15,33311x35,100021x011,100002213333113313331001x25,1131013311000222131111x05,10022223133311113333103200022221100111000x25,1x36,11101022233311133x16,00100022233310021000223333133331100x15,x314,1103200023x15,223100223x16,331000213333x15,x39,1001200x27,3131002311x36,1100021332x37,1111333110001220x26,33111023133x27,31022132222x37,x15,x05,13x27,3311312313x210,31213x26,x36,111x07,3332223x15,331313x212,121220x25,x35,11x09,133222233113311322223111132223132200x25,33311x011,1x36,1111311222231222213222132220022223111x013,x19,011x25,13200001222213222002223x16,x09,32223331110212232311130001222213222002222x36,1x08,1202223311211223310211200122221332220x27,33331x07,32202223312112223123x15,3222213322202220x25,3331x07,120222312113x25,111000022223133x26,32000222331x07,3x25,312x05,222000x28,313x26,3220000222331x07,12223313x08,x29,33113x26,1322200222331x08,13333132x05,x27,333x15,x27,13222202223331x08,11333113000022233x17,313x27,133x27,3331x010,11130132023x19,3313x27,331333222233331x016,13x110,33113x26,1131131111x36,1x017,1x310,1113x26,10011110000111331x020,3x110,x28,132011000022331111x018,3x19,33x27,331332200x25,300221x016,12223133113333x25,33311113x27,322221x015,1x25,31331x311,10002133x25,332223x014,3100222231331x37,1113x27,3322233113x015,1200x25,3x114,x310,2331x018,1x28,3x119,33112231x019,1220x25,33131313x16,33100311022331x019,13x26,333x110,3333130310223313x020,1x25,3333x18,x37,1310023331x021,1322x35,1131111x39,131023331x023,1x35,1113310001x38,11133331x025,x17,3313000011x35,11131111x027,311113113x06,3x19,3x031,311113x010,3x17,3x032,3113x012,3x16,3x049,311113x051,3333x071,",
                        "MACHOKEFront": "p[1,2,3,4]x0302,x15,x049,1101023111x045,101010310231x043,10110123123111x042,1010102103123311x039,112131010312233331x037,12211312131x25,333103131113x028,1332131131221113233111x36,13x026,113321311221222132331x39,13x023,1221331312212000212331x36,03331x023,1112132112211100012231x37,03321x022,100113x25,130101221231x35,2303223x020,121001x26,133112221231333303230021x017,1112221122002020112222112313332303230223x014,31331x25,x05,202202221112313303230323021x013,1223312222x07,202222111231133032303230223x011,12222331222000222x19,2331133003230323021x010,1x25,033x19,x29,33111333032230230223x08,32202220333111x210,3333x15,333302230230221x08,122022203233111x311,1113331133330223023221x07,3322032203223x116,322111133330230x25,3x06,13322322032223111x38,1113221222113333030222231x06,1302203223222311300x25,33132213322311133302022231x06,13032232203222133x28,33221213222x15,x26,31x07,1330322322322221333x27,321x27,3112222322231x07,333032232223222213x16,33331x26,3310032032231x09,13303223322322231x36,1111x27,310322032231x010,3133033233x25,3000333x210,3310320032231x012,3133003223x25,3332223322000213310020032231x014,31x35,22220222200x25,00231x26,0332331x016,3113333x25,000x35,200313x27,323311x019,3113333222233x25,03331200x26,311x023,311x35,x25,3333111200x25,311x027,311x39,111331x27,311113x026,3111x35,113222313x25,31122211x026,3x18,2x05,21x35,11x26,1x025,1333111233x06,x17,x28,1x024,1211333100x36,2113311x29,3x022,32222113311x26,13311122221002221x022,1x26,1133x16,311113323120022223x020,3200x26,11x36,x15,33313x27,1x015,113301200x27,x111,33313x27,31x014,300231120x29,x114,3x27,1x015,102231x212,x16,3x06,133x25,31x014,3222331x211,1x012,3133332231x014,12223333x210,1x013,1x37,1x014,1x38,x28,31x012,313333x15,x013,1x36,133322223331x013,1x36,222211x010,1x38,1x37,133x013,1x312,1x09,31x36,1113333113x015,1x312,1x010,3x16,0001111x019,x112,3x06,",
                        "MACHOPFront": "p[1,2,3,4]x017,11101101x031,1000130131x030,1220013131x029,211120131311x027,11222122131131x025,1x26,121311321001111x017,132220002101132231122221x016,1322011132111331111x25,1x014,13222100012213210001x25,1x014,1322211301x25,11301133331x014,1322213101x25,1310x15,31x014,132223111320000311121333221x013,133x26,x07,x25,122221x014,13x218,132221x010,x15,332223x212,31122221x07,11x05,1332313223x15,33110122221x06,100022220133231111x35,11131x25,1x05,100x28,1x37,2222331333222231x05,10x210,11x39,11333x25,31x05,10x27,32222x19,3333x25,31x05,10x26,3313x25,x39,x26,331x05,102222333133x28,x35,x26,331x05,102222331113x08,22200001223331x05,1022223110012x38,2223333133331x05,10222131000012x07,x25,00013311x06,1022231x05,12x37,x25,333111x09,1033310000122x06,x27,0001x011,1111x05,122x36,x27,3331x016,111100x217,1x011,x15,222100x217,1x010,1333222231220x217,1x010,111x35,1x25,33x15,333x25,1x013,1133312222331x35,1133x25,1x014,1111322233x16,0013322221x018,13322331x07,13332221x018,1133331x08,133322211x018,1331x010,133300331x017,1331x011,11x35,1x018,11x014,x15,x044,",
                        "ALAKAZAMFront": "p[1,2,3,4]x029,31113x05,11x032,1331x06,310000213003001x025,1100012002100001000221122110001x022,31100301200002100300002100112100210311x017,30001011220000210012002210x15,222110001x016,100011x25,00221001222210122211333110021x013,311100212111222211000012221012222311131222111x010,30011222x19,x07,11100011122333112231321x09,1001122311322111x016,11x35,1333111x08,3312231133132220101x014,100111133x15,x08,3022123311133111100011x010,31000222x17,31x08,x17,3x15,2220000213x05,31100002223312111331x012,x18,0122200223331113x06,222331122233331x011,1211113101x26,322000022000222233111122233331x09,302233331001222232x07,22022223310001222233331x07,30022333x15,22232x08,x25,3331x05,1222x35,1x06,102233311333312232x08,22223333001111012x36,1x05,122233331302331222x08,x25,3331113333111x35,1x06,1x36,11322333132x08,222231331322333313113311x07,13333131x36,132x07,x25,31331322233122221121x08,1111023133331212x06,x25,3113331223331x25,11x012,11122133112132000x27,313222133331133111x017,1121131221x210,313x25,13331111x022,113122213x28,3313x25,133331x026,1022301332222331013x25,31111x026,10022300112223110013322233111x027,3000220010322101003333233111x029,3100233001221000x35,x16,x031,111223110011x35,11333111x032,1112321001333311x36,1x033,13313220033331113113331x029,311113313x25,333111133111x028,31000021111x25,33111322200013x018,3x05,31x07,2221322223313x26,00001x06,31x09,100003x09,222132222333x25,x07,3x05,301x07,3210001x08,211113121231311113x08,110001011x06,1223112x06,2110001310123113311113x08,13100021x05,1x26,x05,31x06,1002211333311003x012,2221x05,1x26,0223x09,x15,3333110001x011,2221x07,11x27,1x07,311311333113310001x09,22211x06,1x28,1x06,3112133x15,33331110122000x28,1x06,11222x16,331100021x310,1133111x211,1x09,1110012221120022221x38,11x36,11x25,1111x014,1322233132211113223333x15,333x18,x018,1x36,131100001222333100001112231x022,113331111x07,122331x06,1322331x021,10111331x09,13331x06,11333111x019,3002223331x09,111x06,122111331x019,1002222331x018,100022331x018,1x27,3311x017,1000222331x016,31223322233101x016,3002222331x015,30031023233311x016,3x25,33331x014,3000300013311x018,122x36,201x013,10111001111x021,130011110001x013,100011x026,10010003311x046,11x015,",
                        "KADABRAFront": "p[1,2,3,4]00011x045,1001x043,100003x042,100001x06,31x019,31x012,1x05,1x06,101x017,101x012,1000021x06,1001x014,31003x012,3200023x07,1001x011,310001x014,10021x08,300013x07,3100001x015,322211x08,100001300031x05,1x017,121001x07,300022211122220011x017,111021x05,11100200x29,131x016,100211x05,123312200x29,131x015,30022210003100331x25,0x27,131x015,10222331010102331x214,13111131x09,13311331310313311x213,133133313131x07,13011101012333131x29,0111333122133131x06,11113101x35,10210x27,0111x35,11231331x05,300021100113310021102222001213223331221331x06,10022310000111222321022011203222233123311x07,131133100003331223011221210032222313331x010,1121131000100112230122100032223113331x012,1013201010011011331221333231113333131x011,1001300120010001133223222113331311331x011,30012300121000102102232311133331001221x011,1101230210001021102232110313310001221x014,32222300102131022213310211x05,1221x014,1221000121131322313331221x05,1331x015,310001021013122133331221x06,111x020,12x115,221000112221x019,1210001x28,31111011222231x019,110000132323232312211x25,31x027,12323311133222122311x027,11322313x27,3111x028,3021311133x26,1100033111x021,3023112311132222310033x25,1x019,1023310312231222310012223x15,x017,3023310302231222311013223100001x017,12331030223313331331122231x021,301112311233x15,322112231x022,122231022131113x25,112231x022,12231022221313x25,13132231x022,1210022221331x25,13313231x023,13022221333132211331322231x022,30x25,1331011113112222331x021,1x26,1331000x15,2223331x020,110231222311x06,111333311x020,1013310133101x09,1111x022,1110011100011x023,",
                        "ABRAFront": "p[1,2,3,4]x094,11x015,31x020,1321x012,31001x016,100133213x08,3100111x016,1100133223x15,332001331x016,12101333x211,13331x015,12310012200x210,1131x014,103310012000020x29,11x014,1031001220000x212,1x013,1033101322200x214,1x012,1031013x220,1x011,122310122233x28,311x25,31x010,1333101322213x26,31x27,31x010,12231001222213222231x27,3311x09,1223311112222122221x27,331321x09,132310211322122221x25,331130021x08,12212223113x210,331113200231x07,122133331113x27,3x15,32222331x08,13313333111x25,3x16,x36,11x09,1223x17,31213x16,x35,11x012,13100221111333x114,x013,1002313x111,021110211x09,11101112311122003x15,2211122101x08,122112213220112000231122212221203x07,122212231x05,12x05,122212221221x08,122122312233201200221323122313233x07,1221223120001221223311x39,21x07,1x36,1321201133x15,x37,1231x08,1x35,1133122111131111x36,1331x08,1x35,x17,222333111x36,1331x08,1x35,11x27,3331111x36,1313x08,13333131x27,3331111x37,13x09,13333131122223333x15,x36,131x09,1133313111x36,x16,31113311x09,1021310x117,023113x010,123131x010,x18,22311x012,1111x018,1331x037,11x047,",
                        "POLIWRATHFront": "p[1,2,3,4]x0129,3x15,3x023,13x023,3x17,3x012,3113x05,1011x021,3x19,3x010,3x15,300100101x020,1220x17,2x08,3x17,301001003x018,3002011231113x07,3x15,2331100030011x017,1000111223111x07,1111012231100300011x017,12001132223110023x15,211122211001000123x016,130013002223x110,211100211001000121x016,313x05,2223x111,21200111003000121x015,311132000223x16,21121112221101x06,3223x013,3x16,3223x120,01x06,2231x013,x133,2200002331x012,3x119,3x25,33x15,0222200233x013,x118,32x06,22311100022223331x012,3x117,300031111322310000x25,331x011,2x117,3200300x17,0000x26,31x012,3x129,x05,x27,1x013,x130,000x28,31x012,2x130,3x29,31x013,3x131,x28,31x014,x132,x26,331x015,x132,x35,1111x015,x133,33110311x015,3x19,3x124,000211x015,2x110,3x119,3001000011x016,x111,33x115,301001000011113x013,3x112,333x15,303113000100100021100013x011,2x114,2212210003300013003000311000211x011,x114,3212221x06,1300100021110222103x010,3x114,3212223111130000302031101221321x010,2x115,21x27,x05,1022211122112221x011,3x114,321x28,00100223111x27,1x011,2x115,2211x26,11002221111x27,3x012,3x114,32223x15,320223x16,x25,1x013,2x115,x213,3x18,2221x015,3x114,33x29,3x112,3x016,2x115,33x26,3x112,x020,x136,x020,x135,3x019,3x112,32x08,23x111,x020,x113,2x011,3x19,3x019,3x112,3x013,x18,3x020,x112,3x013,3x17,3x020,3x111,3x013,x19,x020,3x111,3x014,x19,3x018,3x110,32x015,3x19,3x016,3x110,3x019,3x18,3x014,3x111,2x020,3x17,3x013,3x112,x023,311113x013,3x112,3x041,3x112,3x042,3x111,3x044,3x17,3x098,",
                        "POLIWHIRLFront": "p[1,2,3,4]x063,11113x042,10113132x010,311113x023,3011013132x08,10000311x022,1011112113x07,1011112311x021,3011113113x06,301111012313x021,10112113111320010x16,2311x021,3123x111,30x16,2311x022,31110x110,30111123113x021,3x18,2x17,302223113x021,3111132223x115,3x021,311132x05,23x111,33x021,31132x09,23x16,333113x019,3113000x16,00023x112,3x016,311300x110,0023x112,3x015,113001111x06,110023x16,3022313x013,31120111x09,11022x15,300222311x012,11301110031113220011223x15,23x17,x010,311211103x17,32201122111303000012231x09,113011031111303113221112313001x05,12231x07,31121103113x05,311320111210001x05,12221x07,1110100113x07,31122311210003x05,23221x07,111010313001x06,113221121x08,x25,3x07,111000110011x06,1112211213x07,222212x07,1110001100111000031132313211300002222313x08,11120011000x18,32211221113x25,31112x08,311300313000x16,3223132313x111,x010,111200313000311322231322113x111,x08,313113000311300002231132231113x110,x07,300031130003x110,322211113x19,3x06,31000031132003x17,322223x15,3x17,3x06,30300012311132223113x26,3x17,3x15,3x07,100313212311113x210,3x19,3333x09,300002221233x15,322223x112,3x013,10022223111003x119,3x014,30222233130000x117,3x017,31223333x05,1111x36,x15,3x021,3111300023x16,x05,x15,x027,3x110,x05,x16,3x023,3x111,x06,x18,3x020,31122x17,3x06,3x111,3x015,31122x18,x08,x112,3x014,x112,3x08,3x19,2213x013,3112x17,3x010,3x19,321x014,3x18,3x012,3x19,313x014,3x15,32x014,3x110,3x038,3x17,3x054,",
                        "POLIWAGFront": "p[1,2,3,4]x0260,3x16,3x031,3x19,3x027,30x18,0113x025,3112x15,2111213x023,3202x17,0021113x021,3x15,0002x19,3x019,2x15,011113x19,x010,3113x05,3x16,0023x110,3x08,1022210002x122,x07,30002221003x15,3x06,223x17,3x06,100002210211113000311130223x17,x06,100002221311130001x05,10223x16,3x05,10003222x15,0001001110010223x16,x05,10001222111130010030001001223x16,30000300013223111003003x05,1003223x16,x05,10031233111001001x05,1001223x16,x05,30001333111001001010010003223x16,x06,1003133311003003001100012223x15,3x07,1003133113001001x05,332223x15,x09,1003x15,00010031131x25,x15,3x010,1003131130001x210,3x15,x012,310113111222313x27,x15,3x014,31113113x210,3x15,3x018,3131113x25,3x17,3x023,3x114,3x025,3x112,3x024,311113x06,31113x021,3x15,3x07,311113x019,3x16,x09,311113x018,3x15,3x09,3x15,3x018,31113x011,311113x035,3113x085,",
                        "ARCANINEFront": "p[1,2,3,4]x0126,111x051,3301001x049,1010012111x043,101003110002210011100002332x028,301x09,222113301013111332x026,1x07,x27,133110112213x028,12x05,22111222131133210012x029,132222111100111311330120022x08,300003x015,3311110011101331133010200111x07,310031x014,x15,331110100x17,x07,213x05,1010101x012,2101302333311001211112x07,13x05,100310010111x07,310130000133331033312x08,21x05,13x06,310031x06,1x08,231333111332x07,21x05,3x011,1x08,3233322000023112221332x06,221300300002x08,1x07,131111332x09,2133220022220100100002x08,1x07,31211100332x08,2211x26,001020000222002020003x07,10121011132x07,2222122200020030002222002232001x08,13001122113223130022122x05,1001020x25,02212001x09,11x06,311112220030x26,100300x210,32001x010,1002x015,x25,1000120x27,32332001x09,3110022x09,2000x26,1001x210,3322003x07,3100310x25,x05,220021x26,301x210,122201x07,1x05,311332223222212210122211121x29,3222003x06,3x06,3322232221222311202x16,301x28,122201x07,1x06,3x29,333x25,133x15,21x27,332221x07,32x06,222200222200022231333x15,3123x25,122221x07,12x06,22x05,22x05,x25,331113113132322313221x08,32x06,2x07,2x07,221331113311133323331221x09,2x05,22x07,200230001133111333311x37,12213003x05,1x05,2x011,22333x16,3333111x37,12221111x06,2000200002x05,200x27,31133331111x36,0122221x07,122x06,3x05,300x25,31113333x15,x35,1001113x05,300121x05,23x05,3200221311x35,113331333312x012,1122100002320000223000111x313,1311113x012,3111300023x05,22122311113x15,x36,111121000202x010,1302232x05,2213231111023333113331110023001302x010,1332212000022131213110002x38,1120212001302x08,101132131000222131131312022x37,11100210012103x08,1111321310022231313301222x37,1111202103102123x08,10111313310222133331012x38,x15,022110022121x08,1001313331213133331012x37,x16,2021300021221x08,1001133331211331111012x35,x18,002100022321x09,1000133312313331110012x311,12023000221223x010,100113x16,31110021133111x35,12020002213221x011,120213x19,202121133x17,2000022132221x013,10211113x16,002120021311122x05,11322221x014,1221113113111002212x012,2220002213x016,12313311313101011112x014,2211x019,133321133331210023112111x05,22221112x018,100321100333221003102102312222x16,3x018,1300221223312221221003000233111333132x019,12122212121222112212212022223123113x021,1212121212122213221221x27,3112x024,x112,3003x113,32x018,",
                        "GROWLITHEFront": "p[1,2,3,4]x062,2311132x032,300x25,13x029,320x28,12x027,1x26,31122312x024,231122210231222132x021,1x35,11323331332x021,21x38,133331x023,3133330223331331x023,1x35,21112333112x022,101102310111233313x022,11110000311x36,1x022,121x07,21x35,13x021,21111x07,2333311x022,x16,x05,23333112x013,231111300x17,00233331113x012,100x25,10001133312x35,11112x010,30000x25,11133331002233111313x010,10000x26,x16,0022311113331x09,2220022223213212x06,222213331x09,3x26,3331122023132x06,22131x09,1x25,3311122x05,x25,33112231x09,1222233131122x09,222231311x09,1212331131122x010,22221111x09,31013111331122x09,x25,111x013,3111333122x09,22232311x012,213111331222x07,222211313x012,31311133312202x05,222313112x012,133311333312232000222213313x012,2133331133331133022223133312x012,311x35,1133331332231133331x013,x15,x39,1113211113311x013,x17,x37,x17,311113x013,13331111x36,1113321311112x013,x314,133323133111x015,13332231111331111321333113x014,332222102221100222213300213x014,13x26,321x27,11002221x014,31113232321232323123322321x015,3x115,30231111x08,",
                        "PRIMEAPEFront": "p[1,2,3,4]x012,1111x030,311x017,11222211x027,122311x014,1002222331x025,10222331x012,100022223331x023,3000222331x010,1000x25,3331x023,12002223331x09,10022223333113x022,13x25,3331x010,12222x18,x022,13222233331x011,311300121111x022,3333223331x018,101113x023,11331113x019,11331x014,1x09,31111x021,323331x013,131x08,11121x021,1223311x011,1331x08,11101x021,122312310001x05,132231x07,311133x020,30231231001230000322221x06,3233331x019,3002122331102103113202231x05,1223331x019,102212233100223013200322310001022333x020,102120231002221012030322231310022331x020,3021023100022x07,3032222000222333x016,311300x25,00002x08,303333000022331x014,333000300202x012,333x09,222333x015,120003002x018,2023300222331x017,12223x018,3333030000223331x017,32223x021,30030022233111x017,322200013x06,203x08,1300022223333111x015,1x06,1130000201x05,311210000x27,33313x012,12x06,3023000222300311222100022020202211x013,122022000012130x25,31013203x06,2220111x014,122322x05,30101x26,301303x08,231x016,311322x07,313231113223113x010,221x018,12x011,1x05,132x06,22002020221x015,x15,x09,1010010223x05,2200232020223x013,13222211x07,301001022100002x05,232220223x011,13x27,1x07,1000222100002x07,2332x35,x010,1x29,3x07,31111300002x07,20233113222x09,3x29,1x024,202231x015,3x210,3x017,2020000202233x014,1x210,100022x012,23020020222332x013,1x210,12222x014,23022031113322x013,1x210,3332x012,2022332231x06,2x012,1x210,1322x06,20000202203333231x019,13x28,322020000232202022022x36,x020,13x28,12200022332020220202331133x021,11x27,311200023312023120223310002x022,1x27,11120233101223112233311x026,1x25,3100123310001310031333x15,3x023,1322310000133x05,3x05,13111133313x022,1111x06,3x05,2x07,11211332223x031,2x013,31113332221x046,31333322223x047,133x25,1x047,333x26,3x047,1x27,1x048,32000221x048,1x05,23x048,3x05,1x050,31113x07,",
                        "MANKEYFront": "p[1,2,3,4]x0132,113x013,1111x017,31100013x09,11022211x014,1x08,1x07,1000022231x012,100111200023x06,10000112231x010,1001000120231x05,100003101221x09,12210000122331x05,1200210001221x08,12210000133131x05,3122100001221x07,1221x06,1131x05,12111x05,1221x07,1221x06,1321000012131x06,1221x07,1221x05,13213111132131x05,12221x07,1223100001x212,1x05,12221x08,1233100122x09,222100013231x09,12231012031x07,3132210012231x09,122331203223x05,32203221322333x010,12233001221000031220102232231x011,1223200101100001110010x25,31x07,110001232001013000010100100222313x06,100100122000023111320333300022231x06,1000030032x05,1100112x07,2233x07,1013010012000010100121x06,22231x07,3011010032000030002221x06,22231x08,101010322020003111133x05,222331x09,11210122202x012,20222331x010,12103222202x010,202223331x010,1230032222x08,20202222331x011,122101x27,000020x26,3331x012,121001223x213,33331x013,12210032233x29,x35,11x014,122111223333x17,2222331x015,1133112233131x05,11222331x016,1131223131x08,122231x017,31322111x010,112231x012,3113222231x014,1123111x08,12220000231x014,1300033313x05,1000x15,231x012,1003132x35,x05,111x05,11x014,11000122331x035,31130",
                        "GOLDUCKFront": "p[1,2,3,4]x032,1130031x037,1x06,1110100130101x036,11000010031003311001x026,3x09,101001003210332210313x025,13x08,102111032210322210121x025,101x07,101001032221011331321x025,1012x06,1300010x17,x35,21x025,1003x06,1103221x35,1x36,21x025,30021x05,103x16,x39,2213x024,30002100011012223x15,x35,22221x024,230222111221x27,3x17,x25,3x023,23022223x212,31300113322213x022,2300x211,1112223100013322221x015,13x06,3000222232222110122231000013x25,3x014,301300001000222103221100222231000013x25,1x015,102130012022223122101132223130003133x25,3x014,30022111x211,13322223131111313x25,1x015,1002222x16,3x210,31113332213x25,1x015,30002221001012231322223311333x25,3x25,3x016,100022201132220001133331133x27,32221x018,12022233222230000231311333x210,1002x017,120x27,1x05,222111333x29,33003x018,313x25,130000120011333x29,310003x020,11322210210022003113x29,31300203x021,1131222x05,2221133x28,13000303x022,21112x08,23113x29,1300301x024,212x08,221133x28,3100101x025,23x09,23113x29,130101x025,21x09,221133x28,311001x026,1x08,2231133x29,13021x026,1x08,2311333x29,310212x025,23x06,2311333x210,310223x026,213000221333x213,13223x029,1123133x215,31223x025,3311001133x216,31221x023,31x07,133x215,331321x022,10002231101333x213,1133111x021,1001121100311333x213,331111x021,11300100x15,333x210,3x25,111x025,1311333111333x29,3200222331x022,313000022111x35,x26,320000222231x020,13200022223111x37,233120000x25,31x018,1x210,3x15,x36,1113200x27,31x016,13x29,33x17,33x16,33x28,31x016,13x27,3333x19,3333111333x25,331x016,1322x38,x16,322213x05,11333223331x017,1x39,11x38,221x07,11x36,1x018,111x318,1x08,1133331x022,x112,x35,1x010,113311x031,x16,331x010,11311x028,111002200231x011,x15,x025,111002223022231x09,113222211x022,100211233022231x09,10023023001x023,110012211231x09,1022310013201x027,110011x010,10x15,011101x044,1000011000100",
                        "PSYDUCKFront": "p[1,2,3,4]0000100130000222x026,1301313003111332x025,13131311x36,132x024,13111322223133313x024,113x25,100233311112x020,13x25,10000133312311132x015,1x26,3x05,323121223311132x011,120x25,1010012231x27,3311x011,200x25,3200122231x210,312x08,100x27,3132231231x210,31x08,100x210,132213311x28,312x06,3222233322221302223111313x27,31x06,12221002322100220x25,11113x25,312x05,122100001210002200x26,11113222212x05,121x05,32300001x210,131122231200001210100121x012,x25,133222231200032320012310001x010,22223332222130000123112212202x012,22213322223100011x26,1222x014,22233322231000121x26,132x014,222133222312003001x26,12x015,221333223130001031122221x016,2313332223100012233112212x015,2133332223100031222331111x014,23133332223100001x25,13312x013,213333222231000013222213331x012,231333x25,31000013x25,32312x010,231333322223310000333x27,3122x07,2313333x25,331x05,1333x27,122200222113333x25,3331x06,11333x26,31222311x35,x26,3313x07,3111x28,3111x36,x26,33312x010,31x212,333x27,33313x012,13x220,333312x013,1x219,333312x013,3133x215,3311013x011,311101133x211,311100012x09,311x06,11333222233111302200013x07,1100022002223x18,3332202220001x05,13021220122331132x05,21132213221201x05,x112,32x08,23x110,30",
                        "PERSIANFront": "p[1,2,3,4]x098,3113x011,1132x021,23x012,31222213x09,1111332x016,23113x010,3x28,1x09,12311113x011,23x15,3x010,1x29,3x08,312x16,322000022x17,32x09,3x210,1x09,123x16,3x15,3x16,331x010,1x211,3x08,312211332x07,x15,3213x010,1222233x25,1x09,123132x09,23113221x011,12223113x25,3x08,3213x012,2132213x011,1x25,31322221x09,13000011x09,1221x012,3x25,31322221x09,130001301x05,3003213x013,12223331322232x08,12320123100023100011x014,1x36,1322221x08,1211001100211110001111x013,113331112222100001110121102000011003000120011x013,11100122221000010011231022203110020012311001x017,122221x05,31001312222010103000110003001x016,3200212x06,31112322001033x06,11300001x016,100023x07,3100233x09,1132x06,1x016,1000010000x15,00011300003x06,311100001x015,10000100010000120031100003011113000030001x015,10000100003x15,22212000120012203113x05,1x014,100001x07,310111011112110031x010,3x014,100001x05,3100130122000132310031x09,1113x010,100001000010013000013221x25,31003x08,100011x07,3x05,3x05,13x07,111x26,0031x09,1x05,13x05,100001x015,12222x017,3x07,30000100001x015,12222x017,2x08,3000100001x016,122x028,100100003x016,1x025,2200003010001x018,1x023,33x05,1030001x018,30003x011,1x06,32x07,100001x019,100033x09,12000032x08,100003x019,3x05,13x07,2300021x09,10003x021,1x05,1x08,12003x010,23001x021,3x05,13x07,12001x010,21001x022,3x05,1x07,12001x010,21001x022,1x05,1x06,21221x011,21003x023,1000023x05,22121x011,2101x024,32002212000222121x010,22301x025,1222213x26,121x010,23223x025,3x25,1x26,1213x08,22121x027,122221x27,131x08,22123x027,1x25,3x26,131x07,22131x028,3x25,1x26,1312000x25,113x029,1222213x25,131x28,313x030,1x25,1x26,113x26,313x021,3x110,x25,1x26,13132222313x021,1x26,x15,x25,1122211131333231111x019,13x25,12222122221x27,131x29,1x018,13322213x25,1221x29,11x28,331x016,11133331133x26,133x25,3312111333113311x014,1000133100133113331113311311121001310013101x013,10x16,001310013310013001001210013100011001x012,21x05,2011110x15,0111011101010x16,012311x020,10002120001120012001101120000211x09,",
                        "MEOWTHFront": "p[1,2,3,4]x0226,1x030,1x07,30100311x023,301x06,1013x15,x013,31111300010100111300x17,x013,x18,3101010001001132311x013,x110,031x25,121222211x013,1113223111121x05,121222213x013,3112222100011x25,12122231x015,11321x07,1000012212211x015,1112x07,2012221222211300013x010,3111000030032100100022210013003000031113011x05,322321110001122113021100001200001110232232231200001301223011x08,11110010012322232000020100121111x012,11000211131110000101003221331x012,1x05,12200010001010022213331x011,10000122x09,233222211331x011,1000012x013,1221221331x08,31100003231x06,311112221112013x06,312211022212x16,32210122101311001000312211012222322101x26,121100013311000100110001x25,0331x25,1111x05,13331000011x06,1222200023111121x07,13331x012,1232x06,x26,1x05,x35,1x013,13x08,122221x05,10331x014,1x09,3022310000100003x014,1x08,1000231003120001x015,1x08,100021111222201x015,111x06,10000131x25,13x013,3110312200001000213311131x012,113200023x25,30000213x25,1113x07,1322233222231222100022212222332221x05,122211333223111321x26,1222x35,13100001231x35,1110001111232210111x35,131x05,x18,x010,1111x05,x17,000",
                        "DUGTRIOFront": "p[1,2,3,4]x0348,x15,x013,3x15,3x021,110000211x09,13x27,31x018,12x06,2211x06,122x06,2221x016,12x08,22210000122x08,2221x014,122x08,22210000322x05,2020223x014,1222x07,222210012220000202022221x012,12122202020x25,10012222002020222121x012,323x213,3113x212,1323x011,3221x28,11223311332211x27,13223x010,1220x27,1322233113322231x26,02221x010,1221x25,3132223311113322211x25,12221x010,1x28,1032211000023112201x25,32221x09,332111122211221x07,2231211x29,33x08,13133331223121x09,22311122111122231x08,1313302311221x011,2231211302312331x08,1331x35,1113x011,2223113233313331x08,1333113311112x010,22223111331133331x08,113333x15,322x08,x26,31111x35,111x06,1131x37,12212x06,x27,31x37,1311100002311x38,12231x29,012221x38,1132100212311x36,1122231x27,11322211x36,113212000111131313313122211x26,113222213133131311110002311213131131322210x25,113x25,31311313121132003131211211311222211x25,01x27,1131121121313020130111131111322211x25,11x27,1111311110310200023211110111233231x25,112222332111011112320000130103x17,x211,132233222x17,3010310000x15,2x15,x25,1111x210,3x15,2x15,0000232010232121x25,1023311x27,33112123201023202000131131312132221x36,1222233331213131131000200131011131110132221133331222x35,011131110131000012302030313131133331111x36,113131303020321x05,113101013113210x312,012311310101311x05,202021112112131311x38,113131211211120202x06,2001012101313231011221101323131012101002x06,10200102002113101212111121210131120020100201x07,21022103030212123111132121203030122012x015,2232103012111001112103012322x011,2x08,1303x06,12011021x06,3031x08,2x015,23201020200202010232x026,3002x06,1001x06,2003x012,",
                        "DIGLETTFront": "p[1,2,3,4]x0414,31113x033,132000231x030,12x05,2231x028,1220000222231x027,322200x26,33x025,120122220122231x025,1201222201222233x024,1211222211222231x024,3213222213222231x023,1x214,333x022,1222x15,x26,331x022,1221023331x25,33100002x017,1221x35,1222233310002x05,2x012,1222x15,x25,3331x06,2x015,1x212,33331100302x011,220001323x28,x35,13102002x015,1332323232x37,1013011033x08,220001333232x310,1131313101113x07,1011x314,1313330301121201x05,313131113331333113111131110x15,x07,3x16,31131313x15,31311113112101120013x15,31131111313x19,31103311231x06,x19,3110112121311113100211101003001113011121113111131211101301112101200103310131130011113x15,2101100301012x05,x17,00111101112111022013031031x010,3011110121100200103003030111x013,100101000301311201120000222x020,300111200002020002x029,2x07,2x011,",
                        "VENOMOTHFront": "p[1,2,3,4]x024,111x016,311113x030,13331x011,311100222213x027,1x35,1x08,310000222002221x025,11x35,1x06,310x27,00002223x023,11x36,100003100x215,1x022,101x36,100010x210,x05,2221x022,101x36,1001x211,x05,22221x021,1121x36,1010x220,1x020,11031x36,110x29,x07,222231x020,1101x37,10x29,x08,222233x019,13121x36,10x210,x07,222231x020,11021x35,10x222,33x019,131021x35,11x29,x08,x25,1x020,1312313333101x28,x09,222233x015,11001331213333101x29,x08,x25,1x016,10101330213331021x221,33x017,101131031331021x29,x08,222231x019,3013123111031x27,x010,222231x020,120122110231x27,x011,222233x021,3212310231x27,x011,222231x022,132212231x28,0000x210,331x018,1110132333111x214,00002223331x017,10001x35,13231x26,x011,22x35,x016,12301x35,12200312222x011,2233331x017,1311x35,132300231222x011,2x35,1x017,1221x35,12311132122x012,x37,x017,1111x35,12231322133x05,x312,1x019,11313133132232231x39,x05,x36,x015,11000113131331132231133x012,33331x015,1001101113113100x15,333222x05,222x35,1x016,112210x18,000111213333x26,x38,x018,112x112,021121x315,1x021,111132223133311212113333x17,331x018,x16,3120022x18,3x16,x25,3311x018,100022211200221200022112133320000223331x018,x16,31x25,3x16,2121332x05,2222331x023,113222x35,122133132x06,22223331x023,11x36,1122113133x212,331x022,111x35,1001133313222x05,x25,3331x018,111233133331113333112222x05,x25,3331x017,10001111x311,112222x05,x26,331x018,11100001x39,1111222200x28,331x026,1x36,111101x214,31x027,x110,00012222x05,222231x026,133111333110000122220000222231x025,123322223331x05,12222000222331x024,1233x25,33231x05,1x27,3331x025,1033x05,33221x06,11x38,211x023,103x06,30221x08,x18,02211x021,1232220033001x017,1002211x020,13x25,32201x018,1000221x019,13322233221x020,1000221x019,132233221x022,1000221x019,1133211x024,100021x021,111x027,1111x061,",
                        "VENONATFront": "p[1,2,3,4]x08,311x036,102311x033,1000023100013x027,302313231030000312x06,113x014,110001210100031000011113201x013,3x05,130130310001132x06,1x013,100001311131131123x15,3203x013,3x16,3x17,0313x05,11x08,3x06,2311113x16,0111132x014,330023x17,011110x18,32x012,3x15,22021121112112022x15,3x012,31112000121121211200102x15,3x012,312010101213131200101231113113x09,21101010123x15,0010121311133113x08,31210101213x15,210121213111323113x06,1122121213x17,2121213311112x09,3112121313x19,212131311113x09,1111213131120022311121313x16,x09,x15,3331120002223111333x17,2x07,3x19,2x37,23x112,3x06,311110023112021110023x113,00003231110132231120111023x114,2x06,211100022111201023x116,03x05,31113003x19,33x111,3113x06,2130003x18,32023x110,22x08,x114,3200223x18,3x010,110013x18,0012223x18,2x010,102233x18,0103123x17,3x011,1022233x18,03123x18,2x011,1222233x121,2x012,1x35,x121,3x013,1x35,x117,33112x013,13333x116,320313x014,1333x116,300023x015,1110003x17,31133x05,2x022,23111x35,11x030,1022x35,1x031,102233131x032,1013311x034,1111x015,",
                        "PARASECTFront": "p[1,2,3,4]x023,x19,x045,x15,33332311x041,1111x37,222311x038,1112x37,x26,31x036,112222x35,2220000231x034,11x212,x06,331x032,11x213,x07,333x030,112122333x27,x07,3333x028,11212x36,x26,x07,23322x026,11212x37,x25,33x05,x26,1x024,112121x37,22223x05,x29,1x022,132121331333322223000333x27,1221x019,11322212313333x25,x38,x27,1221x016,113322212213133221222x38,2221221212231x012,11333x26,121221221222x37,121221221x25,11x09,11x214,1221x25,x36,1212221x29,11x06,1x215,12221x25,x36,122122223333x26,100001x28,3333x215,333322121222x36,x26,10011x27,x36,x220,12222x38,22223310133x25,x37,x225,x38,2223331013321111x37,x27,333x215,x38,22233331133133331x35,x26,x36,x29,332222x37,22233331131x35,213333x25,x37,x27,x35,2222x36,222333311313332221333x25,x38,x27,x36,x25,333x25,3321131333220213x26,x38,x26,x37,x216,101333220021x27,x37,x27,x37,x216,101333220031x27,x35,x29,x37,x28,330x25,101333222231000x25,333x27,311x37,x27,3303222210013332222312220000x210,1122113333x28,00332222100133220021x28,x06,3321222231333x27,0003332221000133220031x29,x37,1x25,311x26,0000x35,2210000133220031111x25,x37,1222200231x08,223333211x05,13322003111011122x36,132220000310003332222333311x06,132220013110000x19,222200003100x35,2222311x08,1322003111130031x05,113222200003102x35,222111x09,132200x16,33113000311x25,0000312x35,x15,x011,132200100x18,333111x26,0033x113,x010,13220010000113333222213x28,33x19,333311x08,1332031x05,x15,33331x29,331133331111333221x07,1332031x011,1113x25,000331x37,10011121111x06,13201x014,13x25,0003313331111310000133221x05,13221x014,1x26,0003101100001111000033321x05,13321x014,1x26,00331x07,1332100013321x06,3321x013,13x25,00331x08,1332100001321x06,1321x013,1x25,00331x08,13332100001321x06,1321x013,3x25,0331x09,13322100001321x07,321x012,1x25,0331x010,33221x05,1321x07,131x011,1322220331x010,13221x05,1321x09,11x010,1322223311x010,13321x06,1321x09,13x09,132222311x011,13331x07,1321x010,12x07,13222311x012,13321x08,1321x011,1x05,12223111x06,130000113321x09,321x016,3223111x010,11x36,21x09,1321x014,131111x015,x16,3x010,1321x048,1133321x051,1111x07,",
                        "PARASFront": "p[1,2,3,4]x0333,11x07,111x027,10010001110221000031113x016,1001310111001221031222001x015,12113x15,2112310100220021x014,12331303221333100100x25,13x014,13100302221113103122002231x07,1111000010000x25,333310312002331x06,1000211010311132223x19,x35,1x05,100002331310000211313223x16,33221x05,10002333110000223113222231111013223000010002333111302223313x26,313100111x05,122223312111333311120022223131x010,1223331122x18,3000222231331x010,133310012x18,2000222231331x09,131310000110001111200222233111x010,1021x08,x16,3x25,33x15,x010,121x06,1123x15,322333111331x010,121x05,10021001121133113132231x010,1x06,10210011023311123110231x010,1x05,102100010233111123110231x016,123100122111000131001231x016,121001111x05,1231001231x016,131000011x05,111000133x018,1x06,110000110000131x018,1x07,100011x05,11x038,1x0249,",
                        "VILEPLUMEFront": "p[1,2,3,4]x080,23x15,32x045,111330333113x033,x16,00001x39,0311x028,1111x36,1101x314,1x025,11x312,1x36,23233233031x023,1x315,1132323232323333111x020,13330x36,232323313323x25,3233311132x017,111x36,2323x26,1133x27,323x18,x015,1111x38,x27,111333x26,3111x36,11x013,x16,x35,x26,3x16,33332231x311,1x013,x18,33322233x111,33133323232x35,1x013,11x35,111333111x210,113322232323333031x012,1x39,1111223x18,32133x26,32x36,1x010,21x37,232311322x18,22313x25,32x37,1x010,1x37,23222311322x06,2231132222323232333313x08,31x38,2322311132x06,2311132323232x37,11x08,113330x35,23223x116,32x312,11x08,111x37,23233133x211,3113332333033303113x08,3111130x37,133323x27,323311x35,033311113x09,2x16,3033331x35,2323222323333x113,32x010,23111133331113303332323232x36,x111,32x013,23x19,x39,23233323333x18,32x017,3x18,x37,2x312,x16,32x022,1113111x318,111x028,31331111x38,0x37,1113x028,11103x18,x38,111132x029,1110003x117,32x030,11130003x114,32x032,3111x05,1103x19,x035,111300031132x15,03113x034,3111300x110,321113x034,311133x116,3x035,3x17,31113x19,x037,x16,203x17,2311x036,x116,00211x035,x116,00211x036,x119,3x036,3x117,3x039,3x110,3x045,111003111x046,311x05,313x043,31113x06,11x041,311113x07,313x039,311113x09,1113x036,311113x010,311113x035,3113x012,3x15,x051,31113x052,313x0412,",
                        "GLOOMFront": "p[1,2,3,4]x0104,2x016,1x038,3x087,3x06,2x038,200003x07,x15,x08,3x15,3x026,11x35,11000013x07,1x09,20001x08,1113222x35,11012220003113x012,1000030011113220222323311132223100003x011,1x06,1332113x16,33132313310020003x011,1100200132221133331111322231x020,131000133222x110,02223310003x015,1310001333231x36,1313223331020003x011,2013310013333132022203331x35,1x020,13311133313x25,332333133331111x017,1322311313332323233323313310000110002x09,200102223113333232x37,1112x05,21x015,10022221x314,112220000221x015,12002221x312,11322220002221x09,3x05,132023311x37,11133332311322223x016,11x35,x112,33110000132233x010,3001300x16,211112x16,3000200001331x012,31130003111011110x17,x09,131x012,11110001110x16,0111011300311300011x08,30003111303100x18,000x111,0013x013,3x129,3013x015,3x18,200002x113,3013x019,3111101x35,0x15,311133x021,2000111211x36,0x15,330002x05,2x011,20000201110111x35,2x17,x06,3x018,20031112x06,2x17,30203x025,x17,010x18,x025,200003x18,0x17,30020002x024,3x17,0x16,3x011,3x021,3x111,3x037,3x17,311x039,11300031113x037,311300031113x037,1110000311113x035,11110000x15,3x034,111130003x15,x033,3x15,000031111x033,x15,3x05,3113x033,3113x0169,",
                        "ODDISHFront": "p[1,2,3,4]x0258,1x038,101x036,10001x027,111100010002210001111x018,10002110100222101103331x016,1110223310223222100223111x015,1001223310223222102221001x019,12310223222212231x020,11113312223222133331111x016,1002313122232221333102331x014,100023311222322213310223331x012,10113223312223222131022331101x015,133231222322313102331x020,1333312223331102331x022,11331222333112311x025,1311333311131x028,x111,3x028,30x15,011113x026,3x113,3x025,11113222x17,x025,1111322x18,x025,311113x19,x026,3x112,3x027,3x110,3x029,3x18,3x032,3113311113x031,1100311113x029,311300x15,x028,311110031111x027,3x15,0001111x027,x15,30003113x027,31113x05,33x029,313x061,",
                        "GOLBATFront": "p[1,2,3,4]x041,23x117,3x032,23111x011,13022001113x027,211x05,x38,010000330000113x023,231000x36,x26,1x06,333300011x021,210003333x29,1x07,1222330001x019,2100333x27,x05,3x07,1x25,33003x010,1x06,2100332222x09,1x08,1x27,30011x07,121x05,3003222x012,3x08,3100x25,32121x05,12230000210322x013,1x09,210000x25,132100013322300030032x014,1x010,1x05,2221133211133332100210322x013,3x011,31x05,2211333233x16,3010032x014,1x011,21x06,3x16,310011001030032x014,1x012,1x05,3100110012x17,030332x014,1x012,1x06,3x16,22223333131033111132x09,1x012,1x08,13332222311233101113333111132x05,1x011,21x08,1311x35,11133100031011333311320003x011,31x08,131111331123123100001001133331130001x010,1x09,131132111222132100001031331223311301x010,1x08,21331300110021133100010132231022331301x08,21x06,2321331103113011133100310120223100223131x08,3100002313221311011110111133101001200233300223101x07,10003113320013112111121111331100132002231000223101x06,1021133200001311311113x15,33100132000233300022310300002131332x05,313x113,32101320000223100002230100002313222x05,3133x113,231332000022310011112101001323222x06,3213x113,321332x05,233110000121100011222x06,33213x114,23132x05,21130x25,1x07,112x06,132123x113,3212x05,110x28,31x08,1x06,132123x113,3231001113x27,32231x09,3x05,132213x114,32111300x27,322231x09,1000033222123x115,322200x25,33222231x010,300013222213x113,3x210,33x25,31x011,100013202213x112,3x28,33x28,002x010,1000132022133x110,3x26,13x210,31003x010,303320002213x19,3x25,13x211,110103x010,1013200022133x18,322223x211,31000012x010,10132000022131111211322213x212,1x017,1013200002213311101132213x29,313x07,33x011,31111000022133110313213x28,311203020003021x015,310022133110211133x25,3112x05,302003221x017,31022133120113322223112x07,12000031x020,12213313011332231131x09,102x025,1221331231132213231113x06,123x024,31121333131132231231000130000212x022,3100012133111133221231200001x027,100022212133111132312311222001x026,3202311011333111131323103122001x026,1021x05,132321113003300012013x025,12021x06,1332333200320001003x024,3120023x07,132323233100312012113x019,31220022213x06,13323233301x29,1x017,122221113221x07,113333100122111322221x015,122113002311x09,3111300003130003113x017,113x099,",
                        "ZUBATFront": "p[1,2,3,4]x0107,33x019,11x013,11030033x016,11211x09,11210103001x014,101322111000011223103033301x012,10313322231113322331100333301x010,10331313x29,31311030333301x09,1033313x210,311002330333303x07,1033331x212,31023330333301x07,1033331222301103222312233330333303x05,10303331223101101322212x35,0333301x05,1030332312x18,32313332223032330300001030322312x19,2101322223032333100030320322232101111013230313222303223310001032032222322311322230001322223032333300103220322223x27,3000231222230323331001032203x25,x15,3x05,231222230322331010322203x26,3x08,2231222230322231010322203x27,1x05,2222312222303222330103222203x27,13x26,3132222303222330103222203x28,11x36,100222203222330010322203x27,0021111331000222032222300103222203222200012210012100022203222230010322220322200002210001210000203x25,30001032222032000012030001210000203222233000103222203200032010000101x07,2222330000103222003000101x05,303x08,22232x05,1032x06,301x06,303x09,223x07,103x05,3001x05,321x010,233x07,103x05,101x06,321x010,23x09,102000101x07,101x010,33x010,1200101x08,103x010,3x013,2301x09,103x010,3x014,31x010,11x010,3x014,31x011,13x010,3x013,31x012,13x023,3x014,1x039,3x057,",
                        "WIGGLYTUFFFront": "p[1,2,3,4]x019,1111x021,111103113x012,11000011x016,11122210100011x09,12x06,21x013,112222321001200011x07,1x05,10001x010,11222331221001222200110000120000120001x08,1122231113210000123122221100120000120031x07,1222311113221000032231122221112x05,133121111001222x15,3221x06,3222311211312x06,1122313311323111133221x08,31223113331220000x25,3122332x15,32211x011,11x26,31x29,3332223231132211x015,1x26,13x26,33313x26,332132x015,1x28,11x36,113x29,132x016,1x29,3x16,33x27,31132x016,3222311132222x35,x212,312x015,1221x05,1x28,331111x27,33x014,322302313203x26,12x05,13x25,31x014,122101130301x25,120331130032222312x09,11031230311300303222320311130301x25,33x08,322112210111133101222103111130030122223100311000122312210x17,01222103x15,33101222231212221001223122303x15,303222103x18,01222232122221003223122210x15,012222123x17,3012223x26,31003221222230231320322223203x15,301x211,10000121x25,1300001x26,32033113003x210,310000121x26,31113x28,332000013x211,1x05,123x211,1x26,12231111x212,31x05,3x213,3x16,300x217,1x07,1x211,001x35,2x05,x213,31x07,1x29,0000211112x08,x211,31x07,1x28,x020,x210,12x07,31x26,x022,x29,12x07,21x26,x022,x28,312x08,1x25,x024,x27,312x08,1x25,x024,x27,312x08,12222x026,x25,331x09,31222x026,x25,331x010,1222x026,22223313x010,1322x026,22223312x010,3122x026,2223313x012,1322x024,2223331x013,31322x023,2233313x014,31132x021,223311122x012,11331122x018,22331333112x09,11x37,122x014,223311x37,112000011x310,11122x09,223111x311,11001x313,133x113,331x313,101x38,x15,x019,3111x39,100x18,x029,x18,0",
                        "JIGGLYPUFFFront": "p[1,2,3,4]x0309,11x019,11x016,1001x017,1221003x18,300100023x016,122213x210,31003321x015,12211113x06,x25,0311323x014,121010002223x05,223111121x014,110100002221x06,23111121x014,103000022333x08,311323x014,301000223310313x06,3321x014,10010022331010001x05,22231x013,301100223101031301x05,2221x012,3010010223030311030300002223x012,1101101021010x15,01x05,2223x011,10110101100303111303x05,223113x08,33011110100001031301x05,31300010000311312101101x06,10001x05,30000210000300021201111x08,313x010,21x05,3133212x015,222x07,211x07,3131202200031111x012,23131x09,3122x05,23331x011,331331x010,122x06,2312x011,223331x010,332x07,13x011,2223313x011,122x019,223331x012,3322x017,2223313x013,12222x013,22223331x015,132222x08,x26,3331x017,13x215,33311x019,1333x27,x36,11x023,33111333x17,x025,113331111x35,13x023,300233100013222003x022,122213x05,3122221x022,3113x09,3113x012,",
                        "NINETALESFront": "p[1,2,3,4]x013,3113x049,31300001x047,1x08,13x039,100001x011,1x038,11003x05,221300221x037,13101000222131002221x013,313x020,131010022213313x25,10003x07,100031x018,13313022213231213223310003x05,1x06,1x017,1223000032222322213333100300001x08,1x016,323x08,21333233133313000012222x06,1x016,3x09,21x38,130001111x25,x05,1x015,1x06,30000213311113000012221x25,x06,1x014,1x05,113000231x09,12221x27,0000313x013,3x05,113000023x08,122221x27,031300013x010,120002113x05,221x07,122331x27,122x06,1x09,1000022x010,10000111333313x25,1222x07,1x08,3x09,2x07,1001221333313222312222x08,1x06,3x08,32x09,11222133331333313x25,x08,3x05,1x05,20322x010,1222313331333313x26,x07,1x05,1100330012002x09,1233133313331333x26,x07,3000011132101320003x09,1331333133313333x26,x06,1x08,22103000023x09,13313331331x35,223111130021x07,22101x06,3x09,2133133131x36,113333221223x06,220003x06,23x09,231133131x35,1x35,222213x06,232003x05,3223x010,2211313133331x35,x26,1x05,2332001x05,2323x011,23211313331x36,x26,01000023320013x05,233x011,30021113331x36,x25,000100233200121x05,323002x07,20002231131x38,2222000300223201022100022300022x011,2231111x37,22220000300220300022322221000023x010,2223x19,332220000100220100022133221000023202x07,222311x37,111120000100200100222111331000021223x07,2223111x310,100001x05,30323100031100002123x08,22231131x310,10021x06,313x07,100002131x07,2222311131x38,231223x016,300002111x07,22231111331x36,222213x018,30002131x06,22231133133313333x26,1x018,10002131000022231x36,1333133x28,1x017,1000213312222311x37,1333313x26,001x017,1000213331211331x37,1333313x25,0003x017,10002x16,3331x38,13322212222x05,3x016,1000211x35,11x39,13222232222x05,1x015,31111x38,1x310,13x25,122x06,1x011,31130x25,x36,133x25,33331x26,322x06,1x09,13x07,2222333313x210,31x27,32x06,1x07,13x010,222311x214,322220001x07,3x06,1x011,22213x215,122x06,1x06,3x06,1x09,222313x010,x26,1x09,1x06,1x05,1x07,222313x014,22213x010,1x05,1x05,1x06,22313x017,213x012,300001x06,3x05,2131x019,1x013,322001x06,3000313013x018,13x014,12221x07,10310001x017,3112x014,10313x08,1100001x014,3113x25,x012,1x013,300003x05,3x18,300003111132x06,3113x020,31113x020,3x15,3x072,",
                        "VULPIXFront": "p[1,2,3,4]x056,3113x043,100001x041,1x06,3x040,3x06,11113x035,30000121300001x034,12000131x05,23x033,1x25,1x06,21x031,311222232x05,231x031,10312231220012231x031,12213331322221113x031,1223133133x25,13113x028,32231x37,111302003x028,13311333311222233001x028,13223331132222333203x028,32223333x25,333221x08,31113x016,120233x28,3221000013013x05,1x015,121x213,300003001x06,313x014,3213222102220313000030032000013000313x010,3233332211222001000032001220012x07,1x09,12223332112000110000122322221x26,00001x08,10x27,000013100001221322213x25,31113x08,301x25,00013333100012213321x35,13x25,1x08,122220101x35,221001321333133331x28,1x08,100011x35,x25,103333133133313x28,01x08,313x213,101331331331333x26,003x09,1200x212,1113313131x35,222200003x08,32000x211,331131133133331132200001x08,1100003x29,333311131331132221300001x08,131000122232222x36,111131333x25,13003x07,1221110322233x27,3331111x35,22220013x08,1222113222233x29,3311x37,2220001x08,122231122223310x28,31x39,2200003x08,133313222231000x28,31x36,113220001x09,13312222331300023x25,3x16,2222120001x010,11x25,301133003x26,113333x25,12003x011,122223101113313x26,113333x26,101x011,3x25,300x16,3x26,101333222200303x011,122223100x17,x26,10013332220001x011,1122231000x15,011x25,100013311300003x010,111331000311113001x25,100001130030001x010,311110000x15,0000122221x05,300010001x011,31110003x15,0000122231x05,1x07,3x017,3x15,x05,132231x05,3x06,1x017,3x16,x05,113311x06,100013x018,3x15,x06,x16,x07,313x020,33111x07,311113x043,3113x017,",
                        "CLEFABLEFront": "p[1,2,3,4]x048,1111x044,x16,x042,x18,3x040,1111000113x038,111x06,113x037,11x08,113011113x016,3x18,000011x010,110000113x09,3x15,000x17,00011x08,1x08,113003x15,x010,x15,0000122x05,1x011,1111x015,x15,x05,1222100100021113x022,1111x07,1221001000100212x020,11130000111001210012x06,12x011,2020x25,13x05,100210011000122000212x010,20202222113x06,10212101x05,1122212x010,2011202113x08,13020111x07,1112x010,201001113x09,121000010000201x06,102x07,212001x08,110121300010000301x06,103x06,2121001x05,111221012100210000301x06,103x07,1000010011122221100112221x05,3x08,3x08,100001112222311x05,1121000222x09,222200001x05,12222331x08,121000222x09,222200001000021223311x06,111211x07,1x05,1x09,10002213321x07,1222111x08,13221x013,2212221x09,112221x025,22212221x011,1121x024,222212223x15,x08,11x024,22221111x26,1x07,11x024,x25,102122211x06,1121x025,22221002131x07,12221x026,222100021x09,1111x026,222102001x012,1x026,2221032021x011,1x026,2221013001x012,1x025,22210210021x011,1x024,x25,1010021x011,1x023,2x16,010021x012,1x021,21001001010021x012,1x021,11001001100231x013,1x019,210x17,0021x014,1x019,10x27,10231x015,1000022x011,21022311221221x016,100002222x08,221023033121231x017,1000x25,x16,222102133312131x018,100022221x06,11110221112211x019,11112221x09,111x26,1x020,10100121x011,11122221x022,x16,x015,1111x060,",
                        "CLEFAIRYFront": "p[1,2,3,4]x0174,31113x07,3x15,3x019,31x05,1300311222x35,x017,3x09,1100022333311x016,3x016,2331111x012,11132x015,23x15,3x010,113323x05,3122x06,22x16,x010,1333001x06,2322x05,3x16,3x010,3132001x06,2122x05,3x15,3x012,3100031000022122000023x15,x013,311203032223122x05,231111x015,3113000311122x07,2311300011x011,313x05,2222x07,22331011001x011,300020000102x07,222110001x012,1002010001020000311222100001x012,100201x09,302012221001x013,1x010,2200120001221001x010,3130002202111x010,122100013x07,3x010,331x08,223222100213x06,1x011,11x08,223222122213x06,12x019,22322221111223x06,1222x017,x26,1x25,1x07,1122x013,311x26,1x26,3x08,12x012,100031222212322221000031111x012,330023212221223222100030000112x010,1033322322212212221000302230031x09,300x25,121222122210000333x25,1x07,100x26,1212232222300001x28,00222201002233223112212223x06,1233x211,1000333322122122221x07,133322221x26,30033332211122221x09,13322231113222122333321x27,1x010,1122310000133312233221x26,1x013,111x06,1133122221x25,13x025,1123111222211x030,x17,3x049,",
                        "NIDOKINGFront": "p[1,2,3,4]x012,333x019,1x032,300033x05,3x010,10x15,x028,310001000301x09,10200031x028,11120100301x07,110002111x016,231x09,122212010101x06,1002311331x016,3001x08,12223110110210000122211x35,1x016,30031x06,122333121002100012221331332221x016,3000310001222333121022101122311333122221x017,3000330012233x15,22111023111x35,122221001x014,100223012233101112200233111x36,1222210121x014,12222112233102233122331111x37,122211231x015,12223112310102333223x16,x36,12221231x017,122223110010233222x18,x35,12212231x018,1222233110x211,3111133331221231x018,311222333322220x29,31133331212331x07,11x07,3x15,2x35,2200x211,3113311123331x05,1121x06,1131111x36,20002311x28,3x15,23331x05,10231x05,10023111133332000231203x28,3312233331000110231x05,100222311213322022112003x28,33311x35,111002331000011x25,313010222033110003x27,33113311311112222310000100122223100002323310103323311323333133311333311233100001001222311000022331111322301131x36,111x38,131x05,10013311130000x25,3322231001x36,111222x38,x16,010133100120000x27,33111102133331112000233311131000231013331021220031122233x16,21233331112000231133111022310011333121222312233x15,33011222333112000231222231123310001013x15,22223x17,33310122233111200231002222311310000102111000x15,31011x36,132233311120021103311131111x05,11x010,12111x35,01322233111132211110002210011x017,1311133021130223x16,311x09,210011x05,3x011,1310110133023x17,31x010,22100021000301x010,13031133023x16,0221x011,22100021000301x011,11000022x17,02221x09,2222100021001001x012,x17,23111301111x06,x28,110210003331x012,10000x25,10000131111x210,33122100010003x011,1x05,2222100001310021x28,333111000120111x011,1x06,2221000021000213x25,x36,110001210001x06,110001x05,222300002x15,x311,1133100132000013000100100100002222300021113223322x35,1111331001320000211110000111000x25,310013001133x25,111311133310132202113333000011210x25,33100311002x17,x25,131331031222122331000022311122233x15,33x19,x05,2221313310132212223100002233x16,x36,x18,31x07,2213133100131222231200222233110000x25,x36,1101x06,222131131001313222333x25,333113022x15,x36,1301x05,222313311100011x36,122223311331111x35,111333100010022223313311100001x35,10133311x35,113002222331111000102223331333111x05,13311100111x38,113x27,3331000212x35,1333111x06,x15,002222x37,1113x26,333310222113331333211x09,1111222233322333311113222x35,11222331113332231x011,1122223322223331131111x37,1222x38,22331x08,11001133332222311131313x18,222x35,111x35,1x07,1x05,21333322x16,31313x17,2233311100011331x07,120022223x16,000033x114,311x06,2211x09,x17,3x019,33x19,00002211x048,x16,x05,",
                        "NIDORINOFront": "p[1,2,3,4]x0262,11x017,11x024,111001x013,111001x021,11x05,1x011,1100001x014,1x05,11x06,1x010,11x05,21x013,1010001x08,1x05,10011x07,1x014,121001x08,1x05,10110002222001111x012,1211x08,21010101010022111120001x013,121x08,21010101001021133331201x012,1001x06,2222110101100021x36,121x012,10101x29,111010100021x38,1x013,1001x29,311021000021x39,1x014,10x210,101021000213311133331x016,13x28,3101012002111133311331x017,1x26,3311102100021x38,131x017,1322233110000210021x39,1100111x014,1x35,x06,100021x310,111021x014,13311x07,10021x310,110021x014,111122x010,21x39,100021x012,3x16,322x09,21x38,100002100111x07,3x07,12x06,10021x36,11000021011021x08,312200012x06,100021333113310002110021x011,3122230022001030002111332221x06,21x012,1211320220010003000023x26,30002231x012,12222022201130030000223x26,322331x013,122220220010101x06,22322002233331x012,13x28,11113x07,223x06,2131x013,1000022221111322202000232x07,311x012,1x05,2202120022312020032x08,21213x010,100002320000221100102x010,300212213x09,30003100022x15,012020031x08,2232003x08,1x06,2x19,312033003x06,22312201x09,10002x110,312230000100330223003221x010,x112,331223x06,3033223000121x010,1333x16,3331132322x05,123223x05,1x010,122233311331113321x25,111122223x05,1x010,1002223101331122312211333212223x05,31x09,1000022100123331122133220003123x06,331x08,1000221000100233311112x06,132330000331x07,10022210001130023333101x06,312332000031x06,31131210000102332331100012020001x25,00001x05,10001010000102222311x06,131321312x16,01x06,x15,x06,x16,x08,1121202112222001x033,x16,00x16,000",
                        "NIDORANMaleSymbolFront": "p[1,2,3,4]x0173,1x038,10313x05,10011x024,1x05,10101011221x023,3x05,30113002221x022,1x05,221000221121x021,1300002221002113321x020,1x05,222102113333210011x017,100022210211x35,110101x017,30022210031313333101001x015,130022231021313333211001x015,10000222102311313332100210011x012,1002223002113133321002101101x013,10222102313133321012221001x013,100231102111313210101222101x014,31300303133312101001x25,0111x010,1000030213331210100210022200001x08,1113221031321210022220022221221x08,1002122101323213022220021122211x010,1333223122112132221100211x25,1x08,30111223111132312211100x25,11221x07,10111231322122212211100x25,112101x06,101123130001222122211300x26,3101x06,1000231000212221x26,11322223111x07,100221010012221x26,333x16,x010,10022101012231x26,3331x016,3002211332211x26,3331x018,100x25,3101222233311x019,13x15,010122223311x020,131331111001222331x022,13100100001222331x022,111311x05,111331x022,10221x06,100211x024,111x08,1111x0141,",
                        "NIDOQUEENFront": "p[1,2,3,4]x011,11x015,111x035,1221111x09,11001x035,1x26,11x05,310001x035,300x27,10031x06,1x034,10002231222130003113001x033,10002100112100x17,001x032,1000210010100x19,021x031,100010002100x16,3331221x032,13100022100x15,x35,121x031,33x05,2100x16,x35,121x029,1300002223102x17,3333121x028,10000x26,322x17,3333233x027,10000x29,x18,3331331x023,31110000x210,x18,3331311x022,1000111x214,x16,331331311x020,30000223x28,3x26,111331331333211x019,10002232200222333x27,11133133332001x019,10222322002330003x29,33133322221x020,1223220023110000x210,133332221x020,12133220031111000x210,13332211x021,1233222023011103x210,3133321x022,30x28,11133222233x25,3311331x023,102200x212,30032323333131x024,1000031x27,3111000032x35,x19,x018,3000012222311122x06,232x35,133332001x018,10022231122x09,232323333113333221x019,31111x013,213323x16,x35,21x022,1x012,21133211002221133331x024,111300002211133111x05,22231333100011x020,x19,333310030000222231331000121x019,11100211x35,100100002222333131011221x018,131000332x35,10010002211333311113321x018,13330001x26,100010021133113311x35,1x017,122300021x05,1x05,121222233131111331x018,122100023x05,1x06,1x25,333113311310011x013,311300022300001x07,1221133331133331001221x012,102302222300012x06,21112221131333231012221x011,3002212222120012200022210x26,11322223133221x011,100221222212221x27,100x26,13322223133331x010,30022231221x25,122221100x28,13x25,313331x010,1322223311x27,1221000x27,331x26,311131x05,1130010322223131x27,111000x25,33331x26,3132x17,0021010322211231x28,3110x25,x35,1x25,33112221220000210132211012231x25,33310x25,x35,13x25,331132221x25,3100111000121131x38,10222x35,133322233131332213222331x09,13x15,x35,11113333111x39,131x35,1x35,1x08,100023x17,3333x15,011x36,11331x35,133331x09,10002331113x26,33310022x16,33331x35,133331x010,10223333113x25,33310000x25,x35,1x35,13331x011,112233x16,222x35,10022x16,331x36,1331x010,11221111x36,11x36,12211222233111x35,1311x010,1032322x310,11133331100x25,3331x35,11x011,1000111001x35,111100x15,00113222311313111x014,x15,0000x15,x010,101021333102111x022,1111x016,1002311100221x044,11110001111x013,",
                        "NIDORINAFront": "p[1,2,3,4]x0459,30003x042,3030303011x019,1x05,13x011,10103031001x017,3010011001x09,3000100100001x016,101110001x010,30003000320001x014,3x07,11x09,x15,00001220001x013,1x09,1x06,101100011003222001x011,101x010,10000101x07,1002222001x09,1011x011,30001000022220011x25,001x08,1001x011,1001000221111200011222201x08,302x012,10010021131311200001222001x08,122x011,10100211313131120310222001x08,32220000233x16,002131313131201000220001x08,1x25,31x05,221021313131313101x08,1x08,322231x06,22100211x35,131101x08,1x09,121x09,22001x38,13101x08,1x09,11x014,1x39,1203x08,1x08,3x05,2x010,1x39,101x09,1x08,120002000211130001x38,1201x05,33301x07,31100200211x07,1x37,1203x09,31x05,31x06,23101x07,21333311201x07,3300100003222000023111101300002211122211x07,33330300001222200023x15,2x05,x26,11x09,33330030001x25,x016,2222x08,30000330003000122213x028,32x08,30001x25,x07,111x018,32x09,1000122200311110011x08,1111x07,32x08,10000x111,03x07,21000012x05,32203300001x06,x110,x07,21x06,12002223223300001x07,12222x010,221x07,1222211322000021x08,1111x212,1x06,2122210001x26,1x012,x16,x25,1x06,221211x05,1222211x012,1x35,x16,x06,2111x08,111121x011,122233310001x06,221x010,121201x011,12222310001x06,2221x010,10101x011,13132210001x05,22221x012,101x012,10101100030303222211x028,110100002010101111x039,x16,x025,",
                        "NIDORANFemaleSymbolFront": "p[1,2,3,4]x0534,11000011x031,101000101x030,10x15,021x029,100222100x15,x025,100222100x26,1x023,1022221002x16,21x021,x17,0021x36,11x019,11x06,1001232x35,1x018,1x010,2222323311101111x012,1x013,x16,00010021x011,1x024,121x012,1x07,111x014,121x011,1x07,13301x013,21x012,1x06,1033x09,33000021111x09,1x06,x15,x07,333300221021x010,1323x08,11200003300222121x011,1x09,11x010,222211x013,13x15,x08,33000223321x015,1222111001120233000233321x016,300111x05,1x05,12233221x016,3x19,x05,21x26,1x015,1x25,1110000212221x25,1x014,111221110000222x16,21121x013,1022110011122211x06,1221x014,x15,001022111x08,111x022,1111x065,",
                        "SANDSLASHFront": "p[1,2,3,4]x019,1x046,11x045,321x045,131x09,231111332x026,12310130003112002132x026,101331301031002333132x026,1012310231122x35,12222x024,10213103312x37,x111,322x015,300211233313313331120000222132x018,10221x35,131211x39,132x014,313001022212333131021x38,112x015,3000110022213332110221x36,x18,32x010,10002302222123231022313333x15,x35,11132x07,100210022221323102221333x15,x310,113200003000210222210131022221331111x35,x17,x08,100213022221012322223111000133x15,3313x09,10021x25,10213x25,3100222111x39,1x08,10003x25,10231222231003132133x15,x35,1x07,300x26,10223122221003132011x06,1x36,x06,200x26,102231222100313320100220222133331x07,100x29,322231001332010011221122113333x07,30x27,33222212003320010102320232111331x07,3001x212,00032001110023002121111331x06,10313x211,00020x15,0021002131311131x06,101010222200x25,000x15,00021002111333111x05,21011100220023111120x16,0002100211333311300003010311002002112012001113110002300211133331000030012013002003113132001133310003002x15,3333100300313023x05,x15,20011132310001002x15,3333130303001202x05,11320002113322100210213331113331101100223x013,2113332231021021x35,133331001021312x010,21111332222102121332233313331003010003x08,2x15,3332222121021322223313313000100001x06,2x15,3333222001212133x25,31131x09,3000022101x35,2222000013133x26,31133x010,1222210001x25,x07,12333x26,3121x012,3113x05,312x010,123x26,31201x022,21132x05,2211x26,331323x020,3113233x16,30011222333313x019,2300322233331x07,1112023312x016,230002232333313x09,10022333x015,23x111,32x09,132222331x038,21112231112x037,31021110223x037,10002100021x037,32021030221x038,321000121x040,1x05,1000",
                        "SANDSHREWFront": "p[1,2,3,4]x0171,313x036,30023x035,12311113x031,1112222331331113x023,132003300231200003x020,11320320023322023101x019,101322200322232231201x019,113022023220002313223000333x013,1322003221122202332100003003x011,132332322101100022111x05,3221x09,31220022021111000233331000032303x08,132x07,2112002222331x05,1021x08,1322x011,x27,31000032233x07,2133222x07,2222322031x05,3321x09,11333x210,33320231000010033x010,113333x25,3331302203300012221x012,111x38,130020231000133213x010,313113331111332003233300100333x010,3223x15,320032203223103322031x09,3202331113222002221223111333321x09,1222331133322203231222313000331000113000133302130023233311313231322203100010013012030030030031113323133133323230001220011120301030021030120231212223313000013200131213121021103003202303322331x05,33203322131111011131021202203331313x06,133202222313313112332332022333131x07,133223222x35,1330003313023333113x07,31332232331333312000231333313313x09,133223133133311200023133331113x010,31332313311313120002313331113x012,133331311113112202211311313x014,13311133x15,32223x16,3x016,311x08,31223x15,3x030,3x16,x054,",
                        "RAICHUFront": "p[1,2,3,4]x086,3x16,3x045,3x112,x040,23x17,32x05,3x06,31113x027,3x16,32222x06,3303x17,3x024,3x110,222x05,3x112,3x022,11x310,11223x110,32221113x020,1x314,x110,3x25,13031x019,1x317,x17,322231110001x019,11x310,11x35,x15,3222x05,1003x018,1011x38,1011x35,1111322x07,1x019,x15,x38,1111x36,111132x08,1x017,13311x310,113322233x16,32x06,1x016,12x36,1x310,x25,33100x15,3200023x015,32231x313,2002222310x15,00113221x014,302233x18,x35,200222231131111x05,131x014,1223333112211x36,x27,31333111x06,1x015,12x36,1111x38,x25,11x35,1300313001x014,1x36,200002x38,2211x37,1001000101x013,1x35,2x08,2x317,1010000101x012,113333x011,2x315,10010001003x011,13133x011,1112x313,10000100001x011,13133x011,x15,x312,1x06,3113x011,13313x012,x16,x311,1x020,133313x011,x112,x36,1x020,11331x012,x19,33311331331x013,1000031111x013,x19,x35,131111x013,10000x15,x013,1130003111x37,1111x012,1100031131x013,13x05,311x37,11113x011,11x07,1x013,1x07,31x38,x15,3x09,101x06,1x013,1x08,31x37,x17,3x07,101x06,1x014,3x08,13331333x18,3x06,1021x05,1x014,1x08,133331133110311113x05,1023100001x014,1x08,3133311131000311113000010021x05,1x013,1x07,2213333111x06,3111300010023100001x014,3x06,2213333111x07,1111000010221000011x013,1x05,2221333311x08,31113000100231000111x010,221200x25,133331x010,3111000100223100011122x05,x25,1x26,313331x012,111000100223100011113x210,31x25,11311x013,11100001002231000x15,3x27,33313223111x015,111000010022331000x17,x39,1111x017,311100001000223110000x18,333x16,x018,1111000010002223100012110x114,x016,21113x05,1000223310122231000x15,x35,11x015,31112x05,10002223312002231x05,1332222311x013,31113x06,10000x25,00002231x05,1200003313x011,31113x08,10002222x06,2231x05,100022311x09,231113x09,1000023x07,22231x05,12223111x06,3x16,3x010,10000311x07,2223100003x119,3x012,1002100111x05,223310000x117,32x013,1021x06,111000223311113x113,32x017,11x010,1111223331113x15,x026,1x015,x19,31113x052,113x076,",
                        "PIKACHUFront": "p[1,2,3,4]x037,3x014,22x022,110003113x07,222x09,31111x06,101000031113x05,222x07,3x15,3x05,1001x05,31113000022x07,1333111x05,10001x06,313310002x07,1223331x05,100001x07,30021x09,1x25,1x05,1x05,1x08,10221x08,102221x05,1x06,300022000012223x16,300221x05,1x06,1000222x05,31x08,10231x05,12x05,1x05,2200001x013,1x07,122221x07,2000101x08,110001x07,112221x09,30101x06,1011003x09,12221x08,10111x06,11110001x07,1223331x06,300212x06,21120003x06,1x35,1x07,13x05,1x08,3300100001x35,1x07,1333x012,3303030001x35,1x08,1230010011000100033002100013331x09,1x05,1300113x08,21000013313x07,113x015,110221x05,11113x06,1313x013,1331223x06,1111x06,133100x25,x05,103100223x06,111x07,1300x27,x06,1000021x06,311x08,10x29,00001x05,31x06,113x07,30x211,x07,x35,0000111x08,10x211,002000x35,10000111x08,10x211,02000330002100031130002000010x211,03x08,210001110002200001x212,3x08,22100311300222003113x211,1x08,23100113002200001331x211,1x06,233313113x010,1331x210,12000022233113x013,1331x28,313200x26,13x015,11313222233331x28,3100002x016,11x35,101x27,1x05,22x017,x15,0001x25,3x07,22x025,113221x07,222x027,1331x06,2222x026,1331x07,22x028,11x014,",
                        "ARBOKFront": "p[1,2,3,4]x016,3x17,3x045,311x27,112x042,112x05,x25,1132x038,122000x210,11132x034,1222000x29,12221132x031,11223x29,3222122221113x08,111x017,11231x210,132231332222112x06,122113x013,1212101x28,10122311113222213x06,111201x011,122121011x26,1101223x16,322221x07,13313x09,1222122131x26,13122331333311132221x07,1111x08,12232122131x26,13122311x37,132221x07,1221x06,312212212211x26,1122311x35,1113132213x06,12001x05,122211221222232232222311x35,x15,333221x06,210010000312231111212221221223311311331111011332213x06,111100001222110111231x26,31133113311110011133221x06,120010021222110001113x18,3111331111000111332212x05,12201003122311x05,11311113110113311100030011133213x05,1322100112211100300001133x16,33112022330011133221x05,133310012221110023200011331111331122333320011133321x05,x15,00122221100033320011331133112x36,00111133321x05,1200100122221110023333201x35,112330233200111333321000021223100122223110003300321133311123000330011112333210000122231001x25,11100033003113331112302330x15,32333210000123331001x26,11100032031133311110332x17,22233210000x16,0011x26,111100331113333x113,323232110001220031000122212223x18,22333x112,32132321000122200310001122312223x16,3x26,x19,3223122321001x25,3110000122211122231113222122223311113222111232110311122331x05,1122x15,x27,311113x29,31113232100122211131x06,1122x15,32223x18,3322223x15,232110322220011x08,112x129,3232100122220031x09,1123x127,2321103x26,331x010,1122x125,22211001222233331x011,11223x122,22211000123311331x013,112223x118,322211x05,11122111x011,x15,22223x114,3322211x06,13222001x09,1122x15,22223x110,3x25,11x07,332220021x06,11x26,13112222333111133x25,311x08,313x25,31000013x25,00213111x214,31111x09,113222231000013x25,0031331111x210,111103313x08,133223330001333x25,33x18,x28,111122231213x07,11133110001x39,12220x16,3223x16,2231200213x05,1331111000133x15,3120000x113,311233120022130003100233100011132222110000211333x16,333113313x25,311301300222310113322200021000113332331130033113313x26,3x15,2222331013322220002312211332223330003113313332222313002312223310133x26,3122113313x26,0023113313333223312002231233130133x25,331200223313x27,311311x38,1x27,1331100013x25,312200222231122223331100311x36,1x27,131100001332223313x28,3311333311x05,313333133x25,33113x05,1x36,13x29,333x15,x08,1131333322233311x07,1x36,13x28,x36,1x010,3211x38,11x09,1133331333x25,x36,1x013,211x36,11x012,113331x311,11x015,23x17,x015,x15,x35,x15,x019,231132x019,x19,x035,",
                        "EKANSFront": "p[1,2,3,4]x0221,3x15,332x028,31113x06,32x022,33113x05,3x07,1x019,310000x27,322x05,1x017,100022000x25,3222200001x015,30222231100123111132200232002x011,11333301030211x05,1200221003x011,1322231103021x07,122221001x010,3x07,330013x07,3222310101x09,1x010,21x07,10333130121x09,12203x06,3x08,1002212321x09,32x06,31021x07,10002230101x09,1x05,311321x06,310002211011x011,13331111210000311x05,22303021x012,x15,21000310023300221003021x013,102210031x07,3221000011x015,313001x05,x25,1300001001x018,100002222113x06,1221x017,30000223113x08,311x016,11100022322311x06,30001x013,31321x26,331331x05,10021x012,1002333311113300223100310221x011,100232x09,3002223100133x012,10232x010,230023100221x011,3132232x010,230023112221x010,10012232x09,2230231331321x09,320001123x08,2233211323311x010,12003003120000222333130223231x011,1203000023x18,30223023031x011,322300003x05,222300022302323x012,12300003x06,2230002230231x014,2300023x06,22300022321x017,132223x05,22230022331x020,1322300022232223311x023,3x113,x014,",
                        "FEAROWFront": "p[1,2,3,4]x0292,x110,x043,1112233331000110001x035,11x26,33331000011101x033,100x25,x36,1x05,1101x031,10000x26,33x15,0000201x030,10032022223111x05,11000021x029,1030000333x18,2222000021x029,100022x110,x05,10000211x026,10002x118,200002x16,x020,10002x120,002112210001111x016,3002x17,3x15,212113x15,2331x08,11x013,1002x16,03x17,2312111312131x011,11x011,122x16,03x16,32313331332331x07,222000011x09,12x15,003x17,3313331x35,1x011,2200001x08,121111003x17,x313,1x013,113201x07,1211100311133111x36,1x35,1x08,222x05,113x08,12110000330003x16,x37,1x012,22200001x09,11x07,111100x19,31x014,11322001x08,100001111000010210100012221x011,20001322221x07,10111x08,22221100122221x012,2200031121x08,100002x114,x25,1x013,120003311x09,x15,00001133110x27,31x013,1122001331x015,1122112000x25,31x09,110000312200131x013,1122x15,x26,1311112001x05,1200131220131x012,12x16,331112x19,2001000021200131220131x018,13322220002112211200120001120013120131x019,131x26,1131122120120001312013312131x020,1111211x36,11120112001312001312011x021,1x310,2222121120013312013312131x019,1213333x210,13312013331213312131x017,112111132223x05,1111312123333133331331x016,1031012111212001113311312122x311,1x015,10110121000x15,222211133111222233332121x016,1100121x06,122200011333313x29,101x018,1131x08,100011013333120x27,0101x017,1001x010,x16,2223312x09,11x019,11x010,133110122223120010001001x031,1221001x25,1200010001031x030,1221001222021220001000101x030,12121010002231200012003121x029,13112110002031200031200311x029,1011031000200122003120031x030,1010101000300312000120031x031,110011000100312000310031x033,1110001100312000312031x031,1110000110031120003x15,x031,10000111031112003111x037,x19,0001111x0188,",
                        "SPEAROWFront": "p[1,2,3,4]x0293,300003311x030,110031021x030,301010231x030,30101223100001111x022,3021102331003133001x021,302223111311300031x022,10223133322202231x024,10100x29,1x09,11x014,113223111122231x08,301x014,10131122122221000130003003x012,3103111211122231001001010023x011,303322210101233x15,00303021x011,303x26,1112x17,30001221111x09,33x26,312233x17,30013112221x08,13x25,33122133x18,311322221x08,1323x15,2222x18,0211222231x010,110001x25,33x17,011322331x015,3x26,333x15,32132233111x014,3x25,323311113013223313331x013,3x25,312331130022233123331x014,3222313123130022231123331x015,122231231310022231223311x017,133130231100x26,311231x017,13120022310222233122331x018,130002211x28,3331x018,1311223113132222x15,x018,133x15,22331x36,1x014,311333221100x113,x014,303x27,11011113311x019,10x112,3331133111x016,11x07,1003311100113301x025,1111x07,1111x049,",
                        "RATICATEFront": "p[1,2,3,4]x087,31x046,101x019,x15,x05,1100001x09,1001x016,11x25,11101211012210011110001001x05,33x05,11102221x25,12222122211322221100100100030011001x06,13222200x27,1222x15,210100320001100110031110002222x17,222211x05,12103001x05,1101011023110022101000122221x08,1101001x06,31001000023300011100032221x09,10010032x06,103x06,2100021100322221x09,210030010000111010300031130002233x25,11x07,2100010010001003103000311110002233x27,33x18,0010010000111301000x15,0000x25,x15,22x08,101003x07,11100x16,300002222x07,x17,30010001x08,x110,x09,x15,322221x05,12201x09,x19,x012,11x26,1000010021x09,x19,x08,2110001x25,1000010001x07,x111,30000300022111x27,100013201x07,3010x17,3x05,100x213,10100023x06,100103x15,23x06,11x211,1110100012x06,100300x15,23000310001x211,10033301x06,11x05,x15,x07,310011x29,1010003100003101x05,3111302x07,310011x28,1x05,300310011122200111x011,2310011x26,1330012030311001x25,112x013,231001x26,100310011000010x15,3x017,23103x25,11023x08,1x020,33000221x27,101x010,1x018,300100x210,101x06,111001100020202x07,1300100x210,11x06,10021133132020202000111210121x211,11x06,100221333112020200010012212211x210,1x07,330322133313x07,10001222101220x26,1x07,12101222x15,x08,1111221001210x26,1x07,1003223100131x010,12222111100x26,1x07,10012331001101x010,111001000x26,1x09,1013310110001x011,10001000x26,1x010,10101x07,1x011,111000x26,1x014,1x09,12x013,x27,1x025,111x09,x29,11x023,113331100x211,311331x018,111122x35,1113x26,111333321x015,1113x27,3331000x17,333x25,11x012,10033x27,311x011,13x28,1x011,1010033322311x013,12222002221x012,110110031x015,100232001221x013,1101011x016,101101121121x017,1x019,1000011011x06,",
                        "RATTATAFront": "p[1,2,3,4]x0204,3311113x032,3x07,313x028,300011132000113x025,32032222113200013x024,122322223011320013x023,31x25,10000132201x024,31133x07,11221x037,1221x035,331131x032,33x05,21x022,231x05,3x06,2221x020,2002100010000x27,1x019,322223010223113x25,1x019,1222321132122221x25,3x018,1223100021222301x25,1x016,10031100x26,3201x25,1x015,10101x26,32223003x26,1x015,301x26,10323203x27,3x016,1x26,100123001220122221x014,101022210101223122201322221x013,3x07,3330221112013133223x014,3111x06,31300010130133223x013,100011x07,11101300013223x012,3030021100031132201x05,30023x011,1010313310002322213x05,10003x012,x15,333100232221x05,120303x014,3313331023x25,3000012113x014,12231331013322221x023,12223110122122221x022,1222212110001322212x021,120032x07,102221x020,123031x08,130301x020,21111x010,1111x096,",
                        "PIDGEOTFront": "p[1,2,3,4]x024,111x09,1x045,111x08,11x044,101x07,101x044,101x07,11x044,1001x06,101001x040,10021x05,1010001x039,10221x06,101001x039,10221x06,101012100011x032,102221x06,1010121001001x031,102221x05,100113210100121x029,102221x05,1000132211002321x029,1022310000100011220100012231x027,10223100011000113201000122121x026,102233101100001312010001222321x025,122333111x05,13132100023221221x024,1333311x05,11131321000212221221x023,x16,0000111023132100021222232221x020,11x07,111002311321000212222122221x017,111x05,1111002231132110002232222322221x015,11x05,1110022231113221000022122221x25,1x014,102222110022311113222110000221x25,1x25,1x013,1222211002311132222021x05,2223x25,322221x013,1202210023113220000211x05,2221x25,1x25,1x012,1002210231132000222x15,0002221x26,1x25,1x011,1001210231320022x15,00221122223x26,3x25,1x011,1210102310021111331100222231221x26,1222201x011,12101023x15,x35,1100222333311x27,3222201x011,1210123111x38,100022x35,111122221x25,01x011,13010311x39,100022x35,1333312221222201x011,12101211x39,100002x35,1x36,1223222001x011,1301011x310,10022233331x37,121222201x012,130121x310,1x25,x314,11222201x012,131011x310,1x25,x314,1x25,1x012,132121331111x35,12222x314,11222201x012,1212113122311333312222x313,13312221x013,1212131110001133312222x312,13333121x014,x16,0113201113312222x311,1x36,1x014,1000x112,3312222x318,1x013,1000221111x25,113312222x317,1x013,1000223122x05,21133312222x315,121x011,1002233112x08,133312222x314,1221x011,x19,2x09,333312222x312,122001x015,1111x012,33312222x310,1x05,1x015,1321x016,112222x35,111000011x015,132x113,x07,x19,0031111222111x011,111x08,x112,x010,1123332331201x019,x15,0x15,3x07,x15,32322322231221x016,x15,0011113x06,1113223221112233110111x015,111130311133x06,10021322113223311x021,1133001113x08,x18,3223311x023,130001113x08,1x06,1223311x029,3133x015,101311x032,3x016,10221x050,x15,x0130,",
                        "PIDGEOTTOFront": "p[1,2,3,4]x0169,1x045,11x043,11101x040,1112001x034,3x16,x25,x15,x028,311x27,333112201x028,1233311133311122201x028,123310222111x26,1x028,32310231113x26,11x029,1312331x37,x112,x010,11x09,131331x35,x15,3322000111x06,1101101x09,131313x117,x08,10210001x09,1311312222113311x012,10102100021x09,1313110002133331x011,10102100021x010,11110100211x35,1x010,10101000231x010,x111,x36,11x07,1010210002100111x05,1002100002111x37,11100001010100023111001000010023310000211x310,111012121002311000100001022331x05,211x313,1131310231000021x05,x15,x06,11x316,1112231000021x010,1x05,1x320,11310000221x010,1x328,1120223x15,x07,1x322,133331321233110021x06,1x314,2x39,1111322213100021x07,1x313,1222x38,133x25,120221x08,1x314,12223313331311x26,1231x09,1x314,1x26,111312231x25,11x010,1x315,122211132212222312221x012,330000x39,111131312223x25,31203x011,1x08,x37,10331321221x27,311x011,1x010,x35,1002232231x210,1x012,1x09,2x35,1002122231x28,001x011,12x07,2222333313223222331x25,00001x011,12x05,x25,x35,1331x25,3312x07,3x010,1x212,3331311133x25,3311100001x011,1x212,333131111333x26,33x15,x011,1x212,33313x16,3332222x06,3x011,111x210,31313x111,x07,1x06,x16,33111x27,3313111133331110x17,x06,10012222333311122223131113322311x015,1022111x25,333x19,33x27,11x013,101100013333111001101111012222111001x013,1010x17,000010222102221111000101x016,1x011,1211130111x08,1x030,100001x022,",
                        "PIDGEYFront": "p[1,2,3,4]x0412,x16,011x030,131233110211x028,1123310222231x026,1123312223311x026,11233x18,x027,1133111x36,1x027,11110111x35,1x026,111313111x35,11x023,1021131111x37,11x020,10223111011x39,x17,x014,113310001332x37,122223111x012,10110001332x37,x17,2221x011,1x07,312x36,1x27,33321x010,1x08,12x36,13x25,311131x010,12x08,12x36,x17,222121x010,1x08,12x35,13x27,3131x011,1x09,133331x26,311131x012,120202x05,11331333x18,x014,121021x05,2x16,333111x016,121022100002211x37,11x017,1310221122221x38,1x019,1211122111121x36,11x020,120000x26,1333311x018,113212x07,222x15,x016,111x25,1130000222x16,x015,10011132333x19,222231x014,111130011110001121122231301x016,1011x06,10010031300011x016,11x07,1011001x033,110313x015,",
                        "BEEDRILLFront": "p[1,2,3,4]x042,31113x017,111x028,3x18,3x014,132311x024,3x15,3x25,13x011,120022311x020,311113x210,3x010,1x05,2311x018,311132220022002221x09,1x06,22311x016,3113x25,002x05,223x08,3x06,202311x014,3112220000222x06,21x07,122000x26,312x012,311200200002022x06,23x06,10202200022233100011x06,311200020002200022x05,1x06,1022x05,202233101111x05,11200002002x06,2200221x06,1022x05,202233101101000031120000202x08,222201x06,1022000011022331100010000112x05,22x010,20001x06,120220011012233110010000312x05,222x010,20001x06,1200201102012331101x05,12200002202x09,222023x06,10002111020013x15,x05,120000220002x06,2200201x08,100211002001132212110012200022000022000020000223x08,10002200201312221223131220022x06,22022x05,21x09,1000020021x210,31122022x06,2222x05,2223x010,10002221x212,3132220000222200220022223x011,100002213x210,31112200022x07,2220021x013,1002233122000x25,123332222x06,111200221x015,12221012x05,222100231x27,31133311231x017,1331201x05,2221003313x25,1132223331x020,111321200002210023113322313x26,331x021,111313x05,210231113311132000022231x022,x15,x05,2x112,2x06,22331x021,x15,x05,2x16,311113x08,2231x022,1113x05,2311113x15,2x08,2231x022,113x06,223112x16,2x09,2231x021,3112x05,2221233x15,2x09,2231x022,111200022211333x16,2x09,221x021,31111x25,11x35,x16,2x08,2231x015,3x110,22331x38,113312x08,221x014,10002311113331111x39,133311x08,231x012,1x05,231132233331x38,11122311x07,221x012,3x05,2231222233331x35,x15,322311x07,231x010,3x06,2223102222333x15,3x15,2223113x05,221x010,1x06,2223100202223133322x15,32231111x05,231x09,1x05,22233102002231132222x16,233111010000221x09,30000222331002002311320222112111333131001000023x08,3000022233100200031113000221101111331331001000221x07,1000222331102200312111300233121111323223100130023x07,100022331001100313x15,x35,1131112100223100010221x06,30022331x05,x18,3011333x17,300002100001021x05,30022331x07,3x15,30000x19,00x16,x05,121x05,1002331x08,x15,3x09,31111x014,13x05,102331x08,31113x012,31110311113x014,32231x09,1113x014,3x15,231113x011,12231x010,x17,32x012,311112311x011,1231x012,3x17,3x013,3x16,3x010,131x014,312311113x014,3x15,3x09,11x016,311231113x015,311113x08,1x019,3x16,x017,3111x030,311113x020,1x034,111x019,1x060,",
                        "KAKUNAFront": "p[1,2,3,4]x019,31113x033,130022211x030,1x05,22221x028,12x05,222231x026,322200022223331x025,13x27,x35,1x024,13132222311133331x023,12112223111133331x023,1211222111133331x025,12122211133311x025,131222233331131x021,11301201223331122311x018,112231013x17,2031331x016,122223311110213331332231x015,10222333x16,32333120231x014,3002233311131132223310231x015,1022333111331320223311311x015,12233110133312022333x15,x014,30233100012231022233x16,x014,12331000102231022331113311x014,1331000010231322331113231x015,131x05,12231223311002231x015,11x06,12311233121002311x015,1x07,1311123100212231x024,x15,31102221311x025,112112122223111x025,12212021223111x026,12310021113111x026,1310011333111x028,1101223333111x027,1212022331111x028,13000231111x030,12000133111x029,13221022311x030,1131002231x032,11202231x034,120231x035,1111x095,",
                        "WEEDLEFront": "p[1,2,3,4]x095,1x038,101x037,101x036,30023x033,311002113x030,100302232231x027,10000313x25,1x025,1x08,x26,1x023,300013x05,2013221x022,100111x06,111223x021,3000113x06,1132233x020,1x06,311300x25,31x020,10000310023132222331x020,10003000023113222331x020,30001200233111222333x021,100x36,111322333x022,302213331113222331x023,1222311113222231x025,1x211,31x027,1x28,331x028,311x37,1x028,30003x16,x07,1x021,100022233113x06,1x021,100222230111x05,121x020,30x26,1111x05,121x021,1x26,3313000010221x020,11122221111000010221x020,10011113311300001121x021,1002233131133x15,x022,10222333x17,3331x022,12222113x15,31321x023,1111233331333121x025,12222333122211x027,11222312221x031,x18,x0135,",
                        "BUTTERFREEFront": "p[1,2,3,4]x0129,313x043,31110000311113x041,3x15,02x17,3x040,1111303x16,001x020,311113x020,13111300103x016,3x19,3x017,313111001001x013,3x113,3x016,111310001001x010,311x06,3x18,x015,3111310011001x08,31x08,1003x16,3x014,1120010111001x07,12x08,1x05,x16,x014,1120001001001x06,12x08,1x05,x17,3x012,31120001000101x05,12x09,100011023x15,x05,311113011002000102103000012x09,1000100002311110000311100033100200012221000012x07,3x15,3x06,211113000111x05,1110020021221000122x05,3x18,x05,23x15,00011x06,100100222112100122200001113003111000023x16,x011,120010231101101322000013x06,x115,x011,1020031111011113220001x08,1100003x18,x011,30023011112x15,32231x08,3132200003x16,3x011,10312x15,323111311x08,313000220003x16,x011,1312x15,3032311122x07,3111100002200x16,x012,103x15,032313112220000311300011000022x16,x011,3133x15,323131111222111100020000110000x16,x011,1313x16,31313x16,200110002200001003x16,x011,113x18,31311112222000011000220003x18,x011,311133033x19,2222x06,1000022000x16,3x012,313002233x17,3x26,x05,1x05,220x16,x014,31x35,2x16,3322220022000011x05,3x16,x015,201102x15,3331111200002200001103x17,3x015,10102x19,33221110000220000x19,x012,31112x19,011133222201110002200023x16,x08,x15,002x110,00211x25,00001100022002311113x07,12223112x16,33111002212222x07,1100022231111x08,100023x17,320311102211x25,x07,11022311113x08,100002x17,2002310121211200022x06,2x18,x010,100003x16,00022x16,331x05,22000023x16,3x011,100023x15,00022x15,313311x05,220223x15,3x013,1002231111000221111321133311x05,223x15,3x015,13223311132022311322211222311223x17,3x018,133311112223311232211100023x18,3x020,1133111132333112122121100002311113x022,x15,311133331321221221100002311x024,111132131133112212212221132233111x024,113212x17,22122122212x15,211x024,11001213231012232032000322122211x025,1312212310013203003000102212311x025,1100210310001201001000100212111x025,110010311000132100100003002311x027,1101031x05,13100030001003111x027,1130311x05,1113001000103111x029,113111x06,11120100013111x032,111x08,113212231111x045,x19,x048,x17,x076,",
                        "METAPODFront": "p[1,2,3,4]x0176,11x037,12211x035,1222211x033,1x26,1x032,12332220113x029,1x36,12021x027,11x35,1011221x026,111333110113113x025,11313133100010013x023,113313333113222001x023,13131333000x25,013x022,1133133300x26,001x021,133331310022223313x022,1x35,1300222332x024,113331330022331x025,111313330003321x025,x15,3333223221x026,13113333002221x026,1331x35,00221x026,1331x35,00221x026,131x36,00223x026,111x35,00023x027,11x36,00221x018,11x06,11x36,002223x017,133x16,31x35,000221x018,1033111133133300002223x018,120033133331x05,2221x020,12001x06,10002221x021,12201x06,1x25,1x023,1221x27,12221x025,1121x27,313x030,x16,3x0179,",
                        "CATERPIEFront": "p[1,2,3,4]x0574,x17,x031,11x27,11x025,1101000211122221x024,10100001001132221x023,101220103100012231x023,10121013021103231x022,1110101210111013311x021,1121213210111013311x021,11311112210001331131x021,3133331321113331331x021,12022231x36,13331x021,101111331333123331x023,10333131111222331000011x017,13333x16,2222100003023x017,11110133111221x05,1021x019,111122311113100001021x018,1201000102133100001021x018,1221000122133100003023x019,11300023133131000011x022,133331331331000131x021,1100011113331001331x020,10210102122313101331x020,1221312212212331311x022,11011110012221331x027,3111100012211x031,3111011x011,",
                        "BLASTOISEFront": "p[1,2,3,4]x0128,11x053,123103x18,x07,111x032,1311133200222211000110221x031,11133320022x16,010223331x030,11333312011221131102233111x030,1133331211200013333231111x030,1211333311011001x35,x16,00111x024,111322233x16,x35,11113221123311x017,3130113222211222x310,11322312311131x014,33111120100x29,x39,1322122x15,31x012,3211112x05,x210,x38,11331203111131x012,101111x05,x212,332133311112200311331x012,103131000023x15,3x27,02133111220002333311x011,3002310002122223331132200221331112000223331111x011,102231021x27,333311222133111220022333111333x011,102231132200022223333111331312100223331113331x011,110223112x05,x25,x36,132120102233111320233x010,1310223132x05,2222x35,1132100011131113202221x09,13331021113200002222333111130110223x15,2022223x09,13333x17,320022233x15,32031123x15,300223223x08,1233113333x116,22223x18,202233221x07,102212222x35,x112,2002223x16,3002233221x07,10210000222x311,111200002233311112002233321x07,101x07,x28,x35,12000033x17,30022333321x07,11x09,x28,333312003111002211120022333321x06,1311x09,x28,3312223113102223112002x36,1x05,1311311x07,x28,3113231122312233112002x35,1x05,1331323331x06,x25,11131331122223133311322x35,11000012313222333x110,x35,1311202223x17,32333311310001231200022x313,2333111000221333x15,3331113310003231x05,222x38,x25,3331200021222333x18,333100321111x07,x213,33312200320022333x16,33331001033131x09,x210,331112221200222331111333223100302312311x08,x28,x17,22120022333122213222310001231223311x06,x25,113333111312120223333110012223100001131022333x16,22211x35,111133113223333122112202310000122110222x315,113311333213333111001220231x05,30121000222x38,22221x35,133220311102111222231x07,130110000x212,1222333133200003100132223311x09,111x010,x25,1x25,331332x05,311x35,1131x09,1111x09,x25,1002223313322000021133311331x010,13111x07,x25,1000022233133200022x17,331x011,1331132000x25,310000222331333222233x15,331x012,12333113x25,333100002223331333223331111331x014,12233111x35,111000222233331x37,111331x015,10023333x19,32222x36,11x35,11311x015,1010223333x19,322x36,11113331111x016,1002102x16,x07,11x36,x110,x017,10002311203111x09,x17,3333x15,x018,112233100231x010,102133111133x15,x019,x16,023x010,1022311023311122331x024,11x012,x15,0002231122231x043,100021001111x045,1111x019,",
                        "WARTORTLEFront": "p[1,2,3,4]x0110,111x044,1021x043,13021x016,1111x023,10321x014,112221x022,100321x012,1100221x023,132231x011,10002231x023,1032x16,3x05,10003331x023,1021120022231100100332221x023,1212x05,222333100302221x025,12x06,22223100302221x025,12x06,x26,10302221x026,1100002223311213033331x025,1231x25,3313222110021x026,1323122233132022331221x023,111200102223301002233111x022,110012101122223110021331x023,1x05,12201x25,100221131x05,1111x013,1x06,11x213,33310001132231x011,1x07,121x210,1333x15,33222001x010,1001300001211x25,111333311113322200001x09,1022230000122x16,0133x15,33322200001x09,102221000131222333313311133313322220001x010,102100013331x37,1111322331332222001x011,11000132233x19,3100223113332221x013,1000122233x15,3233310022311333321x013,10001322231111320223331223133x15,x014,100013223120211000223113112231x017,13000133311000231102212310222331x016,10300x15,2000222311320231002231x015,100300132212000222233100021002231x015,10032213221300022223331002102231x016,1223221322313x26,3331002123111x016,12223231323113222233331021111231x017,1222331333111x37,11213102331x017,122333313x16,33331111231333111x017,1x35,x112,x26,133x15,x017,11333311333111320000221131133331x018,x15,x35,11132002231111x36,1x021,1223333111x35,111133322231x020,1x25,333x17,000113222231x020,10x25,331x011,x16,x020,1000x25,1x038,120x25,1x040,x17,x0128,",
                        "SQUIRTLEFront": "p[1,2,3,4]x0290,3x15,3x031,100x26,1x029,100x28,1x027,1x212,1x026,3x212,3x025,3x214,3x024,1210x25,1022221x024,1211x25,1122331x024,1231333323123321x024,3x214,13x024,3211x35,22221001x023,122133332222120003x023,12233322221320001x024,3x17,33322213x022,3121331x35,1331301x019,3123133313332331102323x017,30223200212002231100131x017,1003100130130021133031030000113x010,3113130230031133312300100032221x012,10002100002233123021001200021x08,311100223000022331232210120313021x06,3002113130311322331231030301000103x06,10022110030002113312101010300200121x05,10222310210022231331323022100100323x06,122331223022231113211130023001321x08,133313232223133331313x25,33321x010,31101131133223331332002013113x020,122223311322201x026,3022331012003x027,100223200131x028,100221x035,3113x059,",
                        "CHARIZARDFront": "p[1,2,3,4]x098,22x030,111x021,22x029,10221111x018,2x017,1x012,1002233111x032,101x012,100x36,11x016,2x013,101x013,133331133311x014,22x011,1021x013,1333313133331x09,20002222x09,1331x09,1000133331331133311x07,220002222x08,12331x07,1010013331x35,133331x011,2222x07,122331x07,1010013331x36,133331x010,x25,x06,1223331x06,1010013331x37,133331x08,x27,x05,1213331000011101113331332222333133331x07,x28,00001131331001133101331331x27,333133331x05,x29,0001210213311133312133311x29,331x35,1000x210,00012210213x17,2133331x210,321x35,100x211,0012211021111333121133321x210,321x35,10x211,001221110211322232331322212000x25,3221333310x26,32222001231311231x27,331222212x05,222321x35,1x26,3222200123131112320x25,33332222122x05,2322133331x26,32222001313313120000x25,313x25,112x06,321x35,122223322220013133122x06,2223121x27,1120000321x35,10222332222001313312x07,2231201x29,1x05,321x35,1223332222013313313x06,22211101x26,302212000321x35,1023332220013312301x05,232313101222200100221000322133331023332220013122301110002323311132220000300221200321x35,133332200013120301221102x37,122x05,1000221203221333313331x05,131203021013102x36,122x06,300223123221333313331x05,13120300210122022233312x07,100023123231333313231x05,13120300021x29,312x07,300022132331133132231x05,13100300022120x26,331x06,120002231331113132231x06,13100230022230022223331x06,30000223x17,222331x06,13100030002210032221331x05,120002233x16,2222331x06,1310003000211300322231000031200222333111122223331x07,131000300021112000211000112222x36,1111x38,1x07,131200030013x16,3000032232222333113311x37,11x07,13120003001331113x06,10213222211x36,11333111x09,112200031233111x07,3012231133322x35,x17,x09,111221132233313x08,310212213x25,3333x16,x09,11121312223331x010,3023023x27,333x15,x011,1110131233311x011,31011220002222333111x013,110131133111x015,12x05,222233111x014,101213x15,x014,3x07,22223311x017,1112313311x013,1x08,2222331x018,312132331x013,1x08,2222331x019,110023331x011,23x09,222331x020,100223331x09,2221x08,222231x020,300222333120000x26,33x08,23311x021,1002223331x29,3311300012233111x022,10222233311x25,3331101131102223331x022,10222233x110,x05,110022223331x018,3111133233331111x011,3000222333113x015,31100022x36,11x013,1132231110231x013,3021111023331113x013,102213023100231x012,10102221233311x015,100221002310023x013,3x111,x017,3113031130313x06,",
                        "CHARMELEONFront": "p[1,2,3,4]x0169,11x044,1121x043,10231x040,11102331x038,110002231x038,1000x25,31x036,1000x27,31x035,100x28,31x028,2x06,10022200313331x026,22x05,102222003101331x025,222x05,112222031201331x024,2222x05,132223211121331x023,x25,x05,1x25,x15,3311x022,x27,000130x26,x35,x19,x014,x28,001000x26,33331111x36,111x010,x29,00100x27,133111x36,2233311x08,22223x25,013x27,31311x37,x26,3311x06,22223x25,012223222231113202x35,22202222311000x25,332222001x25,33111320002311332220022333100x25,33222200011333111332x05,1201333x25,33111022223332222x05,x17,220001120011113223331211122223332222x05,1113331122213310121001333110212122223333222x05,11x36,1113333120100011121021100222333322x06,1133222x38,1011x05,102121000222333322x07,133x29,3331021x05,1211x05,2233231x08,113202x05,22310011x06,1x08,2122331x08,1132x05,2223x16,x015,12233311x06,13113200223111333311x015,10233331100013230x17,2x37,11x014,1202x35,11132022x06,22x38,1x015,1002x35,1320002200002233322223331x014,12022333312x05,1x25,313x27,31x015,1222333132000222133331320002222331x015,12223113220222331133120000x25,31x016,1223113x25,333x15,2x05,2222311x016,1311113222x35,x15,2x05,223311x017,x15,3222x36,11112200022333111x018,1111x38,x16,x25,x35,11x020,111x35,x15,00011x38,11x022,11x36,11x06,111x37,1x020,11x37,11x07,111x36,11x018,12111131111x07,11x36,1111x019,110021021x07,102x16,021x022,1110111x08,1110221021x041,111011x06,",
                        "CHARMANDERFront": "p[1,2,3,4]x048,231132x08,2x024,1x06,31x07,2x06,22x014,10000x25,1x06,22x06,2x013,10000x27,3x06,22x011,2x07,30x26,00231x06,2222x08,22x06,10x26,02320330020002222x07,22x06,330x25,0310031002000x27,00002x07,310x25,31111310022000x27,x011,313x25,311133100022002223x25,x09,13132223321x35,002220222232222x010,13x26,x36,10002202222332222x08,32000x25,x35,100002022223332222x07,100x26,32313333x05,x25,33x25,x06,30x27,12133331x05,x25,333x25,x06,1x26,121x37,0000x25,333x25,x07,12222121333223310000x26,3332222x08,311x36,23223310000x25,3332222x012,1332233222333000x25,3333222x012,3222232222331000022223333222x011,320221x25,3331x05,22333322x011,11000100222333221x05,1333322x09,1321000300222132222300013333x011,100210030002213x25,1001x35,x010,3000210010322133x26,x37,x011,10322100332312320x25,1x35,1x011,3322130003110210x26,133331x013,313003x07,10x26,13331x019,1x08,x27,1331x021,1x07,1x25,1311x023,1x07,1222211x026,1200002212233x028,1122221x35,1x026,133331100122331x024,12233100001222331x021,11222233100012222331x019,1x26,3310001x25,331x017,1x25,133310000121223331x016,1212212311x05,122123131x017,3x15,3x08,x17,x08,",
                        "VENUSAURFront": "p[1,2,3,4]x0300,311113x08,311113x034,312200001100003100002211x031,1220003300210012x07,221x028,312220033300021120003300022211x022,3x19,x05,21222212x05,3x18,3x015,311x08,2311221210110121221132x08,113x010,31222003330000222113x18,31122200003330022211x07,1x25,003330000332210x18,012233000033300x25,1x05,12223222x07,3333100313003130013333x07,22232221000012233322200002x16,x012,x16,200002223332210000322333x25,111000222113002200311222000111x25,33322x06,1x27,11x08,22221222212222x08,11x27,1x06,12222111x06,3300022221331222200033x06,11122221x07,1211012200003333002x110,2003333000022101121x012,12221x08,11013111131011x08,12221x015,1x27,000021001x38,100120000x27,1x015,1221x27,10001x38,10001x27,1221x017,111x26,10001113313313110001x26,111x020,1112222x15,222121121210001222211x020,10011112112211311x28,101101111x021,1311122212211221131132222x17,x022,1133311112221x25,3133x15,22x15,x020,1133111122223332311333111122223x17,011x014,1313111122311x37,133x15,31311112222122111x010,1333100x16,333113333110011113x18,222122311x08,1333120033213331111331200221111x35,22211112331311x07,11311200001131113211200112111x35,1x27,11x35,1x08,111x05,2211x29,11121x35,13312221333113111x09,10000x210,33x27,x17,3313331x35,13331x07,1200022211322000223x26,31133x15,33133133331311x06,12132222113220003113x26,31x36,x15,33133133331x05,103213x28,0310023x26,331x37,11113133133331x05,30301120x26,01110032221113331x37,x15,331331310000100301300x26,103103x25,1123331311x36,111101101x05,100022003221x218,33133113223331x012,3000x217,333322223331x35,2222331x012,103123x16,322111x312,1x35,22221131x013,110x111,202111333311333131132202221131x013,12x18,333101333111133311331132000223131x012,1013111133322331x36,11311x36,200002233331x011,10121133x27,x35,0113311x35,2200002233331x011,1012133133x25,333311133111133322000022x35,1x011,322121101x35,101111333131113333x27,33331x013,1221223x19,22231133311x35,12222x35,1x013,32221120000x25,3111322233331311x38,11x015,12233x111,31322223333x16,33331131x016,111331133103x15,222x35,x112,3111x015,100110011001201011x37,1100010013331001x016,x16,x05,1101110031001x06,110111011x034,111011x080,",
                        "IVYSAURFront": "p[1,2,3,4]x0367,1111x041,111222111x037,1122000012211x034,1222x05,123311x032,1222x07,133131x030,13x26,0000113111x030,133x26,0000131021x016,11x010,133331x25,002210021x015,1001x09,1331131x28,10221x015,11221x08,11123113x25,3122221x015,11223x17,32221111x37,122221x016,111220000232233111x37,122221x017,1x28,3x25,3313133311222331x016,12223x212,33x15,x36,1x016,113x26,32333x25,x15,x37,1x016,10132222323111x25,3x111,x017,10112222331101x25,33x15,33111x016,12211222231110x27,31111x36,11x014,1x216,322223311333222211x013,12223223x26,113x26,3313123221221x013,1113x25,1113x211,112023000221x013,10031113x25,3333x25,3112132300221x014,13x09,223310222311110002300121x014,1113x06,22210022331131013023002211x012,x16,3x05,10002222133310003230221x012,1331132x05,10200222213333101022301x011,11233312x06,102202222133331100323021x09,10122231x07,110001121x36,10101231x011,11222111x06,10111001222x36,0101121x010,10111211x07,1100110002223331x05,11x011,10101331x07,211x06,222331x019,10133331x05,221x08,33231x020,122223310022231x08,32231x020,1002223312233310002200002231x020,1000322331133310022200022333x021,103332333113331x06,22331x023,1112223110x15,000222311x025,10x15,x05,1112112111x025,10100101000010011001001x026,101101x06,110111011x061,",
                        "BULBASAURFront": "p[1,2,3,4]x0187,1x038,103x036,10013x031,311100321x028,311012000121x025,311000120023121x024,1000312000221321x023,100120000222313231x021,13212000222333120211x019,1331330111333313202131x013,1110013313310021333132023131x011,102210x16,00223133132022131x011,100211x25,1222331313200223121x010,1x06,x25,123313133200233121x011,1x05,21122x35,1132002233121x010,1x05,2112231x35,113222333101x09,100100x25,31133313311x35,1301x09,10101x25,310213311333133313021x09,11211x25,311221x37,11130233x08,10101x27,11001x35,133132231x09,1x212,31113333113313331x09,10313x18,31000133311331111x011,102x110,000021x37,11x010,11000023x26,1000022313311331x011,1x05,x18,000222x39,1x011,1000221x06,10222333312233331x011,13223310000223123313130222331x013,311131x27,111331200222311x016,10312222x35,13000022331x016,1002311x36,12000022331x016,3000223x17,3200022331x017,10022233331011320223331x018,31223333131011x36,1x021,3111133310001113331x025,1331x05,13331x027,11x07,111x09,",
                        "MEWBack": "p[1,2,3,4]x0263,31113x026,1000021x024,30000223x024,1002231x025,10231x026,30021x027,1003x05,313x020,1001000010001x019,12010001x05,1x018,1201133x06,23113x014,1201002x06,220001x013,3203x09,200001x014,1203x013,1x014,3201x07,2000023x013,1212032000022x06,1x012,323201200002x06,21x013,121203x011,23x013,323201x010,21x015,121203x08,23x016,123201x06,221x0139,",
                        "MEWTWOBack": "p[1,2,3,4]x036,13x011,33x016,32213x08,3221x015,1022313x16,00223x014,1033x06,22220021x014,13x010,22203x015,3x010,202221x015,1x011,22221x014,1x013,22223x013,1001112x06,202221x013,11122332x06,203221x012,10221112000023300321x011,10011x07,220030321x011,101x09,222203231x010,1001x010,22301311x010,1011x010,2230103x011,10111x07,x25,331x012,10102110002111122221x012,10012310001000012222100111x07,101331001x05,212221010001x06,10211001x05,22311100100001x05,112100010000222310000110021x05,112210012002111310001001231x05,101231012221001110001001211x05,10113320123100011000011221x06,12101120011100001x05,1231x05,12231x06,231000210001331x06,12331x05,222210223101331x0135,",
                        "DRAGONITEBack": "p[1,2,3,4]x064,11x030,121x020,1001x06,101x07,1x09,1100323x06,121x06,11x05,1110100101x06,11011000010x15,2211000301x06,13102300001112221131001003x06,1331310000121113331001013x07,13211100003212333310101x08,1301311x05,301103311121x07,111333110001110131033121x011,1321100130121331231221x010,10113013031213331111221x010,131113032121031x27,3x08,113131032232131x27,31x09,13101032121331x27,03x09,13101032131311x26,31x011,31010313131113x25,31x011,11103211313113x26,31x010,113032111321113x26,33x09,3103231132211113x25,31x08,110323113222x15,3222331x07,130323113222210111x37,x06,130322333x25,310111x35,1x05,1303x211,33300133331x05,1303x211,33310003113x06,1303x210,33331x0141,",
                        "DRAGONAIRBack": "p[1,2,3,4]x0151,1x030,11x020,311130000101x012,31130000100031113021x012,10003113011133102111x013,11002001100023130031x014,11101301x05,21023x014,1021322111130221223x014,301200210001122321x014,113000013310012121x015,120000211000021211x014,1200002210100312103x013,1320002210013211201x08,111000132022221222133221x07,1003100013x26,111x36,x07,1033111001x27,x36,1x08,13331131001x25,3311113x08,1011100111001222331x012,10001x09,133331x012,10021x010,13333011x08,10001x011,113331001x07,10021x011,3133212031x06,12221x012,132231331x06,12221x012,31322313x0135,",
                        "DRATINIBack": "p[1,2,3,4]x0266,11x06,111x021,101000010001x020,1011000010001x020,3310011110001x019,1221100231321x017,3110212023110321x016,10001x35,100021x017,1001x36,10211x018,121x35,1221301x017,131x35,11132001x016,311x38,22221x019,1x37,22221x020,1x37,221x013,231110000133331111x013,3111131000133331x015,21113200100133331x014,2111120001013333201x013,31113x06,13333201x012,311112x05,133332001x012,x15,320011x35,2001x0137,",
                        "MOLTRESBack": "p[1,2,3,4]x06,31x06,2x022,20011113003x020,2000013231001x020,2x05,1201031x023,111132131x021,1130001301x021,132113202221x018,311213000331323x016,2000130032021131x019,130320002211x019,11312033011101x016,3110130120031021x015,31001301300313201x014,2000213130121313211x017,1003213133323101x015,3001311x36,13201x013,20001101x35,1011301x015,130001331100001101x012,23x05,1111x07,131x013,31320131100031130033x010,23122312331021133100002x09,1120212223111322221x012,1200110222212x05,223x010,1300100022212000200021x09,13201200222120023202001x09,1201x26,1302232022021x08,13201x25,13130320032021x08,123132222321303200232021x0136,",
                        "ZAPDOSBack": "p[1,2,3,4]x0102,1x031,31x015,1x015,11x013,11x015,321x011,103x016,121x09,103x017,3301x07,1001x018,1201x05,1002x019,3300100010021x011,31113000010023010003x012,30000313032022300021x013,31x05,31300220023x016,31x05,3x05,23113x016,31x08,232222311113x012,13x08,x27,31x012,122x07,x26,31x012,312222x05,2232231x013,1222333000022223111x012,133331130002232210031x010,33113000100222122210003x016,12022233132211003x014,1302223311332301103x011,130022223100133100011x09,130000222330000131x012,13x05,222231x05,11x010,13x07,222233x06,3x0138,",
                        "ARTICUNOBack": "p[1,2,3,4]x0133,111x029,120111x027,1200011x026,12000011x020,x16,2x05,1x019,10000212000221x019,1222331x25,1x020,x15,21112221x019,13x05,231111x019,13x06,100011x019,13x06,101313x019,1x06,211101x019,13200002221021x019,1320022211221x020,132222100111x021,1322231x026,1323331x023,11100223x15,x018,100100022100221x016,10010000210002221x014,102210002100002221x014,122100001000x25,1x013,12221000010x27,1x031,1x0136,",
                        "SNORLAXBack": "p[1,2,3,4]x0134,3x09,31x020,13x07,311x020,113x05,3111x020,x17,3x15,3x017,3x114,3x015,2x116,x015,3x115,31x013,2x115,321x013,3x114,32031x012,x115,20111x012,x115,200031x011,x115,300001x011,x116,20021x011,3x115,32311x012,3x119,x011,3x119,31x09,3x119,3211x07,2x123,01x06,3x124,3x06,x126,x05,2x126,x05,3x125,3x05,x126,x06,x125,3x0134,",
                        "AERODACTYLBack": "p[1,2,3,4]x081,13x029,301x017,13x010,101x016,10013x07,1001x017,100013000010001x018,12000311300031x019,322300x26,31x018,1230000x26,3x019,3x05,x27,1x018,1x05,x27,30113x014,12000x29,30001x013,1x214,00003x010,101x216,001x09,1031x210,31x26,33x07,10013x29,10213112331x07,100101x27,10223x15,31x06,12301001x25,102122111331x07,1212101x25,302133212231x07,12112103x25,101321212331x07,1233211x25,102123232111x08,131221x25,10232323121x09,132122322223122132323321x08,123123223331221323232121x08,1321213333122132323231221x07,1231213331221323232323321x07,13212133122132323232321221x0134,",
                        "KABUTOPSBack": "p[1,2,3,4]x084,111x028,1331x09,11x016,133311x08,101x013,11333131x08,100x113,223313331x07,11x08,x27,31133331x07,121x06,x26,3111x35,1x07,123x116,x35,1x08,123x115,x35,11x07,103x115,x35,11x08,123x15,223x16,x35,121x07,1031110223333111x36,121x08,123112x15,3111x36,1021x08,12311x35,111x36,10021x09,111x38,113333110021x05,1111222x310,x16,0221000010000222x313,1111221x05,100222x318,121x06,1222x317,11221x07,1x317,1112221x07,11x313,1113112221x06,1101x39,1113133112231x06,1102113333111333313331231x06,1212333111102x35,12331331x06,121233331102x35,11023311x06,123313333112x35,11110231x0135,",
                        "KABUTOBack": "p[1,2,3,4]x0396,x17,3x022,1133300222313x018,130030002223231x016,13022300222232231x014,1302230022223002331x013,1002230x25,3022231x012,1000213x26,3222231x012,100223x27,12222331x010,10023200x26,32222331x010,1023200x28,3222331x010,303200x29,3223331x09,1003000x29,3223331x09,10230x19,223223331x09,122x112,2323331x011,113x011,3113331x027,3111x0135,",
                        "OMASTARBack": "p[1,2,3,4]x014,11x030,121x025,11001321x024,10x16,x023,1120133331x021,111200102331x020,1212231002331x018,13313310322231x018,120011022321131x016,1330000332213311x011,1110012011000231233131x09,100011231001332213233110011x05,100001301201023123233110100100001000212013210221223x15,0001x05,102212331133321233111220001x05,122313x06,23123111232201x07,13212x05,222123111323231x07,132123313332213311133231x09,1213010102331333133331x09,1121231313322313133331x09,10113120100233311331111x09,101131x36,233133310001x07,1001131120002311x35,10001x06,1003113313333111x35,10001x06,100222333111133x16,20001x07,10023231021333323222020101x07,100221002213323x26,1001x06,101111200023133x26,1011x0134,",
                        "OMANYTEBack": "p[1,2,3,4]x0363,x16,x025,13333031x023,1x05,3031x021,13333030311x021,100003231331x019,1333302213023x019,10000322302121x018,10000231021011x018,13333221010231031x014,1100003212103110101x012,301000023131211103001x011,101000022131311130001x011,30133332213311110003x013,1212223313331130001x014,11x36,131132001x015,1213333111132221x016,13x18,32221x0138,",
                        "PORYGONBack": "p[1,2,3,4]x0396,31333x025,313000033x022,333x07,3x020,133x09,303333x013,133x011,300003x011,13222x011,300303x09,13x25,x08,33033033x09,1x27,x06,300x36,x09,1x28,00003011032333x010,1x28,003301103233x012,1x28,3223003223x010,31111x26,3222233223x010,3223331x25,3x27,3x010,3222233312223x27,3x010,3x26,3331223x26,3x010,3x28,333111x25,3x012,x29,x35,11113x0108,",
                        "FLAREONBack": "p[1,2,3,4]x075,x15,x026,1002221x024,1x05,2210011x015,1111x07,2210121x013,121x011,212221x011,121x08,11120312223x09,1221x07,1222123310013x08,101x07,120222133120213x06,1001x06,1002022133110031x06,1001x06,1000202111010221x06,101x06,1x05,22101102231300001001x06,10000202102212321100001001x06,1x05,21111213231100001001x06,1x05,10223133311300001001x06,10000100222333113x05,10001x09,100222233113x06,10001x09,1x27,01x08,100001x08,1x25,3311x08,1x05,1x06,21111x35,1x09,1x011,100001133331x08,1x010,21x06,113311x07,1x010,21x07,x15,x07,12x08,2221x06,2211x09,12x06,22231x07,21x011,12000x25,331x05,2221x011,13x26,3331110x25,1x0135,",
                        "JOLTEONBack": "p[1,2,3,4]x051,1x031,11x013,31113x012,131x013,122113x010,1213x013,1222313x05,11003313x013,3122313000010101211x015,122311300010112313x011,311132331110012012211x012,31222233111121212211x014,1222x35,222232212x015,31133220022122211x017,13220000x25,123x015,13322000022221101x014,123222200x25,3111x011,313023x212,311x07,3113x05,3x215,1100001x09,3x216,1x05,113x26,3x216,1x08,31322223x210,133331x011,3100x211,x15,x05,1x05,31000x28,12111121x06,1100310002231220000100121x06,1001210022211122000012001x07,1002110211122212200011201x07,10002111x26,122000121201x07,1000210x27,12200132101x07,1000201x27,12200122211x0134,",
                        "VAPOREONBack": "p[1,2,3,4]x077,31113x026,10233313x014,23x07,1002331113x013,31200001300023311113032x09,11320013100223111132313x08,211132303100223113203111x08,3111131031002311120311112x07,x16,0031022311323x15,3x07,x16,023102311323x17,x07,x15,31231223223x19,x07,1111231231232223x19,x07,311102313132223x110,x07,231100211x25,3x110,x08,2310223122223x111,x09,230221x25,3x111,x010,11223x25,3x110,3x09,333133x26,3x17,32x010,1233133x25,33311132x012,10231113222x37,x014,10221200311133331x015,31223000322031113132x011,233112003222000032201x011,32333000132220000321x011,11221000231222200003x012,310211323131x25,313x011,3102113311333133331x0141,",
                        "EEVEEBack": "p[1,2,3,4]x0296,11x013,11x015,101x011,101x015,1001x09,1001x015,10221x07,10001x015,122231x05,122231x014,1012333x15,222313x013,100123310021222311x013,100011310002322311x014,10001012002222311x014,30000101x28,31x014,10000101x29,31x013,10002101x28,331x013,10222111x27,3331x013,322223101x25,3331x013,3x25,3320x19,x013,1x26,31x06,21001x012,3x26,312x06,10003x012,3x25,33132000231021x012,1223232312x16,3123x0136,",
                        "DITTOBack": "p[1,2,3,4]x0454,31x029,1221x027,1220230001x022,120023001210001x017,1202210012300123x016,1220221122211321x016,13x29,332231x015,1122200x28,3100011x010,11320x212,101221x09,131x215,12231x08,1313x217,331x08,133x216,3331x08,133x216,3111x09,133x216,331x0136,",
                        "LAPRASBack": "p[1,2,3,4]x010,1100111100111x018,130110000110001x016,12010002023301231x015,12102020221312221x016,10x27,1312221x016,10x28,32101x016,30x211,3011x015,102233x27,3111x015,102333x28,3121x014,102333x211,01x014,10233223x25,33221x014,10x25,33222311331x014,30x25,33x25,311x016,30x28,330001x016,102332223210111x017,1033332231x022,1033332221x022,3023322221x021,10x26,3303x020,102322233301x020,323222233321x016,1001232323223321x015,3013132323x25,01x015,10111131333222201x015,10211313333233201x013,101021113131x35,03x012,1010223111313323321x013,12102333x15,313331x0140,",
                        "GYARADOSBack": "p[1,2,3,4]x013,1x030,101x029,101x029,101x029,101x029,101x028,1001x028,10021x017,11x08,10021x017,121x07,10221x08,111x07,12110000100231x06,1121x09,1021100102333100011021x011,10221112333110110231x013,102312333111100231x013,x16,3x17,2231x013,1x05,2111123x16,x013,100022310231123x15,x013,11023111023112x18,x08,1100221333112121311112001x06,1000021233331110311122001x07,100022x36,131231122001x09,110210333312331231200131x07,13012123333123312120000131x06,1310211233310333112x05,11x06,11002121222123331132x05,1x05,1100021031113122111132x05,10000110002123331231131113320001x05,1311001123310333x15,33201x0134,",
                        "MAGIKARPBack": "p[1,2,3,4]x0102,111x029,13211x028,13021x027,103021x027,103021x023,1111003021x021,10022100322x16,x015,100002202323133331x015,1x05,222313322331x015,133002221312222311x014,1003322123122221001x08,100012200231223122221011x07,10100111322132331222210111x06,101x05,x15,3331222210011x06,101000010223x15,2222100101x05,110100012233122331222311101x05,110100012311022231223333121x05,110100101111222233133x16,x05,10101012313122223311100223110000101210131331222331110x15,210000101211313023123311101x25,01x05,101211102223x15,012200001x06,10131113223131110122x05,1x06,1013111133123310122033331x07,12213x15,022312133322221x0134,",
                        "TAUROSBack": "p[1,2,3,4]x071,11x031,11x030,111x028,1111x028,111100011x021,x16,00101x07,11x010,110011100121x08,101x08,1001100x17,x08,101x06,10110011x06,211x06,1031000010210110021111220211110010310000101010002x17,2202121102310000101102023x18,232211023310000120120233101333313232211331x06,1013331100111x35,2332111x07,12011100101001113331331221x07,12001121201100013311131221x05,111120012101011001331111221x05,10021122112012212013111131x06,1020221222101221320131111x06,10002010012101222132x15,x07,1002021203102122211331021x07,1000222122221x26,113311x07,100202221111x28,33331x08,10020x213,33331x09,1000x213,x35,1x0168,",
                        "PINSIRBack": "p[1,2,3,4]x0105,31x09,11x015,1311001x07,1001033x012,10021x09,100131x011,103121x09,12001x011,102131x010,32001x09,11102213x011,12003x06,130302221x012,12201x07,13102221x09,13112001x08,102222331x08,1212201x08,10222131x010,1222003x07,1022211x011,1223101x06,1022221x010,113221011x05,10021121x09,1312221031x06,10102121x09,1x25,13x07,1021212100x15,3123122001x07,1022122211x05,3021012001x07,102222110022323122103101x08,100221100002232102011001x09,10211x05,232321x05,1x010,10010020022x35,110011x011,1100x25,x36,131111x012,102222x39,131111x010,100222x39,1313111x010,102222x38,13131111x010,10222x38,1313x15,x0135,",
                        "MAGMARBack": "p[1,2,3,4]x06,11x09,111x016,312013x05,3100211x016,31221x06,130221x017,30213x05,10021x017,300021033100021x016,1x05,23x08,13x013,3x06,3x010,21x012,1x05,23x011,21x05,1130003x05,3x012,21x05,1001300100003x012,23x06,300013020023x011,21x08,10000312222x010,23x010,12222011322x08,21x012,12223201132x05,2221x09,31101133320113x27,1311x07,100110133332113x25,310003x06,10000111333311113311113221x07,1x05,113331111300221111x09,122220113111130000221x012,133320131311x06,221x012,13332013311x06,221x09,310013331333312x05,121x09,101112x37,122000321x010,100131x38,12222131x010,120011x37,231221311x010,11220333233323331111331x08,1331333320232023323101331x07,13111332000200023011001331x0133,",
                        "ELECTABUZZBack": "p[1,2,3,4]x0199,111x05,100111x017,1002100010112231x015,100223100121002231x014,122213101011002231x013,13123311102111122311x011,113111132233101223131x010,1211101000023310111311x09,111311100002323310001131x08,1211112000222323310012211x06,123311x29,323310111321x05,1311x210,32333310111321x05,131x211,3233331211331x06,1311x28,32x35,1211331x07,112112223232331112113011x08,1122211323331133113311x09,10013222x15,233311131x010,102113x27,323x15,x011,1221113x25,33x16,x012,x19,222111133331x011,x16,x25,32x37,1x011,31001322223232x36,1x012,102213222232x36,11x012,3x15,322323333x15,x013,31112211133x17,x074,",
                        "JYNXBack": "p[1,2,3,4]x0139,3x17,3x022,3x28,31x020,1x06,222231x018,1x07,223323x017,1x07,2002233x016,32x06,2000222132x014,1x06,200020231132x013,3x06,200020211123x012,32x05,2000020011202x012,1x06,2000200011001x012,3x06,2000200011102x011,32x010,2000x15,3x010,1x011,20003130221x09,1x015,2100313x09,3x016,102132x09,2x016,13221x09,3x017,3111x010,1x017,213x011,1x06,33x09,21x012,1x05,3113x08,21x012,1x05,11112x06,2231x011,10000211113x05,22221x011,100222x15,200x26,1x011,1x25,x15,x29,3x0136,",
                        "SCYTHERBack": "p[1,2,3,4]x09,1x026,1000101x024,10100101x024,103101031x023,302111031x024,103110231x020,110102310231x019,133111031102313x018,1233102210231313x017,1233132222313311x017,1330022232333111x014,111300222020123310111x010,10330002222000123101011x09,100300222200022123123021x09,11200222211102123331111x010,1020x25,3311x38,1x010,1x211,x37,1100311x06,32311x29,333111011031x07,310011x26,3311000120321x07,100022122223311100120323x08,100222312333132310120321x07,3002223313333120331203221x07,1002233313333x16,203221x06,311113311x35,100012203233x06,10022x15,x35,0001203221x06,10002233131333100001203221x06,10022331113133100001203221x06,10023311131333100001203221x0134,",
                        "MRMIMEBack": "p[1,2,3,4]x0106,11x029,10111x027,101001x026,10001111x020,11110002222100001113x011,x15,32221110000x15,3x010,x16,322221000x17,3x08,x18,2x16,0x15,011x06,11010x16,x06,x15,0001x05,10210010111x06,x15,x010,1002110001x07,1111x012,10221001x011,1x013,1022101x011,x15,x010,101111x010,1233331x010,12331x09,120233331x08,120231x08,2132x35,1x08,1323331x06,221x37,1x08,1x35,1100002221x37,1x08,1333310211222211x37,1x09,1331000021111221x35,1x011,11x09,2222x15,x013,1x010,2221021x014,1x010,2221021x014,1x09,22221021x015,12x05,x25,11021x0136,",
                        "STARMIEBack": "p[1,2,3,4]x0459,1x030,121x028,30223x019,1x07,10221x011,3110000321x05,3002223x08,312210000120100001002221x06,3102221000013201003000222230003100222310000132201010002222103100222233100001322201000022223100x25,331x05,13222201000223100x26,3331x06,13222201003100x27,33331x06,13x25,01100x28,33331x07,133x25,00x29,x35,1x07,133x215,x36,1x0134,",
                        "STARYUBack": "p[1,2,3,4]x0390,11x029,1001x028,12201x027,132201x025,13322003x024,13322201x024,133232001x023,123222201x023,1333222001x021,13233222201111x018,1233322220210010001111x010,13213x26,132111100001x09,11313323222311100002221x09,1311332223222002222331x010,113113x28,x36,21x08,x17,x312,2321x0136,",
                        "SEAKINGBack": "p[1,2,3,4]x025,1x030,103x028,1001x014,313x010,12003x013,100031x07,10323x013,10002031x05,120001x012,3003132233100102003x013,1000021223311300321x012,3000020233x15,3003x013,1003132231111321301x013,1000021311113200232x010,3113003122x15,2020013x09,30000313223x15,02000012x08,1x05,212311313120200103x08,1022200122112121222230313x07,1000020321112311222210101x07,3000022213131131222210111x08,103332222113323322230313x09,30000111313322122221031x08,1000010223133331221022131x06,100003x25,313333130103011x05,10002222000231133131200103x06,300200033000231310030023201x06,3113030000203111030123131x011,100002011330323011x013,10000201231103023001x012,3000011022110230001x014,1x05,22310112301x0138,",
                        "GOLDEENBack": "p[1,2,3,4]x0246,1x030,11x020,313x06,131x019,3220313001001x019,130202011031x019,3003221131001x019,130211323211x019,30021333220211x018,100133223000303x017,121333222000121x017,1013230200002311x016,1112222x05,22301x015,31320202000x15,3x09,x15,001322000021022331x08,1x05,1101320001030022331x06,1000x25,11332021003002231x06,1x06,223213321100103113x08,11000013221311110003x014,100102231331001001x014,10002333133100013x0172,",
                        "SEADRABack": "p[1,2,3,4]x012,11x030,1011x07,1x021,1001x05,11x011,1111x07,1201000101x012,10010000111130111001x013,100100100222331001x015,1221100002221221x017,121200002212211x018,122200x25,1011x017,1x29,x17,x012,3111x215,1x07,110010001x213,1111x07,113031111x28,111131201x06,123100001x29,333322201x06,123130001x26,x35,222201x07,123013001x39,1122201x08,12300113111333311001201x010,12330011331111x05,11x012,1223000113023x014,x17,223300011331x012,1x06,x25,33000131x013,1x35,00001100021131x013,3122233110002110331x015,12211000211312231x016,110002111310131x015,11000211331112211x014,12002113311021323x016,1311313021333131x0141,",
                        "HORSEABack": "p[1,2,3,4]x0359,110311113011x019,1021022333101x020,31000223101x021,122022212111x019,11x28,0021x017,101x27,1111x019,11x26,10113113x017,31x25,31013021x016,1021222333111301x017,1103x15,333113x023,1133321x025,12022333x023,11x35,21x022,31120222333x020,3000x36,21x020,133312022231x020,10001x35,21x0138,",
                        "KANGASKHANBack": "p[1,2,3,4]x0133,111000x16,0000111x011,11023111002222111100011x08,1000231000222233100002231x07,102231x27,331000022331x08,1221x26,3333100222331x010,1121111x36,10222211x012,110033113331212211x014,1000223311122211121x012,3000x213,1011x011,1102010x211,111x011,10101023x211,131x09,100021033x211,311x08,1000232132310x27,3331x07,100223132231000222211331x08,10233313222100022230311x010,133113322100223123111x011,11133322210223312111x012,12333x25,133313211x013,10023x25,311313211x012,102223x25,333132231x011,1022221x25,x35,22331x010,10223122232x35,2233331x010,13312223333131122333311x08,13131x36,131322x36,1x0136,",
                        "TANGELABack": "p[1,2,3,4]x0361,31113x025,31x05,1111x020,10023111331031x017,1023x18,320111x013,30231333111221320121x012,10313131133131332121x011,122131113313311131323x09,1312311122333131113131x09,101331110222x17,3131x09,1313311000113x16,213310013x05,113111001311133311221321101x06,1311221311331322011311331x06,3131122111221111220012111x07,1313131131021131112001331x07,13311313310213331112213021x05,122113110331021321131331221x05,122121311231021211331331331x0133,",
                        "CHANSEYBack": "p[1,2,3,4]x0298,x18,x022,11x07,211x019,1x011,21x017,1x013,31x015,1x014,231x013,12x013,1031x011,11001x07,100001021x010,10002100010021x06,231x08,100221002210221x05,2111x08,102212022100221x05,2211x09,x15,221002210001x26,1x010,1031122221x05,1221131x010,100031221x07,1122121x08,1x05,311x09,223311x08,1x016,2233131x08,1x014,2x15,331x07,1x018,222311x07,12x016,22231231x06,122x014,2222100231x0132,",
                        "RHYDONBack": "p[1,2,3,4]x081,1x030,101x018,111x07,10010000111x010,10001011101002100110001x010,102010021002331100021x011,102310022131110000221x012,1310002231332120221x013,31300223313x26,31x012,10001222313222x35,1x012,1000213313222231311x012,1000023313x25,331201x08,111000022313x26,3132201x06,1002112222313x27,333201x07,10022122331x29,331131x07,1002213331x29,3133321x06,120223131x211,331113x06,122233131x210,3230201x07,13331313x29,33322001x06,101112331x26,31113330013x05,11200223313x29,11331x06,121200233313x210,3131x06,2312222331313x29,331x07,233x16,2313x210,331x06,3310x26,331x210,331x06,33100222233313x28,3331x06,331000023333133x26,x35,1x0133,",
                        "RHYHORNBack": "p[1,2,3,4]x039,11x06,111x019,11001100110001100001x011,1000210112x05,2100101x010,1002100122200022210101x09,1002210001x29,1021x09,10211100213x28,12231x09,111100223113x27,1331x09,110102223311113x25,331x09,1001022333312111312221x07,1110010223333x25,1101231x06,101002122333x25,110021331x06,1310x26,11x25,3022313331x06,10x26,1001x25,333311331x06,123322210021x26,333131331x05,13311x25,331x25,x35,133100001211x25,333321112x37,1310000110022232233221001x35,1113100001022233x27,1001333313311x05,11x35,x26,10023133132311x05,121133x27,1022311132331x06,1033331x29,3313313331x07,12311x27,3133122231311x07,10133322223333112233133121x07,102x310,122x35,1121x07,1032x38,1122233111121x08,11x38,1131222113131x09,1311x35,11313331131331x0134,",
                        "WEEZINGBack": "p[1,2,3,4]x040,11x07,2x05,22x014,1331x05,222000223x010,1011333311002220000232x09,131102333231x010,2x09,131221133131101x018,122313313131131x017,12323333133x16,30001x010,12232313311x26,331131x08,1012131311122232233313233x08,11131311120232x36,2031x010,x16,02x37,131311x012,111132x35,2213131313x09,1110112x35,10331113131x08,1223113211331022131313333x06,30233313122131233313133331x06,1233311332012132x36,2031x07,1333113323202131333320321x08,111011333232331313133331x012,131x38,131333111x05,22x05,31x38,1311202113x05,22x05,2111333323313312331x08,222000313133332x35,1113x09,232000313131x38,11x09,23230000311113131311113x010,22x06,3x111,3x021,3x17,3x017,2x0151,",
                        "KOFFINGBack": "p[1,2,3,4]x046,222x07,22x020,322x07,32x020,232x030,2x019,222000022x08,22x012,2322200032x07,2222x011,2232200022x07,2322x012,323x014,232x013,322000022x07,32x015,2200003200013x029,3021x05,22x012,31x06,312231000032x011,100100031132323x012,2200012331112212331x013,230003313x29,313x017,1200x27,3233100031x010,120000x25,323233131023x08,322200x26,131233113231x08,1x212,12233311333x07,1x27,31x27,33x15,x08,1x26,3131x25,3333113x07,313x25,32313x25,3331311x06,32020x25,323x25,x35,1112x05,10x214,x36,13113x05,32313x29,31x35,131311x06,313222322233313133313131111x06,3112323232x37,13x15,33x0132,",
                        "LICKITUNGBack": "p[1,2,3,4]x044,x15,x025,11x25,11x021,112333x25,11x018,122x37,22221x016,1002x35,22332231x014,12023333x26,31031x013,1223333x27,01131x012,120x35,x28,01331x011,1203333x29,x35,1x010,12x35,x28,3002221x09,132x35,x212,331x09,12x35,23x25,11113311x010,132x35,x25,1223311x012,12x35,2322212002331x012,x15,3332322120223311x010,11233311332321222333131x08,12002333313323x25,111331x07,12002333313333x25,311131x06,12322x35,2113332222312131x06,122x37,21313332233111331x05,1232323313321x38,111331x05,12232333313211x37,101331x05,122232333132131333111221331x05,12222323313311313323232131x06,1x25,33331331131232323131x07,1022323331331313133331131x07,102323333133x15,3333111x0135,",
                        "HITMONCHANBack": "p[1,2,3,4]x0107,11x029,10010011x024,10010101x020,1110102210021x019,1001102210221x019,1002x05,2221x019,1020000x25,1x017,1112200x27,31x016,100100x28,31x016,10020x28,331111x014,1020x28,3312331x08,113000120x27,333133331x07,100x16,0x25,333x19,x05,1x05,x15,223333x15,333301x05,100002x110,2x38,11x05,1000x213,x37,11x06,100x214,x36,111x07,10x213,x36,111x08,10x213,x35,111x010,1x212,x35,1111x010,1x212,333311311x010,11x210,33331133011x09,121x27,x35,11133211x09,1231x39,x16,3201x09,1233x113,013321x0134,",
                        "HITMONLEEBack": "p[1,2,3,4]x0266,31113x024,313x05,313x020,1x07,202213x016,31x09,x25,3x014,1x010,2022221x013,1x010,20x26,3x011,3x010,20x27,1x011,1x09,2020x26,1x010,332x07,2020x27,3x010,1202x05,2020x29,3x09,322020202020x210,3x010,3220202020x27,32223x010,122202020x28,13223x010,3x216,13323x011,3x215,13323x010,31x215,33311x010,123x214,11121x010,121x214,13321x010,3223x212,333313x011,121x211,33311321x0136,",
                        "MAROWAKBack": "p[1,2,3,4]x0134,1x010,31x018,121x08,1023x017,12210x17,021x017,10223x05,210021x017,123x06,231021x017,13x07,210121x017,1x07,2100011x016,12x06,21000011x016,132000221x06,1x016,31122211x06,101x015,100111x08,101x015,1000212x06,2211x015,100002122020x25,101x010,11110002213x27,311211x07,10000100221333222233330121x05,1x05,212231111x37,10021x05,1x05,221331332113333120021x06,1000022311320022x15,2221x08,11022313320000222110121x07,11221333132x05,222310101x06,1000221113222000x25,32101x06,1000023133x212,1121x07,1002211333x211,3111x08,12231x35,x212,001x0133,",
                        "CUBONEBack": "p[1,2,3,4]x0194,31x029,1001x012,11x014,1002100111300001001x014,102211000211310021x014,1223x07,210021x016,13x09,2221x017,1x010,2233x017,1x011,2331x015,1x012,2221x015,1x012,22201x013,1203x010,220001x012,122233x07,22200023x011,1223x08,222120221x012,1222x05,x25,132221x012,1x212,122221x014,122211x25,3221121x015,111021222211300100011x012,11223x15,x07,1001x012,1233111221x06,10021x010,11133112231x05,12211x010,1002131x35,10001221x012,122331x36,1001221x0137,",
                        "EXEGGUTORBack": "p[1,2,3,4]x0135,11x028,112211x07,11x016,122110010000110011x013,1111321021001200002111x08,11333112212311220031123111x05,1x36,112013132231100112331x05,133x16,21312221321100211x07,11220111231323122122011x09,132200211313313111221x010,133111123131331133211311x08,1112002113113133112221321x06,113320023311131113312001021x05,1311322111331113313210021331x05,100111333113x16,201231131x07,11x06,3x16,312131001x07,10013x05,311133313131x09,3003003000021133332131011x07,10010110000231333201310001x05,3003x07,2221332200100001x05,1001000213222233322x06,1x06,10013003103223333220000311x06,10211302001221333222001111x06,12211130312221333322200111x07,1331111222210133332220003x0134,",
                        "EXEGGCUTEBack": "p[1,2,3,4]x0277,11x012,311x014,10011x09,100031000111x05,1x05,1x07,3x06,101002100111x06,1x06,1x06,2300022130011x05,1x06,1x05,22100221x05,3100022100003x06,22232210000130230222100001x05,22221232x05,302122221000012000x25,131x07,2223222100003222331133312200023112212221x05,12313000111222231000311331x06,121x07,12231x07,111x08,3x09,131x09,3x09,1x05,211201x08,111x08,3x06,3111212x07,3123x07,1x07,122112x07,2101x07,1x07,1001212x07,101x06,3x08,20000132x07,123x05,1x09,3001213x07,221x05,1x09,23322132x05,2221x0133,",
                        "ELECTRODEBack": "p[1,2,3,4]x0202,3x16,3x022,13x06,2231x019,10030000223221x017,10000x36,22221x015,1x011,202221x013,1x013,202221x012,1x013,312221x011,3x016,12223x010,1x017,1221x010,1x013,30000221x010,1x013,30001231x010,12x013,3001331x010,112x011,22302331x010,12213x07,x25,33311x010,3200231130x26,33111x012,10022233x111,3x013,122232x36,x16,x015,122232x35,x15,x017,1232x35,x15,x019,11x35,11113x022,3x16,3x0174,",
                        "VOLTORBBack": "p[1,2,3,4]x0299,3x15,3x023,312x36,13x020,12002x37,1x018,132002x38,1x016,132322x37,1331x015,1202x39,1211x014,3332x39,131233x013,1x312,103111x013,1x312,120211x013,11x310,1112001x013,121x38,x18,x013,102313331313x17,x013,30002311313x18,x014,1x05,23x19,3x014,3x09,2222313x016,1x07,2222333x018,10000x25,331x020,31322233313x023,3x15,3x0142,",
                        "KINGLERBack": "p[1,2,3,4]x044,3113x027,10000313x023,1x05,2221x021,102020x25,1x019,122020x27,1x017,1x27,3322221x017,1x26,33332221x016,1232322x36,221x013,11113232x37,23223x011,100212333111133332321x010,10000213x17,3333221x09,10002311100001111333321x09,10023121x06,1111333321x08,122331221x06,1111333321x07,102331221x07,111x36,1x06,122331331000010011133313331x06,12313331100101011013121331x06,311133110101210012131213331x05,122133112211121121112213331x05,100211001x35,1133332133331x06,12310001222320023323313331x05,103100012023132231x35,131x06,10100012022331111x37,111x06,111001222333311x38,101x05,10231132x317,11x06,12231x35,12333321x36,11x07,113133331123113211x35,11x0132,",
                        "KRABBYBack": "p[1,2,3,4]x0196,x15,x08,x15,x013,12023311000011320231x011,13223311x06,11323331x010,1333311x08,1133331x09,1x35,11x08,11x35,1x08,133331111x06,111133331x08,133331111x06,111133331x08,133331131x06,131133331x08,133331331x06,133133331x08,133313331x06,133313331x09,1331331x08,1331331x010,1331331x08,1331331x011,13131001001000013131x012,1133110100100110311x014,11113x17,3101121x014,1112x38,101201x013,111202x38,1011x014,11332x310,1121x012,11x314,1121x012,11311x36,113333121x012,13122133331221333121x012,11200213312002133311x0137,",
                        "HYPNOBack": "p[1,2,3,4]x0230,11x030,1031x029,10031x09,31113x07,11x05,10003x06,31220013x06,10110000102031311313322001x06,100011012102223122131222023x06,102021222110x26,10122321x07,102232022211x25,31122121x08,1022000x210,132111x010,122000x210,1111x013,3220x29,311001x013,1x211,3101001x013,1x212,313001x011,1133x210,3331001x09,1122033x26,32x35,1011x07,12220001332323233331311101x06,12200002133232x35,13331201x06,120001231x38,131121201x05,13111122202x17,0010222030000133311122x06,122010010001x05,13x16,2x05,122000100113x0134,",
                        "DROWZEEBack": "p[1,2,3,4]x0209,111x016,111x09,10001x014,12231103x15,00221x014,1233313x25,102221x015,1313000x28,31x016,1x06,x26,311x015,1x07,x26,133x015,3x06,x26,32221x013,1220000x211,31x012,3x218,1x011,3x220,1x010,1x220,1x010,3x217,32231x08,3x217,313331x08,1x217,313331x08,1x216,323131111x06,3x215,3233111222100003x215,32333312222100001222231132222311x36,1122310000112231111332331113333111233100001113x16,333x15,333111131x05,x111,33x112,31x0133,",
                        "ONIXBack": "p[1,2,3,4]x09,111x029,1201x029,1201x029,1201x029,1201x029,12011x026,11120011x023,10011113311x020,1001223213331x018,100122323313121x016,10010132333312223x014,31010201x35,12221x014,111020221333311223x014,1312022221331311201x013,13312x17,3310121x013,13331x26,1333011x014,33331x27,133101x015,1331x27,133331x016,131x27,1x35,1x014,3x15,222211131113x012,111x35,1211311122221x010,1001x36,133311112211x09,10001x37,13331111203x09,100001x35,13133311113x09,3000011333313313321x013,100112213313333111x014,101x25,11x35,1x016,31x26,1x36,1x0141,",
                        "GENGARBack": "p[1,2,3,4]x0139,33x030,313x029,3113x028,3311313x024,313x16,3x020,311113x17,3x017,3x15,3x18,3x015,3x16,33x18,x014,3x18,3x18,3x012,3x119,x011,3x117,311x011,x118,2003x09,3x119,213x09,x16,3x110,3311233x07,3x15,3x111,3031111x07,x16,3x111,3030323x07,x15,3x17,331113030323x06,3x15,3x17,3311112303233x05,x16,311131333x16,323233x05,x15,3111313133x17,x35,x05,x15,3113131333x110,33x05,x15,31313133x111,31330000x15,33131333x112,3330000x15,x37,x112,3133x0132,",
                        "HAUNTERBack": "p[1,2,3,4]0222x012,2x06,22x07,23332202x05,2x08,2332x06,231133220020x27,0223132x06,231111332222x37,2331132x07,23x15,3333x17,3111132x08,23x119,3222x07,23x15,3x113,33332x05,20231113x118,3x07,23112x118,32x05,223312x118,32x05,2331113x116,333320000231113x121,3x05,21113x120,32x05,23x122,32x07,23x120,32x07,2023x118,32x09,23x120,3202x05,23x122,32x05,2311113x118,32x05,2x35,x120,32x05,22223x121,3x07,23x119,3333x06,2x35,x115,32222x07,2222311113x15,3111132x010,200231133231113231132x013,2313322231132023132002x06,2020233220023132020233202x011,222x05,232x05,22x0137,",
                        "GASTLYBack": "p[1,2,3,4]x0269,2x024,20002x06,200002x017,2002002200002x017,2x010,20000202x011,20002020030200202x017,20020020002022002x010,200020220232023020203002x010,20232022223202320222x017,2330230222020200202x07,2022323302323332232223x09,2020220322332123332220222x07,203233232323233332302223x010,220232323133233332332202x05,20202331313231313213320202x09,33223233133131x35,2033020000202023133313111131313323022x07,323233131113131131123222x07,223231333x18,311313202x08,30222311131131311212322x07,2002323133x17,333232302x0133,",
                        "CLOYSTERBack": "p[1,2,3,4]x012,110001111x022,10010100221x020,1002210022221x018,11322100233221x014,1100112312231113221111x09,100110331231100011211001x08,10000231111x07,110021x09,1020331110002222010021x010,1002311100022221100231x010,10223110022221110223121x08,102231110220011212233121x08,102231100221100122331021x08,102231002220023123331321x07,1022311022232231232310131x05,111022310x25,33313232101310000100202231022223233223232013100001223023330x25,3232323232011x05,13111330x29,11x25,01x07,1023130x28,0001112201x07,100231x28,x06,31101x06,1000231x28,00002000011x06,1000231200x25,02020223311x06,10022312200x27,023311201x05,102223122002222323311222201000010222231222002223311x26,01000010222331222200200122212220010000102223312222x06,1220122001000010223331x25,000222122010001x0132,",
                        "SHELLDERBack": "p[1,2,3,4]x0391,11000111x018,1100010011120011000011x010,1010120021220022100101x010,1001200221200022111001x010,1201200221200221120021x011,12120022120022112011x012,12120021220021212101x011,1311200212002212310031x010,1201200212002122200231x010,120012021202212000231x012,1200102120212000231x014,122x110,33111x015,1130000233331111x017,112222333x15,x017,113x17,231111x015,13233x25,31223111x0139,",
                        "MUKBack": "p[1,2,3,4]x0103,11x029,1303x028,1321x027,13001x023,1113301301x021,1x35,0130101x020,1113300130121x020,3311300112201x018,1330213330021x018,13333031131131x019,111130332311x022,31133031x025,121331x026,132131x026,13021310003111x018,13002313112222113x014,12130112133330222213x012,1213132311333000222231x09,1320133332311333x05,231x08,1301211333021133311000231x07,1312222133002133111130001x06,113133221333022112221130031x05,113333002111x07,22113031x05,1211333002221x36,00002301x05,1301333300022x15,x35,0301x0132,",
                        "GRIMERBack": "p[1,2,3,4]x013,11x029,1001111x015,11x07,122221001x013,120100101132220122211x011,1222103121300231222121x09,103222112313303311332011x08,103311023312333322133001x08,1222102231222332221323321x07,1231222331x25,0221x25,1x08,1312223313x26,1222231x09,13122231233x25,1022311x010,1232231233022221223111x010,1232231213300203123111x010,13302132133000131210111x08,123330132213300121212111x08,12333313021x35,212220111x07,1233331302213313212322201x07,12313321322211322310022201x07,12123213x26,00313022201x07,1220231320020203213322221x07,10200221300322332133003221x06,10330021330x35,1233300221x06,103300213333133312x36,01x05,13103322313312331x36,1331x05,131303333133121123013012331x05,1331000333112222330130121310000122313300332200331022132221x05,122221303320033331022322221x0133,",
                        "DEWGONGBack": "p[1,2,3,4]x075,31310311132x021,10001x05,32x021,1003x05,213x020,313x07,103x018,3x011,11x018,1x013,31x015,3x015,1x015,1x014,21x015,1x011,30223x015,3x011,2331x015,1x07,200022101x014,12x07,232321013x013,12x09,2313003x013,12x011,231x016,3x013,21x015,1x014,21x014,3x016,3x013,1x017,23x012,3x018,1x011,1x014,3000021x010,3x014,1x05,3x09,1x014,23x05,21x08,3x014,3x07,21x06,3x015,1x07,221x05,1x014,21x07,223x05,1x011,22221x06,22221x0132,",
                        "SEELBack": "p[1,2,3,4]x0296,31x030,101x029,10031x027,100023113x023,11222100113x020,1031130010001x018,1x011,101x016,3x012,11113x014,1x013,13011x012,3x018,31x011,1x014,330221x010,3x014,30102211x09,1x014,300111331x08,1x015,31301131x08,1x019,101x09,3x019,3x010,32x018,223x09,122x016,2221x09,3222x013,x25,1x0135,",
                        "DODRIOBack": "p[1,2,3,4]0003x06,2x024,1000023x025,32002302x05,332x017,1223003000031x015,30003131001200213x015,1000031130130031x016,3320003110312011x017,3120003110311113x017,13100331303x16,3x014,3110122313231313231x014,3113022321322313031x014,3100022132202312231x012,312202231220002222331x010,3112222313222022223111x010,1313223313x29,11x010,31311333313x29,311x09,13x15,31133x27,3331x09,113x18,33x25,33331x09,x112,x39,113x08,311113x17,x37,1101x09,3112113x111,301003x09,101121111321132x05,101x09,1211113212121x08,123x08,12101011210121x07,321x08,121010110100121x07,1x08,1121110110100013x07,3x07,1331131011011x018,10x36,1330131x0145,",
                        "DODUOBack": "p[1,2,3,4]x0172,11x028,110011x025,12200221x023,1x27,31x021,1x27,3101x020,1x27,31111x019,1x27,1120011x017,1x26,122200221x016,1x26,1x27,31x016,122221x27,3101x016,12221x27,3111x015,x16,x28,331x015,111001x210,1x014,1110001x29,1x015,11100001x28,1x015,111x05,1122211101x011,1101110000x16,001201x09,122x15,001111x06,1201x07,120002222x15,x08,1201x05,1200x26,3111x010,101x05,1x28,33313x011,1100001x28,x36,1x016,1x26,x38,1x0144,",
                        "FARFETCHDBack": "p[1,2,3,4]x043,31011x027,10101011x024,121021101x022,1010311221x021,1121231231x021,10122223311x020,1000x25,3331x014,110030000x25,33331011x09,100101000x26,333311001x07,10220110x27,x35,10001x07,10330213x26,x37,101x09,100332132222x38,111x010,1333321x312,11x012,113331x312,1x014,113101311x37,1x015,131000122311331111x013,12100001222331122021x012,121002001233122110201x012,100202021331203010023x010,1002020231331203031221x010,10202023233331300321223x08,322322232323331003322221x08,1332323232333121x35,2223x07,13232323233331001x35,221x07,13323232x36,1001x35,21x07,x314,1x39,1x08,1x313,1x38,1x0133,",
                        "MAGNETONBack": "p[1,2,3,4]x0237,313x024,1001301031001x018,121001222100121x016,11001001110010011x014,1111031013101331111x012,1201113x17,3111021x011,11031331x25,1331331x013,113331200222113331x015,1111220022221111x017,11220x27,333x017,1x212,333x013,1001x212,3311x011,12101x211,333121x09,110311x211,3331011x07,11113313x29,333313111x05,1201113133x27,333313110210000113313331x311,1333131x06,113331221x38,21113331x07,3111132221x37,122111321x05,123113x25,3x15,3x29,100003200x28,310132200x26,3x0132,",
                        "MAGNEMITEBack": "p[1,2,3,4]x0300,13131x026,1201021x026,13231x028,111x029,131x028,12001x028,131x028,12001x028,131x026,111000111x022,12330003331x016,x15,2222333223x15,x011,12231200x27,1332221x010,12212200x26,13330001x011,11122220x25,1331111x014,1x210,13111x014,111x29,31331111x011,1221x28,3313330001x010,1221x27,33331330001x0135,",
                        "SLOWBROBack": "p[1,2,3,4]x0105,111x09,11x017,10021011110110011x015,102311000010002221x010,1111331320002200221121x09,1000011320000x25,1331x010,100002311000x27,11x012,100022331x28,1003x09,101302332331x27,1011x08,10102332222313x26,3001x08,1212000022223131122223111x08,1332020003331102122210221x07,1001x35,2210021222200021x07,101012222021221322220001x08,10123100002211313332221x010,30112x05,23333133311x010,10332000033322331112001x09,1000x35,222022331300221x07,10000x25,000102231102221x07,1022x08,10122313x25,1x06,10220002200102102131322221x07,1112022220123103233122221x06,100210222200113322331322231x05,10021x06,3333202233122231000010111x37,222202222312233100001x06,x26,000x25,3123331x0132,",
                        "SLOWPOKEBack": "p[1,2,3,4]x0208,11x029,1001x027,1001x026,110001x024,11x05,1000011x017,1x06,1000012011x014,1x05,2x16,200021x012,120002210000220021121x010,1x25,3102022220213321x010,1x25,1020x26,32131x010,1x25,310x27,32331x011,12222310x27,323331x011,132233x15,32x36,121x010,133331x06,3113331321x010,13333100002022213132001x09,133331020x27,3120001x09,13333120x28,331201x09,10133310x29,33311x010,1013311x210,3331x010,100131311x28,x35,1x09,100213111x27,x36,1x09,1020113111x25,x37,1x0134,",
                        "RAPIDASHBack": "p[1,2,3,4]x076,11113x05,3x013,13x05,1x05,130001x012,1x05,312x06,210303x010,13x07,3x07,23101x09,13003001000212020001232x09,1x05,10101020223200101x08,101000030010222211320101x08,102100100002223123130232x08,1002132000222321123121011x07,1x08,22232310132310133x06,1x07,x25,3333200033221x06,12x05,2322233331x05,1322x07,1200023132233331000011303x08,100031012233331x05,1122x09,13310012x36,1x05,1303x014,1x37,1x08,1x05,3213x06,123333232x07,3x06,321x06,123333123100002023x05,123130001033331221010000101x05,100023130233303221003100023x06,1000220233331222100002313x07,13000233332030021x014,100022333320100001x013,1202232322213x05,3x013,10223233113x07,2x013,102333312x010,3x0140,",
                        "PONYTABack": "p[1,2,3,4]x0115,11x018,22x06,3303021x016,32220003120313021x014,23x05,102222001001x013,2x05,30222323x25,1x015,1110x25,32323223x014,1000x27,3232321x013,1000x25,0022323231x012,3000202x06,2222131x012,10000200330022221313x012,1x06,12102222123131x011,3x05,100302222123131x010,3331111003002201002331x010,3x08,300021000023x010,3x08,1000210000301x018,120003x05,131x018,302021x05,103x017,1220203x05,311x016,3220202x08,1x016,1222023x08,3x016,322313x010,3x014,32232000022x05,21x014,131x06,233130223x013,1303x05,221000313x014,301x06,221x019,1032000022221x0109,",
                        "GOLEMBack": "p[1,2,3,4]x0355,111x028,10001x026,1201101x014,111x08,1200001x013,10001x07,12210103x17,30001110001x06,13221110002331201001x05,1x07,1321023111132002100110021x07,131021x26,1022210010021x08,13212000222212223111021x08,11012x05,22231233312231x07,1311220000222231111313331x07,123122200222233112223111x07,120213x27,3311202221x09,100211x38,1120022233x08,10223x110,200222231x08,10231200x25,31x26,331x08,1231200x25,333122223331x0136,",
                        "GRAVELERBack": "p[1,2,3,4]x0100,31x016,1x012,3321x014,121x011,121x015,132101x06,10131x016,331131000013132313x014,1211310000133022301x010,110133131x05,1322313x010,1221232321x05,12311x012,123332021x06,13210000313003100011323221x06,1313103100313001300013231x07,3131112031000130230001331x08,311320202020022010001331x08,1121323202022021210013323x07,1313212310221232131133021x06,33133331211312311313133303x05,21132113312012310213321301x06,3111320133201332001331131x07,1313102123323322223320323x07,133133222313323233113211x08,11133130323133202131311x09,13311313132132323323311x010,11x35,2x36,23233111x010,1332313222113223331113x011,13313133131232331113x013,1x35,22x35,11113x0139,",
                        "GEODUDEBack": "p[1,2,3,4]x0395,310113x024,1100100213x021,100110223311x019,1000212233102x15,x013,11002311331002211201x011,111223100131202211221x010,1313131002212222311323x010,131133100223x25,3121x012,1312212223x25,33131x013,11x29,32323131x014,13x27,32323111x016,132223232323313x018,132323232331x021,1x37,13x023,3x16,x0174,",
                        "TENTACRUELBack": "p[1,2,3,4]x042,311113x024,3110001113x021,3101002130013x018,300032223130001x017,1031x25,1130001x015,30311x25,11130003x014,111121222121113031x013,11112332023221111013x012,11122321312322111321x011,1112232221222332111333x09,132233x210,3221111x08,13033222x06,22223322221x06,13000222x09,2222x35,1x05,1330202000202020002202002331x05,13301132202020202231113331x08,311113x28,x18,3x012,1113x16,31111x016,x117,00001x09,113x110,31113100101x07,1331113x18,3113210101x06,100x15,311311011311210101x05,100101133101131013311121221x05,10101313310131101331312221x05,102101313310133101331311221x05,10211312310012310123110311x06,1221131021010021012211021x08,110131021010010010211021x0135,",
                        "TENTACOOLBack": "p[1,2,3,4]x0425,3x16,x024,1x06,311x021,100220031111x019,10102202110111x017,111102203x16,x017,311102203113331101x013,13331022231x35,1101x012,13310222301x35,10303x011,113123223211333110101x011,11103122130x16,0121x010,1002313233132011210121x011,131132323313200010323x011,12222323333113320121x012,13223232x38,1233x013,132232x38,1331x0137,",
                        "VICTREEBELBack": "p[1,2,3,4]x07,23111132x023,231333311132x019,23x06,3333132x016,23133322200003313x015,311333x27,00031x014,1111333x29,002x012,213011133x25,311113x012,31213331133223x05,23x011,1101x35,11321x06,2x011,110311133331111x05,2x011,1102x15,3333111x016,11021131313333111x015,110313131313333111x014,1101333323313333113x012,213013232323313333113x011,312332323232231332311x011,110123x28,31322013x010,11013x29,32132201x010,1101x29,030213221x010,1101x28,0020121321x010,1101x26,30020323111x011,1101x27,020031x015,x17,323203021x016,110002223120203x016,2112220002311003x016,311x26,0002311x016,113x28,000231x015,1133x29,000231x0140,",
                        "WEEPINBELLBack": "p[1,2,3,4]x0168,313x028,12221x026,3200221x025,10023121x024,10010031x024,320300001x024,122132001x024,131111x025,3x17,x06,x16,x012,1113131110001132031x012,3133331311311320031x013,122223333113220231x014,120222323312202331x014,10002223213202331x015,12020232312023331x011,111012202223320233331x010,133311x27,120233331x09,1203331x27,102x35,1x09,1220031x27,10x35,1x010,1222201x27,1x35,11x010,1212221x26,31333113113x08,11011331x26,31113331003x07,1000011312222323232313201x0135,",
                        "BELLSPROUTBack": "p[1,2,3,4]x0109,311113x025,10000221x023,1x06,221x021,3x08,221x019,313x07,223x018,10023x07,223x017,31321x08,21x017,12223x08,21x018,313x07,2311x017,332x08,3131x017,103x08,2303x017,1012x09,3x018,30032x07,21x019,1013x07,21x020,101x06,221x012,31113000010200002231x011,1302021000031x25,313x010,13300222100010122233201x09,111322311300210123122221x012,13200010030013121111x011,13202000102300113221x011,13222000201010000313x011,13232020002311x017,133322200020231x017,1333311130022331x0144,",
                        "MACHAMPBack": "p[1,2,3,4]x0139,1111x020,111000010021011x017,1001101002211001x017,100010011110001x017,10010013310001x019,1210133100221x018,1210123100221x018,122132220022101x017,1203222022221001x015,1200x210,101x015,120x212,11x015,1x214,331x014,1x210,11333311x013,1x210,11113x18,x09,1x210,x18,00221x09,1x28,331130121132221x06,113x26,113x15,210002221x05,10033222333310002211002222100001002232222333000222211322221000010x29,300x27,122223100001x211,0x28,122233100001x210,0x29,313331x05,1x219,3331331x06,1x217,3333131x0134,",
                        "MACHOKEBack": "p[1,2,3,4]x0114,31113x026,3002231x025,10222331x017,1010100122000231x015,101010103223330331x013,1101010110311030301x012,12121212131001030303x011,1210101012231010303031x010,1212121212331001303031x08,111301010113311110323031x07,1211101010111311002303231x06,12100121212123110003030331x05,121001010101222310230303333x05,12100101010122231330302331x05,10100210101012223100302331x06,1010221212121222311332331x07,101222212121222233113311x08,101x213,333111x010,131x212,x36,x012,131x210,x36,x013,1313x27,x37,1x014,131x311,111x015,133x114,x016,13x114,3x015,13x115,x0140,",
                        "MACHOPBack": "p[1,2,3,4]x0175,111x027,110111x025,11010021x023,1101000111x022,11310013331x020,1321031x35,1x018,1320131x36,1x018,1200012x35,121x016,13220222x35,111x014,1113x25,x37,11x013,102133222x310,1x011,132311x39,113331x010,1331331x310,1111x011,13331111x310,11x011,1333002111x38,11x012,133332321111331111311x011,133323233122x36,1221x011,1x37,0022x35,20231x011,1x35,20022x36,2331x012,11333322x312,1x013,111x310,133331x015,1x310,1x35,1x014,1x311,133331x0133,",
                        "ALAKAZAMBack": "p[1,2,3,4]x064,113x020,31x07,1001x018,101x08,10013x015,1031x09,10021x013,1031x011,10023x011,10231x012,10021x09,10031x014,100311x05,3100231x015,1003311113000231x016,3030000x25,0331x017,1000x28,11x017,300020x26,331x017,10020x26,3131x016,3111x26,x17,3x011,1132000x16,3x27,31x08,12200002311113x29,31x06,12200202023333x211,31x05,1200202022233x211,331x05,1202020x216,3231x06,10020x214,323231x08,1202222x37,232323331x09,1x25,3x16,332323331x011,12223x18,x36,11x011,1223x110,x35,131x010,113111333x16,33311231x08,121111323333x15,31110231x06,1022312222x35,111100010231x0132,",
                        "KADABRABack": "p[1,2,3,4]x0257,13x016,130001x08,131x014,10100101x07,3033x012,1023032003x07,1031x010,10031012001x08,1031x08,300310012001x09,10231000031023100032003x010,1223333132231x05,121x011,123002231331100001121x010,1330022231111000013311x010,1210222312331000010311x010,32122233122331000011001x08,1203323312222310000120033x06,120021331x25,331000122231x05,1322021331x25,33100012211x07,13222331x26,33310013211x08,1322213x25,33x15,012003x08,13x28,31132233112231x06,31113x26,313022323313331x05,10223313223113022323333131x05,3022323331113302222x35,11x0134,",
                        "ABRABack": "p[1,2,3,4]x0164,113x012,11x015,10011x08,1121x015,12233x17,30203x016,1300x28,003x017,10000x29,1x016,13200x210,11x015,11x212,1121x014,111x25,1112211321x014,12x17,331111231x013,111x27,102122111x011,11220000x25,1012333311x08,13220000x26,1321x36,1x07,13x212,1031x36,1x08,13x211,1021x35,1x010,13x29,13221333313x010,1133x25,3310331333121x010,121x37,102213331201101x08,101x35,13022133120210101x07,1201333100323111202210121x08,122111002231231222101221x09,11231022331133121022231x09,1231033221x35,1332231x010,111022331x37,132331x0133,",
                        "POLIWRATHBack": "p[1,2,3,4]x0229,313x05,311x020,3113300031111x019,11133003112111x018,11113113110101x018,3x19,3011x019,x114,x017,3x113,313x014,3x117,3x012,2x116,3203x011,3x115,32001x010,2x110,3x15,30001x010,3x19,3x17,0001x010,x110,3x17,3001x010,x110,3x18,323x010,x111,3x18,32x010,x121,2x010,x122,3x09,x123,3x08,3x123,3x07,2x115,3x18,3x07,3x115,3x18,2x0132,",
                        "POLIWHIRLBack": "p[1,2,3,4]x0198,2332x06,23132x016,231132x05,313032x015,31133x15,3111103x014,211313x15,3101113x014,2131323x15,310132x014,23132023x19,x014,23111323x19,33x013,3x15,3x19,3203x011,2x115,32001x011,3x115,200103x09,2x115,320010111x07,3x116,310110001x06,x118,011000021x05,x118,001000221x05,x118,x06,221x05,x118,000022221x05,x114,311110022221x06,3x114,333x17,x07,2x117,320101x09,3x117,3211x010,23x118,3x012,233x115,3x0138,",
                        "POLIWAGBack": "p[1,2,3,4]x0330,2x36,2x022,23x18,3x020,2x111,3x018,2x112,201x015,23x113,202x014,3x116,3x013,2x118,x013,3x118,3x012,x120,x011,2x118,303x010,3x118,201x010,x118,3011x09,2x118,20303x08,3x117,301001x08,3x117,203031x08,3x116,3030301x08,3x116,2010101x08,3x116,2010101x0134,",
                        "ARCANINEBack": "p[1,2,3,4]x0104,10011011x05,1x017,1011312001100101x015,3200113112021100x15,x011,1200001111002211x35,1x011,12x09,2123331111x011,122x09,13111331x011,10122x08,2111311x011,10101x09,213111x012,1x013,213321x013,12x011,22132211x08,1000122x08,2231113321x06,30101011x07,22311001131x06,10010112x06,223111202223x07,1x05,132000222233132211x07,1x08,1x27,3311221x07,3x09,21x25,3311121x08,1x09,21222133111121x07,3x09,22211323311133x08,1x08,232213233111121x08,1x07,2212212323112121x08,1x06,202123133131121121x07,1x05,22212331311312001223x06,3000020221333x16,2001321x07,10000221333313x15,2001323x06,10002021333111333112201121x0133,",
                        "GROWLITHEBack": "p[1,2,3,4]x0268,x15,x024,111x25,1x022,1x28,31x019,110x27,331x018,10002223x16,x017,1000222310233311x017,112222102233331x019,x15,33331310111x019,131111331322211x016,1x38,2000211x016,1333022320002221x016,133022332001111x017,13322333321021x018,1333233310021x016,11011x35,10001x016,10011113331x05,1x014,100021111331x06,1x012,1000022131111x06,21x011,1000222213331x05,2221x010,100x25,11331200022221x010,1x27,x16,x27,1x0103,",
                        "PRIMEAPEBack": "p[1,2,3,4]x0104,11x029,1021x027,102231002x022,1x35,1x011,2x013,111311002x019,20001111000020001x018,331101002020101002x013,10020121200210001x015,30221022311230003x014,3002102222001000021x013,1022322x05,3x05,310011x08,10002x013,2211001x06,21x018,2210021x06,102x015,2023122100002013x017,2221231x06,32x016,20221111x06,3x018,223111x06,12x017,222311x06,3x018,20222231x06,22x017,2232221x07,1x016,22213221x06,3x018,2221221x05,3023x015,2322211x07,3021x011,20222321x010,2320000202020x25,321002x0134,",
                        "MANKEYBack": "p[1,2,3,4]x0236,11x029,1001000011x021,100001001321x020,1223010130031x016,11001210101011031x014,1001012101131001221x012,10302101101101001221x012,10102100101101001221x012,1313310101001200011x014,11310010100121x019,131001010001211x017,1310101x05,1231x015,13100101x06,1231x014,310101210010001221x013,1101312100131001221x012,13101212111301013221x012,13310012122213132231x012,13200121x210,1x014,1220121x29,3x015,1222121x28,31x014,13222121x27,331x0138,",
                        "GOLDUCKBack": "p[1,2,3,4]x098,1x05,1100001x018,101000010100011x017,10100001021001010001x012,101000012031013310011x011,101000012203113231011x011,1001000012223112331131x010,1001000012222312233131x010,1011100013x28,3311x010,1010011013x28,3331x09,100010001133x28,311x09,100013022213x25,311311x09,1002113x210,1101311x08,10021013x29,3130131x08,102210013x29,311131x08,12222100113x28,333101x07,12222101333x27,33310001x06,1x25,123331222x35,1010021x05,1x25,122333x15,331x06,1x05,12222122223311123111x06,21x05,12221222231x25,311x06,21x05,12221222211x26,3111000221x05,12223122231x25,33310132231x05,12222122233122x35,10013331x05,1322331233331x35,11000111x07,133331x36,133331x0140,",
                        "PSYDUCKBack": "p[1,2,3,4]x0235,311113x022,101100022211x021,10001x26,1x019,131001x26,31x017,1003101x27,1x017,10003x29,33x015,301113x210,1x015,100x213,10011x010,110x214,313001x09,110x214,331001x09,11x211,111333111x09,103x210,1002113131x09,1001x29,100222111x010,1001x29,31002221x011,102213x25,33331002221x011,122211x39,112231x012,11102111x35,1222231x013,10002x35,x26,331x012,30000x211,331x013,1000x210,3331x014,10x210,x36,1x0136,",
                        "PERSIANBack": "p[1,2,3,4]x035,1113x027,122221x025,1x26,3x011,313x09,3x28,3x08,311113x08,1x28,x16,33x17,x08,1222211221x06,3x17,x08,3222233121x07,x17,x09,122333123x08,x15,3x010,1333123x010,1113x012,113221x010,2233x012,322221x011,22100013x07,322221x012,21031223x05,3x25,3x012,2112231x06,122223x013,11213x07,3122221x012,1001x010,120221x011,100x15,3x06,102021x013,1000022300003120201x012,20231113000030100001x011,202213x08,31000011x09,222130013x07,10000111x06,222130031221x06,100001x08,331x06,31x07,100001x011,1x014,300003x012,1x014,300001x010,231x013,100003x09,2021x014,100001x05,20202221x0137,",
                        "MEOWTHBack": "p[1,2,3,4]x0298,1x05,1x025,1001001x022,3130110110313x018,3x113,3x017,111300x25,3111x017,313x05,2222313x018,1x08,2221x018,3x010,2223x016,11x010,222111x013,101x010,2221221x012,101x010,2223221x012,12111x07,22232221x013,13231x05,22112221x014,10233100x28,1x015,133131000x26,1x017,11333100022111x020,13310002231x021,13210022331x022,122123331x0142,",
                        "DUGTRIOBack": "p[1,2,3,4]x0174,3x17,3x022,12200x25,3x020,1220000x25,1x018,3222000x27,3x013,311132220020x25,31x011,13x25,313220x26,103x09,1x210,1x27,3111x08,1x212,1x25,33311x07,1220000x26,3x17,3333x06,322x06,22223x29,131x06,122x05,22223x211,11x06,322020x25,12220000x25,31x05,322220x25,32220000x27,33000012220x26,1220000x26,313100001x210,3220000x26,103100001x29,3222020x27,112300001x29,122220x28,312100001x29,1x214,11100001x28,31x213,300200001x25,32321x212,33113000012222323331x27,3232x35,10000123232333313232323232x36,1000013232x35,12323232x39,100001x39,1x316,1x0100,",
                        "DIGLETTBack": "p[1,2,3,4]x0204,3113x026,13002231x023,1200002221x021,122000022221x020,322200x25,33x018,3x211,01x018,1x211,11x018,1x211,313x017,1x212,31x017,1x212,11x017,1x211,101x017,1x211,311x012,1031213x29,333111301x07,21121111x26,333x17,x07,11110122x15,3x15,221131x09,113213311211121130111101x06,1001111012102333121311x010,210010x111,0110101x010,100001001120210001x018,1001x05,100001x022,1x05,1x0173,",
                        "VENOMOTHBack": "p[1,2,3,4]x0323,x17,x024,100222231x06,1x015,10x27,31x05,11x014,102000022231000011x013,102x06,22231000101x012,102x07,2231000121x012,10x211,3100121x012,102x08,2231000121x011,102x09,223100121x011,10x213,311131x011,1022x08,2223121331x010,1022x08,2222312131x010,1022x09,22221131111x08,10x215,31102311x07,10222x09,222211233121x06,10222x09,2222313312021x06,1022x010,222311312131x06,10x214,3331331321x0133,",
                        "VENONATBack": "p[1,2,3,4]x0298,1x09,13x012,211131003100013031001x011,100023130310130310113x011,2x114,31132x016,3x112,32x015,3111133x110,32x012,3111133x112,3x011,3111133x112,323x09,1231113x114,22x09,32x119,32x010,3x120,3x09,2x122,2x08,3x122,3x08,x124,x08,x122,31x08,13x120,23x08,12x120,02x08,30x119,3x012,3x119,3x0136,",
                        "PARASECTBack": "p[1,2,3,4]x0296,3x16,x023,3120002221x021,1220x27,1x019,32002222333321x018,10022233331111003111x011,32002233331000101200213x09,120223311110000322220021x08,120221200231000132222001x08,12221x05,231111333222023x08,1113x05,203120133322021x08,12103000x25,12011332021x07,1001332223332223300132221x06,100123222x35,222233013221x06,130002222x35,x25,332131x06,13000x25,x35,x29,1x07,10033x26,333x27,3321x06,1003333x214,x35,1x05,1023333x210,3332233231x05,1332332223332222x35,222331x0133,",
                        "PARASBack": "p[1,2,3,4]x0364,111x028,1222100111x021,123x15,2221x020,1100022311021x018,13002223331121x013,11101322223x17,x013,123311x35,12222311x012,10033213333100233231x012,1002223111120023322311x010,13222310231x28,3101x09,12223102331223322333101x010,1333x16,2233223331221x010,1113022313x26,311221x010,1312111331x36,1111231x08,12311022133x110,331x08,1211202221310133x16,31x09,12012023310123101001131x0133,",
                        "VILEPLUMEBack": "p[1,2,3,4]x0203,23x15,3x016,3x15,321x37,1x014,1x35,2313232323331x012,1x35,232213232323331x010,1x35,232221x25,3233113x08,x37,222x17,22313331x07,2x19,2x15,3111323331x07,2113322121x35,10122x36,x07,133332132x15,03123233331x06,x35,232112000231222x35,1x06,1x35,222x17,2223233331x05,31x37,1x26,11232x35,1x05,1x37,133x25,3112x35,13x05,1x36,13323232333313331112x05,3133331x312,1131113x06,2311131x313,111132x07,231111x314,1132x010,3111133x18,333132x012,23x116,2x016,x113,32x017,x111,3x020,3x110,3x0141,",
                        "GLOOMBack": "p[1,2,3,4]x068,2x05,2002x010,2x026,2x014,2x034,200231113202x018,200031x35,13000202x015,31x39,13x015,20111x36,233331110202x08,2013311333303233113310202x08,13323x111,033312x09,1332330x15,33310323331x09,1333323x18,31x35,10000200001x35,1333033303313333102x07,133331333233233233133310002x05,311331x35,0x36,13311003x06,231113333233323323311110323x06,2311332x311,11120121x07,231x36,232x35,11300301x05,200231x312,113311001x010,11x310,1131320003x06,200x114,33213221x09,133x15,3x15,3323211300200002013333111333x15,332012x010,302311113223x15,200010202x05,3020x15,322031111320001x08,1202x15,320203111132023x08,100x17,32022311113222302x0132,",
                        "ODDISHBack": "p[1,2,3,4]x043,313x028,22331x026,2002331x029,123x07,313x010,3113x06,321x05,13301x08,200131300001230000133002x08,300013330001223003223x011,20000121000122103223x017,322300122101221x018,32100122313221x011,31x05,12330122232223x010,2131300010210122322230031x07,30132100120303201202101221x06,203122101020320210201322221x05,200320211000100010021102221x09,12003000120210001302133x010,100230212221202302101x011,122212313233231231003x012,13213212312331313002x012,1231131331331111002x014,11313113x16,x018,3111313113113x020,3x19,32x020,x110,3x020,3x19,013x018,3x113,3x017,x115,x0138,",
                        "GOLBATBack": "p[1,2,3,4]x0327,113x011,11x015,1021x010,1023x013,10001x010,1001x013,1003x012,1001x011,101010010000100001001x011,101010101001010012131x010,10312103221120100121301x09,10312310022232101212301x08,103221230022223332132301x08,1032011000x25,311322301x07,1032001100x26,312302301x07,10320113x28,312302301x07,1032011x29,3123002301x05,10320011x28,33102302301x05,10320131x28,33102302301x05,10320131x27,333102302301x05,113201313x25,x35,02302301x05,101201031322233331002302301x0133,",
                        "ZUBATBack": "p[1,2,3,4]x0362,1x08,1x021,321x06,133x020,123100001321x020,102100001221x019,3102310013231003x015,101022101322130103x014,303022313223101001x013,1000122002221301001x013,30003x06,21012001x012,10003x07,21120001x012,30001x07,21220001x011,320003x07,21200001x011,12003x08,23200001x011,12001x07,223x05,1x011,12001x07,232x05,1x011,12003x06,2222x05,1x011,32000300002222x06,3x0135,",
                        "WIGGLYTUFFBack": "p[1,2,3,4]x0251,100001x012,1111x09,110000111x08,11000211x06,13100001211x09,1000221000013310000122211x08,10002210013331x05,1223111000011x05,210133331x06,1223311101x06,2221333311x06,112x35,11x05,2211333311x08,12233332210002111x35,1x09,11233x25,1111222333311x010,1322000x29,333110110000x16,2x05,x29,3310131000012231220000x210,3331231x05,121222200x212,331231x05,111x218,33131x07,1x219,33131x07,1x219,3331x07,1x220,3331x07,1x219,33331x07,1x218,x35,1x06,13x217,x36,1x06,13x215,x38,1x0102,",
                        "JIGGLYPUFFBack": "p[1,2,3,4]x0393,1x08,1x021,11x07,101x019,1221x05,10011x018,122x15,300011x017,1213x09,311x016,11x012,101x015,1x014,101x013,1x015,131x013,1x015,211x013,1x015,211x012,1x016,231x012,1x015,2231x012,1x015,2231x012,12x013,22231x012,122x011,222331x013,122x08,2222331x0137,",
                        "NINETALESBack": "p[1,2,3,4]031x029,3001x06,3111130311x012,1x08,333222313231x011,1x05,31333x25,313023x010,1100313323222020231201x010,1311333232220202023121x010,1333133322202000222133x010,133331133202x05,22213x010,21x35,1111322000022112x09,221333232200002x05,303x010,2213332202x08,1001x012,2132322x08,10001x013,2113322x06,100021x016,2311300200300021x019,11133020000231x019,13322x06,11x019,1322x07,113x018,32x09,101x017,3x014,1x016,1x014,11x014,32x09,2200011x014,1x08,x25,13x016,3x06,2223113x017,12x07,221x020,3x09,223x018,32x09,221x018,3x011,21x017,13x011,21x0139,",
                        "VULPIXBack": "p[1,2,3,4]x0142,111x024,x15,3331x021,11x25,13331x019,13322000221331x018,13333200021231x017,10x15,300010231x018,13333120010231x017,133222232000231x017,133320023202331x017,11133100202231x018,100122200223301x020,123322233121x020,133122221021x020,33120x26,1x021,120002222021x019,32220x25,121x019,1x212,1x018,1x212,11x017,3x213,1x018,3x28,0001x018,3x28,0311x018,1x28,03x020,1x28,001x019,1x28,0001x0141,",
                        "CLEFABLEBack": "p[1,2,3,4]x024,311x027,3x15,x024,3x17,x022,310x16,3x020,31000111311x020,100001113313x019,1x05,111331x017,311x05,1113333x015,31x07,1113331x08,3x15,01x08,111x35,x07,31110001x08,11133331x08,3110001x08,111333313x09,110001x010,1333111x09,31x016,110003x09,1220022x09,100001x011,1212222x06,31000011x011,121x25,00001x05,101x012,1x26,0031x05,10003x011,1x26,01x06,100001x08,3111x26,3x06,1x06,3x06,3001x26,3x08,x17,x06,102231112230222x011,3x06,121100013x27,x08,11x07,1x07,1x27,000011101x06,3x09,3x27,01100001x06,12200001001x27,01x06,300003222200001003x25,0001x05,100001222200001001x29,100001x0132,",
                        "CLEFAIRYBack": "p[1,2,3,4]x0392,11100031130031113x014,111331300223100311x014,112312100231200011x014,102122011322200211x014,101200110022001331x015,1000010102000021x016,10001102x06,12x015,100001012x07,3x015,10000102x08,1x015,111130122x07,3x015,102221012x07,21x013,1003132101x07,201x011,3001000323x08,323x011,1010010121x07,211x012,1010012131x05,2221x013,300112313100022223x0137,",
                        "NIDOKINGBack": "p[1,2,3,4]x018,1x015,1111x011,101000111x07,1000011x08,10211110021x07,1002331x06,1023100022231x05,100223310011110231000222231000012222333311x05,11000x25,1x05,122x36,1x06,210x26,31x06,13311133300002223x26,3331x05,13100011100x210,33331x07,110002233x28,x36,1x09,12222333x29,33311x011,122333x29,3111321x09,11x35,2211x25,x36,21x08,121333221021x25,x36,21x07,121332210231x25,33133321x05,1123332210231x27,101321x05,10011x27,31x26,102111x06,1000222322231x27,111321x06,1002223332231x26,3333221x07,1222x36,12222311133311x08,11x35,133122211002111x010,1213331013332100002221x010,13133310133331000222231x08,1x35,102133331x26,331x08,1x35,1021x35,x15,33331x07,1333311223133311122311331x07,1311112233x16,0233331131x06,x16,2333x16,2x38,1x0134,",
                        "NIDORINOBack": "p[1,2,3,4]000313x05,11010131x016,10030010001x05,1x015,100010011x08,1x014,3000010001x08,1x011,31x06,1001x08,11x09,1x09,1001x06,331x010,1x08,101x07,1311x019,11x07,1311x08,13x08,2221x06,11131x08,1x08,221x07,13311x08,1x07,2221x06,231311x08,1200002222103200022213x15,x05,1220222233001x27,131001x06,3x26,330001x27,33101x08,122223300003x28,121x09,3223333x05,1x27,3213x09,x35,000122012222x06,1x09,11310012200011x08,23x010,1123022x012,121x011,101203x011,1221x011,11302x012,221x08,100300202x011,211x08,1210102023x010,1131x07,30231100223x09,3101x08,1002332223x07,202231x09,300220233x010,221x09,300202312x012,23x09,10202223x013,3x0138,",
                        "NIDORANFemaleSymbolBack": "p[1,2,3,4]x0293,101x010,111x015,10101x08,10001x014,100001x06,1000211x012,10002201000010002211x012,10002220100100002211x013,1022220100010022211x012,100x25,01010x25,11x013,10x26,1010x25,11x014,1x25,3101x25,311x014,3x25,33112223331x016,1222333112233311x017,313333113333111x019,133313333111x021,1122223311x022,100x25,31x019,10100022212231x017,1211002221012331x016,1021022210213331x016,1002122100213331x0138,",
                        "NIDOQUEENBack": "p[1,2,3,4]x014,x18,x014,11x07,1212000221x011,11221000x15,2x05,1x011,10022211123333000022211x09,1000221001131200x25,301x07,1000021102333120x26,331x07,100021221333213x25,3331x08,1202122223123312x36,101x07,1223122221013222x35,1331x08,12312222123222133331001x010,11x26,332210133223001x09,31x26,323100132222311x09,101122233310001220022221x07,1000011333310021200x26,1x06,10000221331022312002232221x05,121002222331023312202211301x05,1213x25,31x35,12222321131x05,12212222x38,1322333311x07,111x311,1x36,1121x07,1211x37,11x36,10021x08,1100133331100133331x05,1x07,100013331310021311x05,221x05,100023131310002113100022221x05,1022233111100221311002222331x05,122333311x25,3131122223331x05,133313111222233x16,33331x05,1213131111223333x15,31111310000123x16,2x36,111133322221x0132,",
                        "NIDORINABack": "p[1,2,3,4]x0165,3113x08,31013x014,1000011000010103023x013,3x06,100301000011x011,31x08,331x05,13331x08,1x010,11x05,131131x08,3x09,213x05,113313x08,1x06,222101x05,11333x09,1000022223001x05,13331x09,30000222300012000231331x010,100222300003x26,1312x010,3002223x05,1x25,313213x09,30223x07,12222x06,1x09,1121x08,11x08,23x010,11x017,121x011,1x016,1221x011,12x06,2x08,221x08,100031200002x08,211x08,12101x27,x08,1131x07,30231x27,x08,3101x08,1002120202x07,202231x09,300221202x010,221x09,300202312x012,23x09,102022231x012,3x0138,",
                        "NIDORANMaleSymbolBack": "p[1,2,3,4]x0498,1111x018,111x05,1100021x016,10001000100002221x014,1020201000100022231x013,10x25,101000222231x014,1x25,310000222311x013,10x25,310002223111x014,10222331022233111x016,112331000233311x019,11002223311x018,11010000112221x018,101020221012231x017,1221022102122331x0137,",
                        "SANDSLASHBack": "p[1,2,3,4]x0175,11100011x024,102100101x021,111102101201x016,1111220312333301x016,10001120312111301x015,10310012232103101x015,11231121202120301x015,11023130000212021x013,11231022100002122221x011,1203311x08,111221x010,1202331112x06,110121x09,120233111132x06,11121x08,1202231331112x07,1121x07,1202211223311320001100021x06,122211122033311321100110021x05,111133122023313110002331001x06,12233120223123100023112221x06,1202122023122100231100111x06,1220212022112112231000021x07,12022120212121333130022331x06,1202112212012x17,3x15,x06,12212121202111222233122201x06,1112211202211x26,3312001x0133,",
                        "SANDSHREWBack": "p[1,2,3,4]x0330,11x011,11x016,1001x09,1001x015,102x19,010021x011,100121130300233110221x010,131001300033332033321x011,12100100030003022203x011,133101002230023022003x011,1031130223322333300313x09,13031103230033003200101x09,10231002300030020300213x09,13331023330230222300021x08,130031233003333223200021x08,102233120022300332200001x08,102333120223322010220031x08,133003132230322221122311x08,100223313300032233011113x08,102233331102223300023x012,103000233122332002231x0136,",
                        "RAICHUBack": "p[1,2,3,4]x05,31113x030,31113x023,3x15,32031x020,3x18,32031x017,100033x16,3203x016,3000023x16,3203x015,3x06,23x16,323x015,31300002x19,x014,23x15,320x18,3x012,3x19,33x18,x011,21323x116,x011,3320023x15,33x17,32x09,1200002311x35,x15,3331x08,300100021x37,11x35,23x08,310000x315,211x013,21x314,1011x012,x317,1133x010,21x312,22233331x010,x313,20222x35,x08,21x312,x25,31331x08,x314,x25,31331x07,21x314,22233311x08,31x321,x08,211x319,203x07,3111x317,2001x06,2x15,x317,201x06,3x17,x314,1221x05,2x110,x313,113x05,3133x110,x35,1x35,113x0100,",
                        "PIKACHUBack": "p[1,2,3,4]x0236,22x020,11x08,222x05,2x013,10100001000220000200003x09,10010001100022000200011x09,10001003310002002000131x010,1000100131x08,1333x08,2001000103221x06,1221x09,220010021031311113100100002x07,2100221013200001000300022x07,1222231032x05,300021002x07,1222310012x010,1002x08,122210003x011,31x011,12210012x011,231x011,121003x09,2200003x09,133303x09,20320001x08,13310012x08,23320303x08,1310031332x07,220001x010,13101x35,2x09,3x012,110100233332x08,113x09,1132x016,231x09,1112x017,1x0134,",
                        "ARBOKBack": "p[1,2,3,4]x073,3x19,3x018,311x08,220113x013,31x011,2220131x011,1x012,222210103x09,1x011,x27,1021x08,322x09,x29,121x08,12211000110x26,112231x08,322221121111x25,1122221x08,1x25,111221122211x25,31x07,132122212222x15,22212331x07,1322122221122111222112331x07,132211221111x26,1122331x08,1322x18,222211123331x08,13222x18,2211123331x010,132111122x17,x35,1x011,11001x25,1111x35,1x012,1201x27,11x35,1x013,132132222x38,1x013,13321113131313333101x012,1332100111313x15,201x011,133210000x18,3221x011,111121x05,x15,33321x012,13321x06,1x36,121x011,133221x05,x17,321x011,133322100001x36,221x012,1111221001x36,2221x0136,",
                        "EKANSBack": "p[1,2,3,4]x0331,x15,x026,1000021x024,1x06,21x022,1x07,221x021,1x07,221x021,1x07,2231x020,1x06,22231x021,12002222331x020,10122232331x021,1211222111x023,1001021x024,12110000111x021,101311133021x019,20110002223021x018,10210000223021x018,122100022230121x016,10113x18,3221x015,12331000022230021x0137,",
                        "FEAROWBack": "p[1,2,3,4]x06,100001x025,13100131x024,1331013101001x019,13310133130131x019,1331133131131x020,133131331331x021,13313313331x022,x15,333131x019,1120023111331x018,1222002221333101x015,1x29,31313131x013,1x29,331331331x012,1222312222333213331x013,1223101x35,102311x013,12231001x35,1011x015,122310001x35,1112x013,13231x05,133331001x013,12231x06,111120013x012,12213x010,12001x012,12213x011,12013x010,132231x012,1201x010,122231x013,1201x09,122331x013,12231x08,123331x014,1231x08,133331x015,1331x07,133331x016,131x07,1x35,1x016,131x06,1x35,1x017,11x0134,",
                        "SPEAROWBack": "p[1,2,3,4]x0365,1100001x024,100110103x019,1100010001001x018,100111x05,201x018,122001000222331x018,132000022233101x018,13x26,333101x019,133222x37,1x018,11x37,133101x016,x15,33111333111x016,x19,33311x017,1000311113113101x015,10000223x18,x015,1002022x19,x015,1102022102231111x015,11000221002223111x015,11002210202223311x0139,",
                        "RATICATEBack": "p[1,2,3,4]x0207,1x028,1012100113x016,11300101223112233x014,102311002233102331x014,12331x26,3122331x012,101231100x27,3333x013,101101000x28,100011x010,2101000x210,011x012,101x213,01x012,11101x213,301x012,1023x213,0001x010,1121x213,3x15,x08,11101x214,0001x010,1121x214,3001x09,12101x214,0101x09,121333x214,01x09,1223221x214,1x010,1222121x214,1x010,12221333x213,31x09,12221221x213,311x08,13223331x212,33101x07,133221223x210,333121x08,13331331x28,3333121x0103,",
                        "RATTATABack": "p[1,2,3,4]x0424,11x029,1001x028,10101x027,100101x027,100101x027,113101x026,1221010000111x018,122310100012231x017,123310111122301x018,132101x25,301x018,122101x26,1x019,120101x26,1x019,12101x28,11x017,12101x26,0001x016,12101x26,0001x0137,",
                        "PIDGEOTBack": "p[1,2,3,4]x075,3x16,3x021,3311x35,131x018,31232x37,131x016,12222323111133133x014,120221130333313311x013,12020123331113311113x012,10003232113x16,0110313x07,10001022133133111100130231x06,100102013213313x15,01231x07,1010001321231333112111311x07,103001202123133110002111x07,10300320212321311x05,11x08,10100100122231311x05,121x07,10100100102213311x05,111x07,10300302300113331200001x010,30030030001x35,100023x010,1001001001x37,2023x011,100100101x39,021x011,30030010x310,001x010,1001000x16,x36,003x010,320121122200011332001x010,3223213322220000120003x010,12211x36,222000100001x09,1221x38,22220320003x09,131x310,x25,320001x08,11x312,2222122003x0136,",
                        "PIDGEOTTOBack": "p[1,2,3,4]x0239,313x027,3122213x022,33113x25,1x019,31022231113331x017,1202223233331333x015,10020222x36,131x014,10000223x19,33x012,10000311222313311011x012,100110202111333310011113x07,101100011x37,11211211x08,11010011x37,11200311x09,10010101x36,11200001x013,11001x36,112000321x012,10001x36,11x25,111x015,1x36,1122221x019,1x36,112221x019,1x36,x25,1x019,1x35,x26,1x018,1x36,x26,1x017,1x36,x28,1x015,1x37,x28,1x0135,",
                        "PIDGEYBack": "p[1,2,3,4]x0427,11x029,120111x024,111321321x022,12221321321x021,133321121111x021,1111x36,11x021,132x35,110101x017,1302x35,1110121x016,132x36,110311x016,1x310,1321x017,1x311,1031x016,1x311,201x016,1x311,1201x016,1x36,1x35,101x015,1x36,1x36,103x0138,",
                        "BEEDRILLBack": "p[1,2,3,4]x047,1x030,101x09,1x019,1001x07,101x018,10001x05,1001x019,1000100001001x019,1000300010001x020,100200010003x020,x17,0003x020,1x06,10002x019,1x06,101x021,1x010,1x019,1x012,3x018,1x011,31x018,1x010,3101x017,1x010,1021x017,1x09,21231x014,1111x08,221311x012,1100001x07,221113x011,1x06,21x05,2223111x010,11x06,22100x26,33x09,x18,022213x26,331x08,11113302312222132223331x08,11113002203122311x35,1x08,1121x26,0312331313331x09,1011200202211333100113x0202,",
                        "KAKUNABack": "p[1,2,3,4]x0333,131113x025,13222331x023,1200022331x021,320000223331x020,1200022233111x019,1220222333111x019,132222x35,11x019,1x311,1x018,1211x38,1x019,10021113331121x017,121122221111221x016,130021122333311x017,1300223111131131x017,110222233312121x017,121112233312101x017,12002111331231x018,12002233131211x019,120023331311x0139,",
                        "WEEDLEBack": "p[1,2,3,4]x0179,1x030,11x029,1031x027,13021x026,1112211x024,100211221x022,1x05,22233x020,3x06,223103x019,12x05,223113x019,1220002222331x019,1x211,1x019,1x211,1x019,3x210,101x019,1x28,1331x020,1x26,31331x021,x17,011x021,130320001x023,131220001x024,1220001x024,13x15,x017,1x06,130320001x015,10100001131200001x015,1030001301220001x0139,",
                        "BUTTERFREEBack": "p[1,2,3,4]x0179,2x030,232x015,2311132x07,31300232x09,23x16,3x06,31302312x09,3x18,3x05,1320313x09,2311113200320000120013x010,3111130121130000300032x09,33x15,001111300010001x010,3x16,301113230300021x010,3x17,3113231010001x011,3x18,312231310001x011,31111322223102311001x013,x15,22000131311001x013,1113113221000311303x013,31322201322023311102x012,3132x07,222311133x012,311132x07,23111301x010,3x17,30000223311132x010,31113220031302233x15,x09,311132202220013233x15,3x08,311322220002200133311132x08,3113222x06,22221311122x08,31132222x06,222331112x0137,",
                        "METAPODBack": "p[1,2,3,4]x0115,1x030,321x029,1203x027,13201x026,1220021x024,122200323x022,1222211121x021,12222103011x019,11x25,131311x017,11x27,103011x014,111x29,0x15,x015,13x29,003111x016,133x26,0003213x017,113x25,003211x019,1132220002131x019,1113200031231x018,12211300333123x018,122211x35,11x017,11x25,11333123x016,122122220033311x016,1122212200333123x015,1212221200333121x015,1222122210333111x015,1122212200133121x015,1212221000131111x0143,",
                        "CATERPIEBack": "p[1,2,3,4]x0332,3x15,3x024,100222231x022,10000222231011x018,30000222301101x017,122002222101111x017,1x28,30011x018,1x29,311x015,300101x27,1331x015,1001231x25,323101x013,3030123313223101331x013,101001333x18,3x014,12101011113113x018,32301233121001x019,1100133311001x018,1331001111211x019,1313111332311x020,113133133011x021,1221221111x0144,",
                        "BLASTOISEBack": "p[1,2,3,4]x0233,11100x16,0001111x013,100011x06,11100021x012,1021x06,x25,12331x013,12x05,x28,311x014,100x211,3311x014,10x212,331x014,1201111x26,333311x08,110001110000111x37,01x07,1001011x05,2221113333111x06,30000110000x27,11131001x06,100201000x17,32221133221x05,101101111x05,3311121002121x05,130031210x27,31111002211x05,100203x18,331100011221x06,10221112311000111x06,101x06,1011022311022200011022201x07,1100223110x28,3113201x07,100222110x28,333313301x06,102223110x27,x36,1311x05,102223110x26,x38,131010000123331112222x312,1101x0132,",
                        "WARTORTLEBack": "p[1,2,3,4]x081,1x016,3113x011,131x014,100031x09,3103x014,300001x09,101x014,1033001x08,1031x013,31023001x07,3023x014,30023033x15,303203x014,13023200x25,31001x014,302320000x25,3313x014,103220000x26,13x016,2122200x27,013x015,3x213,001x015,1x210,322011x015,1x29,3132231x015,1x29,1132223x015,1x29,13x25,1x014,3x29,32132231x015,1x210,311313x014,111133x16,31013x013,1102233120000221133013x09,100022312013330123131001x07,10002231201301030123100021x06,12223331203010003012100221x05,x15,3312030010032012122231x05,12223131203000122012313331x05,10000231320300001112213311x0134,",
                        "SQUIRTLEBack": "p[1,2,3,4]x0139,3x15,3x024,120022221x022,12000022221x020,122200x25,01x019,3x29,033x018,3x29,01023x017,1x27,3221121x017,1x26,31223121x017,1x25,313x25,1x017,3x29,12223x018,3113x26,313x017,3x16,3x25,31x016,122102102313231x016,103120221232131x016,11311223311131111x014,3011221331202111131x013,13120211120002113201x011,3210002312000222132003x010,121002331x26,3133201x010,121223331x25,33113333x010,121x35,1322233311113x011,121x35,1x37,11x014,333133311x36,111x015,1131113313333111x0142,",
                        "CHARIZARDBack": "p[1,2,3,4]x074,313x029,3001x029,1001x020,313x06,1001x018,100031x05,1001x018,311001100001001x019,3110031132100311x018,310002000100021x019,13300022102021x019,300x28,313x018,10x29,101x018,32222002222103x017,3222200002223123x016,1222200220222311x015,1x25,0x28,3231x08,300003x26,13x27,0023x06,30300322223132313222203201x06,12100122310012211132222301x06,11300121100011321013220303x05,12001031212221031210113223x06,1002111203123300010103231x07,302123200221320000313x010,3001221202212120031x013,102322300223212010011x011,103223202232211300100311x08,1012212022122121030001021x0135,",
                        "CHARMELEONBack": "p[1,2,3,4]x0170,313x029,1003x028,30001131113x022,30002122221x021,100223x25,1x020,33021x25,031x018,32213x27,121x017,1x211,131x017,1x211,313x017,3x210,3331x016,1x211,320013x013,1x215,0023x011,1x26,32223x26,031x010,1x28,3331x27,01x09,1x29,3131x28,3x09,3x29,3311x27,1x09,1x211,3113x25,1x09,1x212,310031113x010,3x213,31x015,1x215,3101x012,3x215,331011x09,3x215,33331021x08,1x214,x35,1221x0135,",
                        "CHARMANDERBack": "p[1,2,3,4]x0363,3111132x024,13x25,31x022,13200222231x021,320002222311x019,32200x26,11x019,1220x27,33x019,1x211,11x014,10101x211,331x011,1011101x210,32203x011,102211x28,1331221x011,1022133x26,31113321x011,122313312222310031131x011,13331321233310002131x013,133322322313002211x015,1322122223222231x016,12223x27,331x016,12221x25,x35,1x0140,",
                        "VENUSAURBack": "p[1,2,3,4]x07,31000011x022,31001001001x06,1x010,10010002311000010000131x08,131300022330002001001331x09,1000302222022221111331x010,10023x210,100001x012,10223222232211x06,3x011,132233322331002222001x012,122331113122223322203x010,113311331112233x25,01x08,1322311333111233x26,1x09,1322111333133133x26,1x010,133121x36,13223322221x08,122211001133313333122221x08,122210000213311131012221x08,32231002233110121231221x010,13310222331021213132231x09,131312233112213332121331x09,11313331012233x15,011x09,111103311012x35,121x011,10011021212133311112300111x06,100211312133331112111010021x05,1022311123331331112333102331000012223112133331111x35,123331000012223312333x16,3311x36,1x05,12333113113223331311x35,1x06,1x35,113022311331x37,11x06,133111122233311x38,101x0132,",
                        "IVYSAURBack": "p[1,2,3,4]x0169,1313x026,31222311x023,1002231121x021,300022132023x020,100223120021x019,30022312000223x018,10222310002221x018,12223122022231x018,12233132222331x019,1131x36,13111x015,101311331131311021x013,10101113111131112221x011,1000101113x16,31231x011,10022103x17,302231x011,12222110311311302231211x09,122221211130221122210131x08,1222x17,2122112310331x09,1221113130101221x36,1x09,12333133310101221x35,1x010,123331333131012133311x011,123331x36,102131131x010,121233133113331011021x011,1221x35,113333x15,x0138,",
                        "BULBASAURBack": "p[1,2,3,4]x0295,1x030,301x028,31001x027,123001113x023,121002212113x020,12132002120013x018,12132200021320100011x011,11213322x05,120101001x09,11302132220000212010001x08,13120213222200002321001x08,1313202133222200001210221x06,133132003132222000012122101x05,121332003133222000012121011x05,121332002133222200011123111x05,1013320023133x25,3113331131000010133320031333222311x37,10000123133320231x35,1113211113x06,123133330221331111333231x09,123x113,333231x0136,"
                    },
                    "Terrain": {
                        "BrickRoad": "p[1,3]00111x06,1x06,111000x19,x05,11x07,11x05,x110,",
                        "DirtClean": "p[1,3]x0145,101x013,1010101x013,101x026,101x013,101x027,",
                        "DirtForest": "p[1,3]01x05,101x05,100001x07,1x019,1x07,1x014,1x07,1x017,1x07,1x023,1x05,101x05,100001x07,1x019,1x07,1x014,1x07,1x017,1x07,1x022,",
                        "DirtLight": "p[1,3]x018,101x05,10100010101010101010101x05,101x05,1x020,101x05,101x05,101x05,101x036,101x05,10100010101010101010101x05,101x05,1x020,101x05,101x05,101x05,101x034,",
                        "DirtMedium": "p[1,3]10101011101010110100010101000101100011101000111001011101010111011011101010111010010100110101001100100110001001100x15,010x15,0110101011101010110100010101000101100011101000111001011101010111011011101010111010010100110101001100100110001001100x15,010x15,011010101110101011",
                        "DirtWhite": "x1256,",
                        "FloorCheckered": "p[1,3]x08,1010101x010,1010101x08,1010101x010,1010101x08,1010101x010,1010101x08,1010101x010,10101011010101x010,1010101x08,1010101x010,1010101x08,1010101x010,1010101x08,1010101x010,1010101x08,",
                        "FloorDiamonds": "p[1,3]10001x05,10001001000100010001000010001010001x06,100010001x08,1x05,1x010,10001x06,110000101000011101x05,1x05,10001x011,10001x05,1x05,1001100001010000111x05,10001x010,1x05,1x08,100010001x06,100010100010000100010001000100",
                        "FloorLinedHorizontal": "p[3,4]1000",
                        "FloorTiledDiagonal": "p[1,3]1x07,1x08,1x07,1x08,1x07,1x08,1x07,1x06,101x05,10100001000100010001001x05,101x05,1x08,1x07,11x07,1x08,1x07,1x08,1x07,1x08,1x07,1x06,101x05,10100001000100010001001x05,101x05,1x08,1x07,1",
                        "Mountain": "p[1,3,4]101110011110001121100212110021211101121212x19,0x15,2011112",
                        "Water": {
                            "normal": "p[1,4]111100x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,x05,x16,00x18,00x16,00x17,00x16,00x17,00x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,x05,x16,00x18,00x16,00x17,00x16,00111",
                            "two": "p[1,4]x15,00x16,00x15,00x16,00x16,00x16,00x17,00x16,0010x15,000x15,00100x16,00x18,00x16,00x17,00x16,00x17,00x16,00x15,00x16,00x16,00x16,00x17,00x16,0010x15,000x15,00100x16,00x18,00x16,00x17,00x16,0011",
                            "three": "p[1,4]x16,00x16,00x15,00x16,00x16,00x16,00x17,00x16,0000x15,000x15,01100x16,00x18,00x16,00x17,00x16,00x17,00x16,00x15,00x16,00x16,00x16,00x17,00x16,0000x15,000x15,01100x16,00x18,00x16,00x17,00x16,001",
                            "four": "p[1,4]11100x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,00010x16,00x16,0100x16,00x17,00x16,00x17,00x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,00010x16,00x16,0100x16,00x17,00x16,001111",
                            "five": "p[1,4]1100x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,000x18,00x16,0000x16,00x17,00x16,00x17,00x16,00x15,00x16,00x16,00x16,00x17,00x16,00x17,000x15,000x18,00x16,0000x16,00x17,00x16,00x15,"
                        },
                        "WallIndoorHorizontalBands": "p[3,4]0000x112,",
                        "WallIndoorHorizontalBandsInverse": "p[3,4]1111x012,",
                        "WallIndoorLightWithDarkBottom": "p[1,2,3,4]3x07,20202221",
                        "WallIndoorFancyWithDarkBottom": "p[1,2,3,4]202x06,2x06,2x010,2x06,2020000202x010,2x06,2x06,202000020200x325,232323223232323x18,",
                        "WallIndoorHorizontalBandsDark": "p[2,3,4]1220"
                    },
                    "Text": {
                        "BlackSquare": "x24,",
                        "DarkGraySquare": "x44,",
                        "Exclamation": "p[0,1,2]00x210,0002x110,202x15,22x15,22x15,22x15,22x15,22x15,22x15,22x15,22x15,22x15,22x112,22x15,22x15,22x15,22x15,202x110,2000x210,x09,22x012,2x06,",
                        "HalfArrowHorizontal": "p[0,2]11x06,11110000x16,00x18,",
                        "ExplosionSmall": "p[0,1,4]10100002200001010200110220110020102200222200220100x212,00010x210,010010x210,01000x212,00x232,00x212,00010x210,010010x210,01000x212,00102200222200220102001102201100201010000220000101",
                        "ScratchLine": "p[0,4]0x17,0",
                        "HPBar": ["multiple", "horizontal", {
                                "left": "p[0,2]0110",
                                "middle": "p[0,2]1001",
                                "right": "p[0,2]0110"
                            }],
                        "Note": "p[0,2]x09,111000100x17,00x19,01000x16,000100011000011110000x15,000010001x08,100011x06,1x05,1x06,100001x06,1110111x05,x18,x05,x18,x06,110011x010,",
                        "LightGraySquare": "x34,",
                        "WhiteSquare": "x14,",
                        "CharA": "p[0,2]x011,1x06,101x05,101000010001000x15,001x05,101x05,10",
                        "CharB": "p[0,2]x08,x15,0001000010010000100x16,001x05,101x05,10x16,00",
                        "CharC": "p[0,2]x010,111100010000101x07,1x07,1x08,100001000111100",
                        "CharD": "p[0,2]x08,x15,000100001001x05,101x05,101x05,1010000100x15,000",
                        "CharE": "p[0,2]x08,x17,01x07,1x07,x16,001x07,1x07,x17,0",
                        "CharF": "p[0,2]x08,x17,01x07,1x07,x16,001x07,1x07,1x07,",
                        "CharG": "p[0,2]x010,111100010000101x07,100111101x05,100100001000111100",
                        "CharH": "p[0,2]x08,1x05,101x05,101x05,10x17,01x05,101x05,101x05,10",
                        "CharI": "p[0,2]x09,x15,x05,1x07,1x07,1x07,1x07,1x05,x15,00",
                        "CharJ": "p[0,2]x09,x16,x05,1x07,1x07,1000100010001000100001110000",
                        "CharK": "p[0,2]x08,1000010010001000100100001011000011001000100001001x05,10",
                        "CharL": "p[0,2]x08,1x07,1x07,1x07,1x07,1x07,1x07,x17,0",
                        "CharM": "p[0,2]x08,1x05,101100011010101010100100101x05,101x05,101x05,10",
                        "CharN": "p[0,2]x08,1x05,1011000010101000101001001010001010100001101x05,10",
                        "CharO": "p[0,2]x010,111000010001001x05,101x05,101x05,100100010000111000",
                        "CharP": "p[0,2]x08,x16,001x05,101x05,10x16,001x07,1x07,1x07,",
                        "CharQ": "p[0,2]x010,111000010001001x05,101x05,10100010100100010000111010",
                        "CharR": "p[0,2]x08,x16,001x05,101x05,10x16,0010001000100001001x05,10",
                        "CharS": "p[0,2]x09,1111000100001001x08,x15,x08,101x05,100x15,00",
                        "CharT": "p[0,2]x08,x17,00001x07,1x07,1x07,1x07,1x07,10000",
                        "CharU": "p[0,2]x08,1x05,101x05,101x05,101x05,101x05,100100001000x15,0",
                        "CharV": "p[0,2]x08,1x05,101x05,10010001000100010000101x05,101x06,10000",
                        "CharW": "p[0,2]x08,1x05,1010010010101010101010101011000110110001101x05,10",
                        "CharX": "p[0,2]x08,110001100100010000101x06,1x06,1010000100010011000110",
                        "CharY": "p[0,2]x08,1x05,100100010000101x06,1x07,1x07,1x07,10000",
                        "CharZ": "p[0,2]x08,x17,x06,1x06,1x06,1x06,1x06,1x06,x17,0",
                        "Chara": "p[0,2]x026,111x08,100001111000100010000x15,0",
                        "Charb": "p[0,2]x09,1x07,1x07,1x07,x15,0001000010010000100x15,00",
                        "Charc": "p[0,2]x026,1111000100001001x07,100001000111100",
                        "Chard": "p[0,2]x014,1x07,1x07,1000x15,0010000100100001000x15,0",
                        "Chare": "p[0,2]x026,111100010000100x16,001x08,x15,0",
                        "Charf": "p[0,1,2]x08,111122x15,211211112x15,x26,11112x17,2x17,21111",
                        "Charg": "p[0,2]x018,x15,0010000100100001000x15,x07,100x15,00",
                        "Charh": "p[0,2]x09,1x07,1x07,1x07,1111000010001000100010001000100",
                        "Chari": "p[0,2]x019,1x015,1x07,1x07,1x07,10000",
                        "Charj": "p[0,2]x012,1x015,1x07,1x07,1x07,1x05,110000",
                        "Chark": "p[0,2]x09,1x07,1x07,100011001011000011x06,101100001000110",
                        "Charl": "p[0,2]x011,1x07,1x07,1x07,1x07,1x07,1x07,10000",
                        "Charm": "p[0,2]x024,1110110010010010100100101001001010010010",
                        "Charn": "p[0,2]x026,11110000100010001000100010001000100010",
                        "Charo": "p[0,2]x026,11110001000010010000100100001000111100",
                        "Charp": "p[0,2]x017,x15,0001000010010000100x15,0001x07,1x06,",
                        "Charq": "p[0,2]x018,x15,0010000100100001000x15,x07,1x07,10",
                        "Charr": "p[0,2]x025,10011100101x05,11x06,1x07,1x06,",
                        "Chars": "p[0,2]x026,11110001x08,1111x08,100x15,00",
                        "Chart": "p[0,2]x019,1x05,x15,x05,1x07,1x07,1x08,1100",
                        "Charu": "p[0,2]x025,100010001000100010001000100010000111100",
                        "Charv": "p[0,2]x025,1000100010001000100010000101x06,10000",
                        "Charw": "p[0,2]x024,1x05,1010010010100100101010101001000100",
                        "Charx": "p[0,2]x024,1100010000101x06,1x06,10100001000110",
                        "Chary": "p[0,2]x017,10001000100010001000100001111x07,10001111000",
                        "Charz": "p[0,2]x025,x16,x06,1x05,11x05,1x06,x16,0",
                        "Char0": "p[0,2]x018,1110000100110011000110110001100110010000111000",
                        "Char1": "p[0,2]x018,11x05,111x06,11x06,11x06,110000x16,00",
                        "Char2": "p[0,2]x017,x15,001100011x05,111001111000111x05,x17,0",
                        "Char3": "p[0,2]x017,x16,x05,110000111x08,110110001100x15,00",
                        "Char4": "p[0,2]x019,11100001111000110110011001100x17,x05,1100",
                        "Char5": "p[0,2]x016,x16,0011x06,x16,x07,110110001100x15,00",
                        "Char6": "p[0,2]x017,x15,0011x06,x16,0011000110110001100x15,00",
                        "Char7": "p[0,2]x016,x17,01100011x05,11x05,11x05,11x06,110000",
                        "Char8": "p[0,2]x017,x15,00110001100x15,0011000110110001100x15,00",
                        "Char9": "p[0,2]x017,x15,0011000110110001100x16,x06,1100x15,00",
                        "Char0Shadow": "p[0,2,3,4]21112202121223212122321212232111223x26,30x36,",
                        "Char1Shadow": "p[0,2,3,4]22112202221223222122322212232221223x26,30x36,",
                        "Char2Shadow": "p[0,2,3,4]21112202221223211122321222232111223x26,30x36,",
                        "Char3Shadow": "p[0,2,3,4]21112202221223211122322212232111223x26,30x36,",
                        "Char4Shadow": "p[0,2,3,4]21212202121223211122322212232221223x26,30x36,",
                        "Char5Shadow": "p[0,2,3,4]21112202122223211122322212232111223x26,30x36,",
                        "Char6Shadow": "p[0,2,3,4]21112202122223211122321212232111223x26,30x36,",
                        "Char7Shadow": "p[0,2,3,4]21112202221223222122322212232221223x26,30x36,",
                        "Char8Shadow": "p[0,2,3,4]21112202121223211122321212232111223x26,30x36,",
                        "Char9Shadow": "p[0,2,3,4]21112202121223211122322212232221223x26,30x36,",
                        "CharSpace": "0",
                        "CharTimes": "p[0,2]x017,100010000101x06,1x06,101000010001x010,",
                        "CharLeftParenthesis": "p[0,2]x05,11x05,1x06,1x07,1x07,1x08,1x08,11x09,",
                        "CharRightParenthesis": "p[0,2]11x08,1x08,1x07,1x07,1x06,1x05,11x014,",
                        "CharColon": "p[0,2]x019,11x06,11x022,11x06,11000",
                        "CharSemicolon": "p[0,2]x011,11x06,11x014,11x06,11x07,1x06,10000",
                        "CharLeftSquareBracket": "p[0,2]x013,111x05,1x07,1x07,1x07,1x07,1x07,111",
                        "CharRightSquareBracket": "p[0,2]x08,111x07,1x07,1x07,1x07,1x07,1x05,111x05,",
                        "CharPoke": "p[0,2]111x05,101x05,111x05,100010101000101x05,11x06,101x05,1010",
                        "CharMon": "p[0,2]1101100010101000100010001000100010010010000110100001011000010010",
                        "CharNo": "p[0,2]x08,1001000011010x17,01011011010110010111",
                        "CharID": "p[0,2]x09,101110001010010010100100101001001011100",
                        "CharHyphen": "p[0,2]x033,x16,x025,",
                        "CharMDash": "p[0,2]x025,x17,0x17,x024,",
                        "CharUnderscore": "p[0,2]x049,x17,0x17,",
                        "CharQuestionMark": "p[0,2]x09,x16,011100x15,00111000011x014,11x06,11000",
                        "CharExclamationMark": "p[0,2]00011x05,11110000111100001111x05,11x014,11x06,11000",
                        "CharMaleSymbol": "p[0,2]0001x06,111000010101001001001000111000010001000100010000111000",
                        "CharFemaleSymbol": "p[0,2]00111000010001000100010000111x06,1x05,x15,x05,1x07,10000",
                        "CharSlash": "p[0,2]x014,1x06,1x06,1x06,1x06,1x06,1x06,1x07,",
                        "CharPeriod": "p[0,2]x042,11x06,11x012,",
                        "CharComma": "p[0,2]x033,11x06,11x07,1x06,1x06,",
                        "CharED": "p[0,2]1111000011x06,1111000011001110x16,01000011010000110100001110",
                        "CharApostrophe": "p[0,2]00110110",
                        "CharFeet": "p[0,2]001101101000",
                        "CharInches": "p[0,1,2]0022000022112221112200012000",
                        "ChareFancy": "p[0,2]x010,11000011x08,111100010000100x16,001x08,x15,0",
                        "CharBall": "p[0,2,3,4]0011100013331013233311x35,11x25,101222100011100",
                        "CharBallEmpty": "p[0,3]001110001000101x05,11x05,11x05,101000100011100",
                        "CharCircle": "p[1,3]01110x115,01110",
                        "CharHP": "p[0,2]110101111001101011010x15,011110011010110001",
                        "CharPP": "p[0,2]x16,00x16,01100011011000111100011011000111100011011000x18,00x16,011x06,11x05,11x06,11x05,",
                        "CharTo": "p[0,2]01x05,11101100101001010100101010010010110",
                        "Char$": "p[0,2]0111101001011110100011100010001110001000",
                        "CharLevel": "p[0,2]001100101100001100101100001111",
                        "CharArrowUp": "p[0,2]0001x05,111000x15,0x114,",
                        "CharArrowRight": "p[0,2]110001110011110x19,01110011000",
                        "CharArrowBottom": "p[0,2]x114,0x15,000111x05,1000",
                        "CharArrowLeft": "p[0,2]00011001110x19,011110011100011",
                        "HalfArrowLeft": "p[0,2]x06,110000111100x114,",
                        "HalfArrowRight": "p[0,2]11x06,11110000x16,00x18,",
                        "Line": "p[2]0000",
                        "LineDecoratorHorizontalLeft": ["multiple", "horizontal", {
                                "middle": "p[0,1,2,3]x05,x26,x010,233332x05,x26,1111x212,1111x26,x05,233332x010,x26,x05,",
                                "right": "p[1,2]x032,x132,x032,"
                            }],
                        "LineDecoratorHorizontalRight": ["multiple", "horizontal", {
                                "left": "p[1,2]x032,x132,x032,",
                                "middle": "p[0,1,2,3]x05,x26,x010,233332x05,x26,1111x212,1111x26,x05,233332x010,x26,x05,"
                            }],
                        "LineDecoratorVertical": ["multiple", "vertical", {
                                "top": "p[1,2]001100001100001100001100001100001100001100001100001100001100001100001100001100001100001100001100",
                                "middle": "p[1,2,3]001100x17,2002112002112002112002x17,001100001100001100001100001100001100001100001100001100"
                            }],
                        "LineSeparatorHorizontal": "p[1,2]x016,x18,x08,x116,x016,",
                        "Menu": {
                            "normal": ["multiple", "corners", {
                                    "top": "p[1,2]x016,x18,x08,x116,x016,",
                                    "topRight": "p[1,2]x011,11000101011000x16,0010000101010010001011x05,101000",
                                    "right": "p[1,2]00101x05,101x05,101x05,101x05,101x05,101x05,101x05,101000",
                                    "bottomRight": "p[1,2]0010100001011000101011000x16,001000010101001x05,11x011,",
                                    "bottom": "p[1,2]x016,x18,x08,x116,x016,",
                                    "bottomLeft": "p[1,2]000101x05,11010001011010x16,0010000100010010100011x011,",
                                    "left": "p[1,2]00101x05,101x05,101x05,101x05,101x05,101x05,101x05,101000",
                                    "topLeft": "p[1,2]x011,11x05,1011010x16,001000010001001010001101000010100",
                                    "middle": "p[1]x064,"
                                }],
                            "plain": "p[1]x064,",
                            "light": ["multiple", "corners", {
                                    "top": "p[1,4]0011",
                                    "topRight": "p[1]0000",
                                    "right": "p[1,4]1010",
                                    "bottomRight": "p[1]0000",
                                    "bottom": "p[1,4]1100",
                                    "bottomLeft": "p[1]0000",
                                    "left": "p[1,4]0101",
                                    "topLeft": "p[1]0000",
                                    "middle": "p[1]0000"
                                }],
                            "lined": ["multiple", "corners", {
                                    "top": "p[2,4]x112,0000",
                                    "topRight": "p[2,4]x112,0111",
                                    "right": "p[2,4]0111011101110111",
                                    "bottomRight": "p[2,4]0x115,",
                                    "bottom": "p[2,4]0000x112,",
                                    "bottomLeft": "p[2,4]1110x112,",
                                    "left": "p[2,4]1110111011101110",
                                    "topLeft": "p[2,4]x115,0",
                                    "middle": "p[1]x016,"
                                }],
                            "dirty": "p[1,3,4]20222120221x25,122202122220x28,020221202221x25,12202122202",
                            "watery": "p[1,3]0011110010001001011x05,11110x16,00x16,001111001101111011100"
                        },
                        "MapGreyDiagonal": {
                            "normal": "p[1,4]x132,00x114,00x114,0000x112,0000x112,x06,x110,x06,x110,x08,x18,x08,x18,x010,x16,x010,x16,x012,1111x012,1111x014,11x014,11",
                            "two": "p[1,4]x014,11x014,11x012,1111x012,1111x010,x16,x010,x16,x08,x18,x08,x18,x06,x110,x06,x110,0000x112,0000x112,00x114,00x146,",
                            "three": "p[1,4]11x014,11x014,1111x012,1111x012,x16,x010,x16,x010,x18,x08,x18,x08,x110,x06,x110,x06,x112,0000x112,0000x114,00x114,00x132,",
                            "four": "p[1,4]x146,00x114,00x112,0000x112,0000x110,x06,x110,x06,x18,x08,x18,x08,x16,x010,x16,x010,1111x012,1111x012,11x014,11x014,"
                        },
                        "TownMapNoWater": "p[0,1,2,3,4]x496,x124,4x031,x496,x124,44x030,x496,x124,444x029,x496,x124,4444x028,x496,x124,x45,x027,x496,x124,x46,x026,x496,x124,x47,x025,x496,x124,x48,x024,x496,x18,x433,x015,x496,x18,x434,x014,x496,x18,x435,x013,x496,x18,x436,x012,x496,x18,x437,x011,x496,x18,x438,x010,x496,x18,x439,x09,x496,x18,x440,x08,x416,x28,x432,x140,x28,x132,x432,2x16,2x432,x140,2x16,2x132,x432,21333312x432,x111,22x127,21333312x132,x432,21311312x432,x110,2112x126,21311312x132,x432,21311312x432,x110,2112x126,21311312x132,x432,21333312x432,x111,22x127,21333312x132,x432,2x16,2x432,x140,2x16,2x132,x432,x28,x432,x140,x28,x132,x432,x18,x48,x28,x124,x432,x18,x424,x18,x432,x18,x48,2x16,2x124,x432,x18,x424,x18,x415,0x416,x18,x48,21333312x124,x432,x18,x424,11122111x414,00x416,x18,x48,21311312x124,x432,x18,x424,11211211x413,000x416,x18,x48,21311312x124,x432,x18,x424,11211211x412,0000x416,x18,x48,21333312x124,x432,x18,x424,11122111x411,x05,x416,x18,x48,2x16,2x124,x432,x18,x424,x18,x410,x06,x416,x18,x48,x28,x124,x432,x18,x424,x18,x49,x07,x416,x18,x48,x18,x456,x18,x424,x18,x48,x08,x416,x18,x48,x18,x456,x18,x424,x18,x47,x09,x416,11122111x48,11122111x456,x18,x424,x18,x46,x010,x416,11211211x48,11211211x456,x18,x424,x18,x45,x011,x416,11211211x48,11211211x456,x18,x424,x18,4444x012,x416,11122111x48,11122111x456,x18,x424,x18,444x013,x416,x18,x48,x18,x456,x18,x424,x18,44x014,x416,x18,x48,x18,x456,x18,x424,x18,4x015,x416,x18,x48,x18,x48,x124,x28,x116,x28,x124,x28,x016,x416,x18,x48,x18,x48,x124,2x16,2x116,2x16,2x124,2x16,2x016,x416,x18,x48,x18,x48,x124,21333312x116,21333312x124,21333312x016,x416,x18,x48,x18,x48,x124,21311312x116,21311312x124,21311312x016,x416,x18,x48,x18,x48,x124,21311312x116,21311312x124,21311312x016,x416,x18,x48,x18,x48,x124,21333312x116,21333312x124,21333312x016,x416,x18,x48,x18,x48,x124,2x16,2x116,2x16,2x124,2x16,2x016,x416,x18,x48,x18,x48,x124,x28,x116,x28,x124,x28,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x440,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x47,00x431,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x46,0000x430,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,x45,x06,x429,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,4444x08,x428,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,444x010,x427,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,44x012,x426,x18,x424,x18,x016,x416,x18,x48,x18,x48,x18,4x014,x425,x18,x424,x18,x016,x416,x116,x28,x48,x18,x024,x416,x18,x424,x18,x016,x416,x116,2x16,2x48,x18,x025,x415,x18,x424,x18,x016,x416,x116,21333312x48,x18,x026,x414,x18,x424,x18,x016,x416,x116,21311312x48,x18,x027,x413,x18,x424,x18,x016,x416,x116,21311312x48,x18,x028,x412,x18,x424,x18,x016,x416,x116,21333312x48,x18,x029,x411,x18,x424,x18,x016,x416,x116,2x16,2x48,x18,x030,x410,x18,x424,x18,x016,x416,x116,x28,x48,x18,x031,x49,x18,x424,x18,x016,x432,x18,x48,x18,x48,x024,x48,x28,x132,x07,4x08,x415,00x415,x18,x48,x18,x48,x024,x48,2x16,2x132,x06,44x08,x414,0000x414,x18,x48,x18,x48,x024,x48,21333312x132,x05,444x08,x413,x06,x413,x18,x48,x18,x48,x024,x48,21311312x132,00004444x08,x412,x08,x412,x18,x48,x18,x48,x024,x48,21311312x132,000x45,x08,x411,x010,x411,x18,x48,x18,x48,x024,x48,21333312x132,00x46,x08,x410,x012,x410,x18,x48,x18,x48,x024,x48,2x16,2x132,0x47,x08,x49,x014,x49,x18,x48,x18,x48,x024,x48,x28,x132,x48,x08,x48,x016,x48,x18,x48,x18,x48,x024,x440,x18,x48,x08,x47,x017,x48,x18,x48,x18,x47,x026,x439,x18,x47,x09,x46,x018,x48,x18,x48,x18,x46,x028,x438,x18,x46,x010,x45,x019,x48,x18,x48,x18,x45,x030,x437,x18,x45,x011,4444x020,x48,x18,x48,x18,4444x032,x436,x18,4444x012,444x021,x48,x18,x48,x18,444x034,x435,x18,444x013,44x022,x48,x18,x48,x18,44x036,x434,x18,44x014,4x023,x48,x18,x48,x18,4x038,x433,x18,4x039,x48,x28,x48,x048,x48,x132,x040,x48,2x16,2x47,000022x043,x48,x132,x040,x48,21333312x46,x05,22x043,x48,x132,x040,x48,21311312x45,x051,x48,x132,x040,x48,213113124444x052,x48,x132,x040,x48,21333312444x08,22x043,x48,x132,x040,x48,2x16,244x09,22x043,x48,x132,x040,x48,x28,4x055,x48,x132,x040,x48,x18,x039,x425,x18,x416,x049,x47,x18,x011,22x025,x426,x18,x416,x050,x46,x18,x011,22x024,x427,x18,x416,x051,x45,x18,x036,x428,x18,x416,x052,4444x18,x035,x429,x18,x416,x053,444x18,x011,22x021,x430,x18,x416,x054,44x18,x011,22x020,x431,x18,x416,x055,4x18,x032,x432,x18,x416,x088,x116,x28,x124,x416,x059,22x027,x116,2x16,2x124,x415,x060,22x027,x116,21333312x124,x414,x077,2200002200220x116,21311312x124,x413,x078,2200002200220x116,21311312x124,x412,x063,22x027,x116,21333312x124,x411,x064,22x027,x116,2x16,2x124,x410,x094,x116,x28,x124,x49,x062,4x18,4x023,x416,x18,x48,x086,44x18,44x023,x415,x18,x47,x086,444x18,444x023,x414,x18,x46,x086,4444x18,4444x023,x413,x18,x45,x086,x45,x18,x45,x023,x412,x18,4444x086,x46,x18,x46,x023,x411,x18,444x086,x47,x18,x47,x023,x410,x18,44x086,x48,x18,x48,x023,x49,x18,4x087,x48,x28,x18,x08,x18,x0112,x48,2x16,2x18,x08,x18,x0112,x48,21333312x18,x08,11122111x0112,x48,21311312x18,0220022011211211022002200220022000022x091,x48,21311312x18,0220022011211211022002200220022000022x091,x48,21333312x18,x08,11122111x0112,x48,2x16,2x18,x08,x18,x0112,x48,x28,x18,x08,x18,x088,"
                    }
                }
            };
        }
        Settings.GenerateSpritesSettings = GenerateSpritesSettings;
        function GenerateStateSettings() {
            "use strict";
            return {
                prefix: "StateHolder::"
            };
        }
        Settings.GenerateStateSettings = GenerateStateSettings;
        function GenerateUISettings() {
            "use strict";
            return {
                GameStartrConstructor: FullScreenPokemon.FullScreenPokemon,
                globalName: "FSP",
                styleSheet: {
                    ".FullScreenPokemon": {
                        color: "black"
                    },
                    "@font-face": {
                        "font-family": "'Press Start'",
                        src: [
                            "url('Fonts/pressstart2p-webfont.eot?#iefix') format('embedded-opentype')",
                            "url('Fonts/pressstart2p-webfont.woff') format('woff')",
                            "url('Fonts/pressstart2p-webfont.ttf') format('truetype')",
                            "url('Fonts/pressstart2p-webfont.svg') format('svg')"
                        ].join(", "),
                        "font-weight": "normal",
                        "font-style": "normal"
                    }
                },
                sizeDefault: "Wide",
                sizes: {
                    GameBoy: {
                        width: 320,
                        height: 288
                    },
                    NES: {
                        width: 512,
                        height: 464,
                        full: false
                    },
                    Wide: {
                        width: Infinity,
                        height: 580,
                        full: false
                    },
                    Large: {
                        width: Infinity,
                        height: Infinity,
                        full: false
                    },
                    "Full!": {
                        width: Infinity,
                        height: Infinity,
                        full: true
                    }
                },
                schemas: [
                    {
                        title: "Options",
                        generator: "OptionsTable",
                        options: [
                            {
                                title: "Volume",
                                type: "Number",
                                minimum: 0,
                                maximum: 100,
                                source: function (FSP) {
                                    return Math.round(FSP.AudioPlayer.getVolume() * 100);
                                },
                                update: function (FSP, value) {
                                    FSP.AudioPlayer.setVolume(value / 100);
                                }
                            },
                            {
                                title: "Mute",
                                type: "Boolean",
                                source: function (FSP) {
                                    return FSP.AudioPlayer.getMuted();
                                },
                                enable: function (FSP) {
                                    FSP.AudioPlayer.setMutedOn();
                                },
                                disable: function (FSP) {
                                    FSP.AudioPlayer.setMutedOff();
                                }
                            },
                            {
                                title: "Speed",
                                type: "Select",
                                options: function (FSP) {
                                    return [".25x", ".5x", "1x", "2x", "5x"];
                                },
                                source: function (FSP) {
                                    return "1x";
                                },
                                update: function (FSP, value) {
                                    FSP.GamesRunner.setSpeed(Number(value.replace("x", "")));
                                },
                                storeLocally: true
                            },
                            {
                                title: "View Mode",
                                type: "ScreenSize"
                            },
                            {
                                title: "Framerate",
                                type: "Select",
                                options: function (FSP) {
                                    return ["60fps", "30fps"];
                                },
                                source: function (FSP) {
                                    return (1 / FSP.PixelDrawer.getFramerateSkip() * 60) + "fps";
                                },
                                update: function (FSP, value) {
                                    var numeric = parseInt(value.replace("fps", ""), 10);
                                    FSP.PixelDrawer.setFramerateSkip(1 / numeric * 60);
                                },
                                storeLocally: true
                            },
                            {
                                title: "Tilt Controls",
                                type: "Boolean",
                                storeLocally: true,
                                source: function (FSP) {
                                    return false;
                                },
                                enable: function (FSP) {
                                    window.ondevicemotion = FSP.InputWriter.makePipe("ondevicemotion", "type");
                                },
                                disable: function (FSP) {
                                    window.ondevicemotion = undefined;
                                }
                            }
                        ],
                        actions: [
                            {
                                title: "Screenshot",
                                action: function (FSP) {
                                    FSP.utilities.takeScreenshot("FullScreenPokemon " + Date.now());
                                }
                            }
                        ]
                    },
                    {
                        title: "Controls",
                        generator: "OptionsTable",
                        options: (function (controls) {
                            return controls.map(function (title) {
                                return {
                                    title: title[0].toUpperCase() + title.substr(1),
                                    type: "Keys",
                                    storeLocally: true,
                                    source: function (FSP) {
                                        return FSP.InputWriter
                                            .getAliasAsKeyStrings(title)
                                            .map(function (text) { return text.toLowerCase(); });
                                    },
                                    callback: function (FSP, valueOld, valueNew) {
                                        FSP.InputWriter.switchAliasValues(title, [FSP.InputWriter.convertKeyStringToAlias(valueOld)], [FSP.InputWriter.convertKeyStringToAlias(valueNew)]);
                                    }
                                };
                            });
                        })(["a", "b", "left", "right", "up", "down", "pause"])
                    }, {
                        title: "Mods!",
                        generator: "OptionsButtons",
                        keyActive: "enabled",
                        assumeInactive: true,
                        options: function (FSP) {
                            var mods = FSP.ModAttacher.getMods();
                            var output = [];
                            var mod;
                            for (var i in mods) {
                                if (!mods.hasOwnProperty(i)) {
                                    continue;
                                }
                                mod = mods[i];
                                output.push({
                                    title: mod.name,
                                    source: function () { return mod.enabled; },
                                    storeLocally: true,
                                    type: "text"
                                });
                            }
                            return output;
                        },
                        callback: function (FSP, schema, button) {
                            var name = button.textContent;
                            var key = button.getAttribute("localStorageKey");
                            var mod = FSP.ModAttacher.getMod(name);
                            FSP.ModAttacher.toggleMod(name);
                            FSP.ItemsHolder.setItem(key, mod.enabled);
                            FSP.ItemsHolder.saveItem(key);
                        }
                    }
                ]
            };
        }
        Settings.GenerateUISettings = GenerateUISettings;
    })(Settings = FullScreenPokemon.Settings || (FullScreenPokemon.Settings = {}));
})(FullScreenPokemon || (FullScreenPokemon = {}));
var FullScreenPokemon;
(function (FullScreenPokemon_1) {
    var GenerateAudioSettings = FullScreenPokemon_1.Settings.GenerateAudioSettings;
    var GenerateBattlesSettings = FullScreenPokemon_1.Settings.GenerateBattlesSettings;
    var GenerateCollisionsSettings = FullScreenPokemon_1.Settings.GenerateCollisionsSettings;
    var GenerateDevicesSettings = FullScreenPokemon_1.Settings.GenerateDevicesSettings;
    var GenerateEditorSettings = FullScreenPokemon_1.Settings.GenerateEditorSettings;
    var GenerateEventsSettings = FullScreenPokemon_1.Settings.GenerateEventsSettings;
    var GenerateGeneratorSettings = FullScreenPokemon_1.Settings.GenerateGeneratorSettings;
    var GenerateGroupsSettings = FullScreenPokemon_1.Settings.GenerateGroupsSettings;
    var GenerateInputSettings = FullScreenPokemon_1.Settings.GenerateInputSettings;
    var GenerateItemsSettings = FullScreenPokemon_1.Settings.GenerateItemsSettings;
    var GenerateMapsSettings = FullScreenPokemon_1.Settings.GenerateMapsSettings;
    var GenerateMathSettings = FullScreenPokemon_1.Settings.GenerateMathSettings;
    var GenerateMenusSettings = FullScreenPokemon_1.Settings.GenerateMenusSettings;
    var GenerateModsSettings = FullScreenPokemon_1.Settings.GenerateModsSettings;
    var GenerateObjectsSettings = FullScreenPokemon_1.Settings.GenerateObjectsSettings;
    var GenerateQuadrantsSettings = FullScreenPokemon_1.Settings.GenerateQuadrantsSettings;
    var GenerateRendererSettings = FullScreenPokemon_1.Settings.GenerateRendererSettings;
    var GenerateRunnerSettings = FullScreenPokemon_1.Settings.GenerateRunnerSettings;
    var GenerateScenesSettings = FullScreenPokemon_1.Settings.GenerateScenesSettings;
    var GenerateSpritesSettings = FullScreenPokemon_1.Settings.GenerateSpritesSettings;
    var GenerateStateSettings = FullScreenPokemon_1.Settings.GenerateStateSettings;
    var GenerateUISettings = FullScreenPokemon_1.Settings.GenerateUISettings;
    /**
     * Animation functions used by FullScreenPokemon instances.
     */
    var Animations = (function (_super) {
        __extends(Animations, _super);
        function Animations() {
            _super.apply(this, arguments);
        }
        /**
         * Spawning callback for Characters. Sight and roaming are accounted for.
         *
         * @param thing   A newly placed Character.
         */
        Animations.prototype.spawnCharacter = function (thing) {
            var _this = this;
            if (thing.sight) {
                thing.sightDetector = this.EightBitter.things.add([
                    "SightDetector",
                    {
                        direction: thing.direction,
                        width: thing.sight * 8
                    }
                ]);
                thing.sightDetector.viewer = thing;
                this.EightBitter.animations.animatePositionSightDetector(thing);
            }
            if (thing.roaming) {
                this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.animations.activateCharacterRoaming(thing); }, this.EightBitter.NumberMaker.randomInt(70));
            }
        };
        /**
         * Activates a WindowDetector by immediately starting its cycle of
         * checking whether it's in-frame to activate.
         *
         * @param thing   A newly placed WindowDetector.
         */
        Animations.prototype.spawnWindowDetector = function (thing) {
            var _this = this;
            if (!this.EightBitter.animations.checkWindowDetector(thing)) {
                this.EightBitter.TimeHandler.addEventInterval(function () { return _this.EightBitter.animations.checkWindowDetector(thing); }, 7, Infinity);
            }
        };
        /**
         * Snaps a moving Thing to a predictable grid position.
         *
         * @param thing   A Thing to snap the position of.
         */
        Animations.prototype.animateSnapToGrid = function (thing) {
            var grid = this.EightBitter.unitsize * 8;
            var x = (this.EightBitter.MapScreener.left + thing.left) / grid;
            var y = (this.EightBitter.MapScreener.top + thing.top) / grid;
            this.EightBitter.physics.setLeft(thing, Math.round(x) * grid - this.EightBitter.MapScreener.left);
            this.EightBitter.physics.setTop(thing, Math.round(y) * grid - this.EightBitter.MapScreener.top);
        };
        /**
         * Freezes a Character to start a dialog.
         *
         * @param thing   A Character to freeze.
         */
        Animations.prototype.animatePlayerDialogFreeze = function (thing) {
            this.animateCharacterPreventWalking(thing);
            this.EightBitter.TimeHandler.cancelClassCycle(thing, "walking");
            if (thing.walkingFlipping) {
                this.EightBitter.TimeHandler.cancelEvent(thing.walkingFlipping);
                thing.walkingFlipping = undefined;
            }
        };
        /**
         * Gradually changes a numeric attribute over time.
         *
         * @param thing   A Thing whose attribute is to change.
         * @param attribute   The name of the attribute to change.
         * @param change   How much to change the attribute each tick.
         * @param goal   A final value for the attribute to stop at.
         * @param speed   How many ticks between changes.
         * @param onCompletion   A callback for when the attribute reaches the goal.
         * @returns The in-progress TimeEvent.
         */
        Animations.prototype.animateFadeAttribute = function (thing, attribute, change, goal, speed, onCompletion) {
            var _this = this;
            thing[attribute] += change;
            if (change > 0) {
                if (thing[attribute] >= goal) {
                    thing[attribute] = goal;
                    if (typeof onCompletion === "function") {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            else {
                if (thing[attribute] <= goal) {
                    thing[attribute] = goal;
                    if (typeof onCompletion === "function") {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            return this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(thing, attribute, change, goal, speed, onCompletion);
            }, speed);
        };
        /**
         * Slides a Thing across the screen horizontally over time.
         *
         * @param thing   A Thing to slide across the screen.
         * @param change   How far to move each tick.
         * @param goal   A midX location to stop sliding at.
         * @param speed   How many ticks between movements.
         * @param onCompletion   A callback for when the Thing reaches the goal.
         * @returns The in-progress TimeEvent.
         */
        Animations.prototype.animateSlideHorizontal = function (thing, change, goal, speed, onCompletion) {
            var _this = this;
            this.EightBitter.physics.shiftHoriz(thing, change);
            if (change > 0) {
                if (this.EightBitter.physics.getMidX(thing) >= goal) {
                    this.EightBitter.physics.setMidX(thing, goal);
                    if (onCompletion) {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            else {
                if (this.EightBitter.physics.getMidX(thing) <= goal) {
                    this.EightBitter.physics.setMidX(thing, goal);
                    if (onCompletion) {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.animateSlideHorizontal(thing, change, goal, speed, onCompletion);
            }, speed);
        };
        /**
         * Slides a Thing across the screen vertically over time.
         *
         * @param thing   A Thing to slide across the screen.
         * @param change   How far to move each tick.
         * @param goal   A midY location to stop sliding at.
         * @param speed   How many ticks between movements.
         * @param onCompletion   A callback for when the Thing reaches the goal.
         * @returns The in-progress TimeEvent.
         */
        Animations.prototype.animateSlideVertical = function (thing, change, goal, speed, onCompletion) {
            var _this = this;
            this.EightBitter.physics.shiftVert(thing, change);
            if (change > 0) {
                if (this.EightBitter.physics.getMidY(thing) >= goal) {
                    this.EightBitter.physics.setMidY(thing, goal);
                    if (onCompletion) {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            else {
                if (this.EightBitter.physics.getMidY(thing) <= goal) {
                    this.EightBitter.physics.setMidY(thing, goal);
                    if (onCompletion) {
                        onCompletion(thing);
                    }
                    return;
                }
            }
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.animateSlideVertical(thing, change, goal, speed, onCompletion);
            }, speed);
        };
        /**
         * Freezes a Character in grass and calls startBattle.
         *
         * @param thing   A Character about to start a battle.
         * @param grass   Grass the Character is walking in.
         */
        Animations.prototype.animateGrassBattleStart = function (thing, grass) {
            var grassMap = this.EightBitter.AreaSpawner.getMap(grass.mapName);
            var grassArea = grassMap.areas[grass.areaName];
            var options = grassArea.wildPokemon.grass;
            var chosen = this.EightBitter.battles.chooseRandomWildPokemon(options);
            var chosenPokemon = this.EightBitter.utilities.createPokemon(chosen);
            this.EightBitter.graphics.removeClass(thing, "walking");
            if (thing.shadow) {
                this.EightBitter.graphics.removeClass(thing.shadow, "walking");
            }
            this.animateCharacterPreventWalking(thing);
            this.EightBitter.battles.startBattle({
                battlers: {
                    opponent: {
                        name: chosen.title,
                        actors: [chosenPokemon],
                        category: "Wild",
                        sprite: chosen.title.join("") + "Front"
                    }
                }
            });
        };
        /**
         * Freezes a Character and starts a battle with an enemy.
         *
         * @param thing   A Character about to start a battle with other.
         * @param other   An enemy about to battle thing.
         */
        Animations.prototype.animateTrainerBattleStart = function (thing, other) {
            var _this = this;
            var battleName = other.battleName || other.title;
            var battleSprite = other.battleSprite || battleName;
            this.EightBitter.battles.startBattle({
                battlers: {
                    opponent: {
                        name: battleName.split(""),
                        sprite: battleSprite + "Front",
                        category: "Trainer",
                        hasActors: true,
                        reward: other.reward,
                        actors: other.actors.map(function (schema) {
                            return _this.EightBitter.utilities.createPokemon(schema);
                        })
                    }
                },
                textStart: ["", " wants to fight!"],
                textDefeat: other.textDefeat,
                textAfterBattle: other.textAfterBattle,
                giftAfterBattle: other.giftAfterBattle,
                badge: other.badge,
                textVictory: other.textVictory,
                nextCutscene: other.nextCutscene
            });
        };
        /**
         * Creates and positions a set of four Things around a point.
         *
         * @param x   The horizontal value of the point.
         * @param y   The vertical value of the point.
         * @param title   A title for each Thing to create.
         * @param settings   Additional settings for each Thing.
         * @param groupType   Which group to move the Things into, if any.
         * @returns The four created Things.
         */
        Animations.prototype.animateThingCorners = function (x, y, title, settings, groupType) {
            var things = [];
            for (var i = 0; i < 4; i += 1) {
                things.push(this.EightBitter.things.add([title, settings]));
            }
            if (groupType) {
                for (var _i = 0, things_1 = things; _i < things_1.length; _i++) {
                    var thing = things_1[_i];
                    this.EightBitter.GroupHolder.switchMemberGroup(thing, thing.groupType, groupType);
                }
            }
            this.EightBitter.physics.setLeft(things[0], x);
            this.EightBitter.physics.setLeft(things[1], x);
            this.EightBitter.physics.setRight(things[2], x);
            this.EightBitter.physics.setRight(things[3], x);
            this.EightBitter.physics.setBottom(things[0], y);
            this.EightBitter.physics.setBottom(things[3], y);
            this.EightBitter.physics.setTop(things[1], y);
            this.EightBitter.physics.setTop(things[2], y);
            this.EightBitter.graphics.flipHoriz(things[0]);
            this.EightBitter.graphics.flipHoriz(things[1]);
            this.EightBitter.graphics.flipVert(things[1]);
            this.EightBitter.graphics.flipVert(things[2]);
            return things;
        };
        /**
         * Moves a set of four Things away from a point.
         *
         * @param things   The four Things to move.
         * @param amount   How far to move each Thing horizontally and vertically.
         */
        Animations.prototype.animateExpandCorners = function (things, amount) {
            this.EightBitter.physics.shiftHoriz(things[0], amount);
            this.EightBitter.physics.shiftHoriz(things[1], amount);
            this.EightBitter.physics.shiftHoriz(things[2], -amount);
            this.EightBitter.physics.shiftHoriz(things[3], -amount);
            this.EightBitter.physics.shiftVert(things[0], -amount);
            this.EightBitter.physics.shiftVert(things[1], amount);
            this.EightBitter.physics.shiftVert(things[2], amount);
            this.EightBitter.physics.shiftVert(things[3], -amount);
        };
        /**
         * Creates a small smoke animation from a point.
         *
         * @param x   The horizontal location of the point.
         * @param y   The vertical location of the point.
         * @param callback   A callback for when the animation is done.
         */
        Animations.prototype.animateSmokeSmall = function (x, y, callback) {
            var _this = this;
            var things = this.animateThingCorners(x, y, "SmokeSmall", undefined, "Text");
            this.EightBitter.TimeHandler.addEvent(function () {
                for (var _i = 0, things_2 = things; _i < things_2.length; _i++) {
                    var thing = things_2[_i];
                    _this.EightBitter.physics.killNormal(thing);
                }
            }, 7);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.animateSmokeMedium(x, y, callback); }, 7);
        };
        /**
         * Creates a medium-sized smoke animation from a point.
         *
         * @param x   The horizontal location of the point.
         * @param y   The vertical location of the point.
         * @param callback   A callback for when the animation is done.
         */
        Animations.prototype.animateSmokeMedium = function (x, y, callback) {
            var _this = this;
            var things = this.animateThingCorners(x, y, "SmokeMedium", undefined, "Text");
            this.EightBitter.TimeHandler.addEvent(function () { return _this.animateExpandCorners(things, _this.EightBitter.unitsize); }, 7);
            this.EightBitter.TimeHandler.addEvent(function () {
                for (var _i = 0, things_3 = things; _i < things_3.length; _i++) {
                    var thing = things_3[_i];
                    _this.EightBitter.physics.killNormal(thing);
                }
            }, 14);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.animateSmokeLarge(x, y, callback); }, 14);
        };
        /**
         * Creates a large smoke animation from a point.
         *
         * @param x   The horizontal location of the point.
         * @param y   The vertical location of the point.
         * @param callback   A callback for when the animation is done.
         */
        Animations.prototype.animateSmokeLarge = function (x, y, callback) {
            var _this = this;
            var things = this.animateThingCorners(x, y, "SmokeLarge", undefined, "Text");
            this.animateExpandCorners(things, this.EightBitter.unitsize * 2.5);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.animateExpandCorners(things, _this.EightBitter.unitsize * 2); }, 7);
            this.EightBitter.TimeHandler.addEvent(function () {
                for (var _i = 0, things_4 = things; _i < things_4.length; _i++) {
                    var thing = things_4[_i];
                    _this.EightBitter.physics.killNormal(thing);
                }
            }, 21);
            if (callback) {
                this.EightBitter.TimeHandler.addEvent(callback, 21);
            }
        };
        /**
         * Animates an exclamation mark above a Thing.
         *
         * @param thing   A Thing to show the exclamation over.
         * @param timeout   How long to keep the exclamation (by default, 140).
         * @param callback   A callback for when the exclamation is removed.
         * @returns The exclamation Thing.
         */
        Animations.prototype.animateExclamation = function (thing, timeout, callback) {
            var _this = this;
            var exclamation = this.EightBitter.things.add("Exclamation");
            timeout = timeout || 140;
            this.EightBitter.physics.setMidXObj(exclamation, thing);
            this.EightBitter.physics.setBottom(exclamation, thing.top);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.killNormal(exclamation); }, timeout);
            if (callback) {
                this.EightBitter.TimeHandler.addEvent(callback, timeout);
            }
            return exclamation;
        };
        /**
         * Fades the screen out to a solid color.
         *
         * @param settings   Settings for the animation.
         * @returns The solid color Thing.
         */
        Animations.prototype.animateFadeToColor = function (settings) {
            var _this = this;
            if (settings === void 0) { settings = {}; }
            var color = settings.color || "White";
            var callback = settings.callback;
            var change = settings.change || .33;
            var speed = settings.speed || 4;
            var blank = this.EightBitter.ObjectMaker.make(color + "Square", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 0
            });
            this.EightBitter.things.add(blank);
            this.EightBitter.animations.animateFadeAttribute(blank, "opacity", change, 1, speed, function () {
                _this.EightBitter.physics.killNormal(blank);
                if (callback) {
                    callback();
                }
            });
            return blank;
        };
        /**
         * Places a solid color over the screen and fades it out.
         *
         * @param settings   Settings for the animation.
         * @returns The solid color Thing.
         */
        Animations.prototype.animateFadeFromColor = function (settings) {
            var _this = this;
            if (settings === void 0) { settings = {}; }
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var color = settings.color || "White";
            var callback = settings.callback;
            var change = settings.change || .33;
            var speed = settings.speed || 4;
            var blank = this.EightBitter.ObjectMaker.make(color + "Square", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 1
            });
            this.EightBitter.things.add(blank);
            this.EightBitter.animations.animateFadeAttribute(blank, "opacity", -change, 0, speed, function () {
                _this.EightBitter.physics.killNormal(blank);
                if (callback) {
                    callback.apply(void 0, [settings].concat(args));
                }
            });
            return blank;
        };
        /**
         * Animates a "flicker" effect on a Thing by repeatedly toggling its hidden
         * flag for a little while.
         *
         * @param thing   A Thing to flicker.
         * @param cleartime   How long to wait to stop the effect (by default, 49).
         * @param interval   How many steps between hidden toggles (by default, 2).
         * @param callback   A Function to called on the Thing when done flickering.
         * @returns The flickering time event.
         */
        Animations.prototype.animateFlicker = function (thing, cleartime, interval, callback) {
            var _this = this;
            if (cleartime === void 0) { cleartime = 49; }
            if (interval === void 0) { interval = 2; }
            thing.flickering = true;
            this.EightBitter.TimeHandler.addEventInterval(function () {
                thing.hidden = !thing.hidden;
                if (!thing.hidden) {
                    _this.EightBitter.PixelDrawer.setThingSprite(thing);
                }
            }, interval | 0, cleartime | 0);
            return this.EightBitter.TimeHandler.addEvent(function () {
                thing.flickering = thing.hidden = false;
                _this.EightBitter.PixelDrawer.setThingSprite(thing);
                if (callback) {
                    callback(thing);
                }
            }, ((cleartime * interval) | 0) + 1);
        };
        /**
         * Shakes all Things on the screen back and forth for a little bit.
         *
         *
         * @param EightBitter
         * @param dx   How far to shift horizontally (by default, 0).
         * @param dy   How far to shift horizontally (by default, 0).
         * @param cleartime   How long until the screen is done shaking.
         * @param interval   How many game upkeeps between movements.
         * @returns The shaking time event.
         */
        Animations.prototype.animateScreenShake = function (dx, dy, cleartime, interval, callback) {
            var _this = this;
            if (dx === void 0) { dx = 0; }
            if (dy === void 0) { dy = 0; }
            if (cleartime === void 0) { cleartime = 8; }
            if (interval === void 0) { interval = 8; }
            this.EightBitter.TimeHandler.addEventInterval(function () {
                _this.EightBitter.GroupHolder.callOnAll(_this.EightBitter.physics, _this.EightBitter.physics.shiftHoriz, dx);
                _this.EightBitter.GroupHolder.callOnAll(_this.EightBitter.physics, _this.EightBitter.physics.shiftVert, dy);
            }, 1, cleartime * interval);
            return this.EightBitter.TimeHandler.addEvent(function () {
                dx *= -1;
                dy *= -1;
                _this.EightBitter.TimeHandler.addEventInterval(function () {
                    dx *= -1;
                    dy *= -1;
                }, interval, cleartime);
                if (callback) {
                    _this.EightBitter.TimeHandler.addEvent(callback, interval * cleartime);
                }
            }, (interval / 2) | 0);
        };
        /**
         * Sets a Character's xvel and yvel based on its speed and direction, and marks
         * its destination endpoint.
         *
         * @param thing   A moving Character.
         * @param distance   How far the Character is moving.
         */
        Animations.prototype.animateCharacterSetDistanceVelocity = function (thing, distance) {
            thing.distance = distance;
            switch (thing.direction) {
                case 0:
                    thing.xvel = 0;
                    thing.yvel = -thing.speed;
                    thing.destination = thing.top - distance;
                    break;
                case 1:
                    thing.xvel = thing.speed;
                    thing.yvel = 0;
                    thing.destination = thing.right + distance;
                    break;
                case 2:
                    thing.xvel = 0;
                    thing.yvel = thing.speed;
                    thing.destination = thing.bottom + distance;
                    break;
                case 3:
                    thing.xvel = -thing.speed;
                    thing.yvel = 0;
                    thing.destination = thing.left - distance;
                    break;
                default:
                    throw new Error("Unknown direction: " + thing.direction + ".");
            }
        };
        /**
         * Starts a Character's walking cycle regardless of the direction.
         *
         * @param thing   A Character to start walking.
         * @param direction   What direction the Character should turn to face.
         * @param onStop   A queue of commands as alternating directions and distances.
         */
        Animations.prototype.animateCharacterStartWalkingCycle = function (thing, direction, onStop) {
            if (onStop.length === 0) {
                return;
            }
            // If the first queued command is a 0 distance, walking might be complete
            if (onStop[0] === 0) {
                // More commands indicates walking isn't done, and to continue turning/walking
                if (onStop.length > 1) {
                    if (typeof onStop[1] === "function") {
                        onStop[1](thing);
                        return;
                    }
                    this.animateCharacterSetDirection(thing, FullScreenPokemon_1.DirectionAliases[onStop[1]]);
                    this.animateCharacterStartWalkingCycle(thing, FullScreenPokemon_1.DirectionAliases[onStop[1]], onStop.slice(2));
                }
                return;
            }
            if (thing.follower) {
                thing.walkingCommands.push(direction);
            }
            this.animateCharacterStartWalking(thing, direction, onStop);
            if (!thing.bordering[direction]) {
                this.EightBitter.physics.shiftBoth(thing, -thing.xvel, -thing.yvel);
            }
        };
        /**
         * Starts a Character walking in the given direction as part of a walking cycle.
         *
         * @param thing   The Character to start walking.
         * @param direction   What direction to walk in (by default, up).
         * @param onStop   A queue of commands as alternating directions and distances.
         */
        Animations.prototype.animateCharacterStartWalking = function (thing, direction, onStop) {
            var _this = this;
            if (direction === void 0) { direction = Direction.Top; }
            var repeats = this.EightBitter.MathDecider.compute("speedWalking", thing);
            var distance = repeats * thing.speed;
            thing.walking = true;
            this.EightBitter.animations.animateCharacterSetDirection(thing, direction);
            this.EightBitter.animations.animateCharacterSetDistanceVelocity(thing, distance);
            if (!thing.cycles || !thing.cycles.walking) {
                this.EightBitter.TimeHandler.addClassCycle(thing, ["walking", "standing"], "walking", repeats / 2);
            }
            if (!thing.walkingFlipping) {
                thing.walkingFlipping = this.EightBitter.TimeHandler.addEventInterval(function () { return _this.EightBitter.animations.animateSwitchFlipOnDirection(thing); }, repeats, Infinity, thing);
            }
            if (thing.sight) {
                thing.sightDetector.nocollide = true;
            }
            this.EightBitter.TimeHandler.addEventInterval(function () { return thing.onWalkingStop.call(_this.EightBitter.animations, thing, onStop); }, repeats, Infinity, thing, onStop);
            if (!thing.bordering[direction]) {
                this.EightBitter.physics.shiftBoth(thing, thing.xvel, thing.yvel);
            }
        };
        /**
         * Starts a roaming Character walking in a random direction, determined
         * by the allowed directions it may use (that aren't blocked).
         *
         * @param thing   A roaming Character.
         */
        Animations.prototype.animateCharacterStartWalkingRandom = function (thing) {
            var totalAllowed = 0;
            var direction;
            var i;
            for (var _i = 0, _a = thing.bordering; _i < _a.length; _i++) {
                var border = _a[_i];
                if (!border) {
                    totalAllowed += 1;
                }
            }
            if (totalAllowed === 0) {
                return;
            }
            direction = this.EightBitter.NumberMaker.randomInt(totalAllowed);
            for (i = 0; i <= direction; i += 1) {
                if (thing.bordering[i]) {
                    direction += 1;
                }
            }
            if (thing.roamingDirections.indexOf(direction) === -1) {
                this.animateCharacterSetDirection(thing, direction);
            }
            else {
                this.animateCharacterStartWalking(thing, direction);
            }
        };
        /**
         * Continues a Character's walking cycle after taking a step. If .turning
         * is provided, the Character turns. If a Player is provided, its keys
         * and .canKeyWalking are respected.
         *
         * @param thing   A Character mid-step.
         */
        Animations.prototype.animateCharacterRepeatWalking = function (thing) {
            if (typeof thing.turning !== "undefined") {
                if (!thing.player || !thing.keys[thing.turning]) {
                    this.animateCharacterSetDirection(thing, thing.turning);
                    thing.turning = undefined;
                    return;
                }
                thing.turning = undefined;
            }
            if (thing.player) {
                thing.canKeyWalking = false;
            }
            this.animateCharacterStartWalking(thing, thing.direction);
        };
        /**
         * Reacts to a Character finishing a step and either stops all walking or moves to
         * the next action in the onStop queue.
         *
         * @param thing   A Character finishing a walking step.
         * @param onStop   A queue of commands as alternating directions and distances.
         * @returns True, unless the next onStop is a Function to return the result of.
         */
        Animations.prototype.animateCharacterStopWalking = function (thing, onStop) {
            thing.xvel = 0;
            thing.yvel = 0;
            thing.walking = false;
            this.EightBitter.graphics.removeClasses(thing, "walking", "standing");
            this.EightBitter.TimeHandler.cancelClassCycle(thing, "walking");
            if (thing.walkingFlipping) {
                this.EightBitter.TimeHandler.cancelEvent(thing.walkingFlipping);
                thing.walkingFlipping = undefined;
            }
            this.EightBitter.animations.animateSnapToGrid(thing);
            if (thing.sight) {
                thing.sightDetector.nocollide = false;
                this.EightBitter.animations.animatePositionSightDetector(thing);
            }
            if (!onStop) {
                return true;
            }
            switch (onStop.constructor) {
                case Number:
                    this.EightBitter.animations.animateCharacterRepeatWalking(thing);
                    break;
                case Array:
                    if (onStop[0] > 0) {
                        onStop[0] = onStop[0] - 1;
                        this.EightBitter.animations.animateCharacterStartWalkingCycle(thing, thing.direction, onStop);
                    }
                    else if (onStop.length === 0) {
                        break;
                    }
                    else {
                        if (onStop[1] instanceof Function) {
                            return onStop[1](thing);
                        }
                        this.EightBitter.animations.animateCharacterStartWalkingCycle(thing, FullScreenPokemon_1.DirectionAliases[onStop[1]], onStop.slice(2));
                    }
                    break;
                case Function:
                    return onStop(thing);
                default:
                    throw new Error("Unknown onStop: " + onStop + ".");
            }
            return true;
        };
        /**
         * Animates a Player to stop walking, which is the same logic for a normal
         * Character as well as MenuGrapher and following checks.
         *
         * @param thing   A Player to stop walking.
         * @param onStop   A queue of commands as alternating directions and distances.
         * @returns True, unless the next onStop is a Function to return the result of.
         */
        Animations.prototype.animatePlayerStopWalking = function (thing, onStop) {
            if (this.EightBitter.battles.checkPlayerGrassBattle(thing)) {
                thing.canKeyWalking = true;
                return false;
            }
            if (thing.following) {
                return this.EightBitter.animations.animateCharacterStopWalking(thing, onStop);
            }
            if (!this.EightBitter.MenuGrapher.getActiveMenu()
                && thing.keys[thing.direction]) {
                this.EightBitter.animations.animateCharacterSetDistanceVelocity(thing, thing.distance);
                return false;
            }
            if (typeof thing.nextDirection !== "undefined") {
                if (thing.nextDirection !== thing.direction && !thing.ledge) {
                    this.EightBitter.physics.setPlayerDirection(thing, thing.nextDirection);
                }
                delete thing.nextDirection;
            }
            else {
                thing.canKeyWalking = true;
            }
            return this.EightBitter.animations.animateCharacterStopWalking(thing, onStop);
        };
        /**
         * Animates a Character to no longer be able to walk.
         *
         * @param thing   A Character that shouldn't be able to walk.
         */
        Animations.prototype.animateCharacterPreventWalking = function (thing) {
            thing.shouldWalk = false;
            thing.xvel = thing.yvel = 0;
            if (thing.player) {
                thing.keys = thing.getKeys();
            }
            this.EightBitter.MapScreener.blockInputs = true;
        };
        /**
         * Sets a Thing facing a particular direction.
         *
         * @param thing   An in-game Thing.
         * @param direction   A direction for thing to face.
         * @todo Add more logic here for better performance.
         */
        Animations.prototype.animateCharacterSetDirection = function (thing, direction) {
            thing.direction = direction;
            if (direction % 2 === 1) {
                this.EightBitter.graphics.unflipHoriz(thing);
            }
            this.EightBitter.graphics.removeClasses(thing, FullScreenPokemon_1.DirectionClasses[Direction.Top], FullScreenPokemon_1.DirectionClasses[Direction.Right], FullScreenPokemon_1.DirectionClasses[Direction.Bottom], FullScreenPokemon_1.DirectionClasses[Direction.Left]);
            this.EightBitter.graphics.addClass(thing, FullScreenPokemon_1.DirectionClasses[direction]);
            if (direction === Direction.Right) {
                this.EightBitter.graphics.flipHoriz(thing);
                this.EightBitter.graphics.addClass(thing, FullScreenPokemon_1.DirectionClasses[Direction.Left]);
            }
        };
        /**
         * Sets a Thing facing a random direction.
         *
         * @param thing   An in-game Thing.
         */
        Animations.prototype.animateCharacterSetDirectionRandom = function (thing) {
            this.EightBitter.animations.animateCharacterSetDirection(thing, this.EightBitter.NumberMaker.randomIntWithin(0, 3));
        };
        /**
         * Flips or unflips a Character if its direction is vertical.
         *
         * @param thing   A Character to flip or unflip.
         */
        Animations.prototype.animateSwitchFlipOnDirection = function (thing) {
            if (thing.direction % 2 !== 0) {
                return;
            }
            if (thing.flipHoriz) {
                this.EightBitter.graphics.unflipHoriz(thing);
            }
            else {
                this.EightBitter.graphics.flipHoriz(thing);
            }
        };
        /**
         * Positions a Character's detector in front of it as its sight.
         *
         * @param thing   A Character that should be able to see.
         */
        Animations.prototype.animatePositionSightDetector = function (thing) {
            var detector = thing.sightDetector;
            var direction = thing.direction;
            if (detector.direction !== direction) {
                if (thing.direction % 2 === 0) {
                    this.EightBitter.physics.setWidth(detector, thing.width);
                    this.EightBitter.physics.setHeight(detector, thing.sight * 8);
                }
                else {
                    this.EightBitter.physics.setWidth(detector, thing.sight * 8);
                    this.EightBitter.physics.setHeight(detector, thing.height);
                }
                detector.direction = direction;
            }
            switch (direction) {
                case 0:
                    this.EightBitter.physics.setBottom(detector, thing.top);
                    this.EightBitter.physics.setMidXObj(detector, thing);
                    break;
                case 1:
                    this.EightBitter.physics.setLeft(detector, thing.right);
                    this.EightBitter.physics.setMidYObj(detector, thing);
                    break;
                case 2:
                    this.EightBitter.physics.setTop(detector, thing.bottom);
                    this.EightBitter.physics.setMidXObj(detector, thing);
                    break;
                case 3:
                    this.EightBitter.physics.setRight(detector, thing.left);
                    this.EightBitter.physics.setMidYObj(detector, thing);
                    break;
                default:
                    throw new Error("Unknown direction: " + direction + ".");
            }
        };
        /**
         * Animates the various logic pieces for finishing a dialog, such as pushes,
         * gifts, options, and battle starting or disabling.
         *
         * @param thing   A Player that's finished talking to other.
         * @param other   A Character that thing has finished talking to.
         */
        Animations.prototype.animateCharacterDialogFinish = function (thing, other) {
            var _this = this;
            var onStop;
            this.EightBitter.ModAttacher.fireEvent("onDialogFinish", other);
            if (other.pushSteps) {
                onStop = other.pushSteps;
            }
            thing.talking = false;
            other.talking = false;
            thing.canKeyWalking = true;
            if (other.directionPreferred) {
                this.animateCharacterSetDirection(other, other.directionPreferred);
            }
            if (other.transport) {
                other.active = true;
                this.activateTransporter(thing, other);
                return;
            }
            if (typeof other.pushDirection !== "undefined") {
                this.animateCharacterStartWalkingCycle(thing, other.pushDirection, onStop);
            }
            if (other.gift) {
                this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                    deleteOnFinish: true
                });
                this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "%%%%%%%PLAYER%%%%%%% got " + other.gift.toUpperCase() + "!", function () { return _this.animateCharacterDialogFinish(thing, other); });
                this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                this.EightBitter.storage.addItemToBag(other.gift);
                other.gift = undefined;
                this.EightBitter.StateHolder.addChange(other.id, "gift", undefined);
                return;
            }
            if (other.dialogNext) {
                other.dialog = other.dialogNext;
                other.dialogNext = undefined;
                this.EightBitter.StateHolder.addChange(other.id, "dialog", other.dialog);
                this.EightBitter.StateHolder.addChange(other.id, "dialogNext", undefined);
            }
            if (other.dialogOptions) {
                this.animateCharacterDialogOptions(thing, other, other.dialogOptions);
            }
            else if (other.trainer && !other.alreadyBattled) {
                this.animateTrainerBattleStart(thing, other);
                other.alreadyBattled = true;
                this.EightBitter.StateHolder.addChange(other.id, "alreadyBattled", true);
            }
            if (other.trainer) {
                other.trainer = false;
                this.EightBitter.StateHolder.addChange(other.id, "trainer", false);
                if (other.sight) {
                    other.sight = undefined;
                    this.EightBitter.StateHolder.addChange(other.id, "sight", undefined);
                }
            }
            if (!other.dialogOptions) {
                this.EightBitter.storage.autoSave();
            }
        };
        /**
         * Displays a yes/no options menu for after a dialog has completed.
         *
         *
         * @param thing   A Player that's finished talking to other.
         * @param other   A Character that thing has finished talking to.
         * @param dialog   The dialog settings that just finished.
         */
        Animations.prototype.animateCharacterDialogOptions = function (thing, other, dialog) {
            var _this = this;
            var options = dialog.options;
            var generateCallback = function (callbackDialog) {
                if (!callbackDialog) {
                    return undefined;
                }
                var callback;
                var words;
                if (callbackDialog.constructor === Object && callbackDialog.options) {
                    words = callbackDialog.words;
                    callback = function () {
                        _this.animateCharacterDialogOptions(thing, other, callbackDialog);
                    };
                }
                else {
                    words = callbackDialog.words || callbackDialog;
                    if (callbackDialog.cutscene) {
                        callback = _this.EightBitter.ScenePlayer.bindCutscene(callbackDialog.cutscene, {
                            player: thing,
                            tirggerer: other
                        });
                    }
                }
                return function () {
                    _this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
                    _this.EightBitter.MenuGrapher.createMenu("GeneralText", {});
                    _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", words, callback);
                    _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                };
            };
            console.warn("DialogOptions assumes type = Yes/No for now...");
            this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                position: {
                    offset: {
                        left: 28
                    }
                }
            });
            this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                options: [
                    {
                        text: "YES",
                        callback: generateCallback(options.Yes)
                    }, {
                        text: "NO",
                        callback: generateCallback(options.No)
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
        };
        /**
         * Starts a Character walking behind another Character. The leader is given a
         * .walkingCommands queue of recent steps that the follower will mimic.
         *
         * @param thing   The following Character.
         * @param other   The leading Character.
         */
        Animations.prototype.animateCharacterFollow = function (thing, other) {
            var _this = this;
            var direction = this.EightBitter.physics.getDirectionBordering(thing, other);
            thing.nocollide = true;
            if (thing.player) {
                thing.allowDirectionAsKeys = true;
                thing.shouldWalk = false;
            }
            thing.following = other;
            other.follower = thing;
            this.EightBitter.storage.addStateHistory(thing, "speed", thing.speed);
            thing.speed = other.speed;
            other.walkingCommands = [];
            this.animateCharacterSetDirection(thing, direction);
            switch (direction) {
                case 0:
                    this.EightBitter.physics.setTop(thing, other.bottom);
                    break;
                case 1:
                    this.EightBitter.physics.setRight(thing, other.left);
                    break;
                case 2:
                    this.EightBitter.physics.setBottom(thing, other.top);
                    break;
                case 3:
                    this.EightBitter.physics.setLeft(thing, other.right);
                    break;
                default:
                    break;
            }
            // Manually start the walking process without giving a 0 onStop,
            // so that it continues smoothly in the walking interval
            this.animateCharacterStartWalking(thing, direction);
            thing.followingLoop = this.EightBitter.TimeHandler.addEventInterval(function () { return _this.animateCharacterFollowContinue(thing, other); }, this.EightBitter.MathDecider.compute("speedWalking", thing), Infinity);
        };
        /**
         * Continuation helper for a following cycle. The next walking command is
         * played, if it exists.
         *
         * @param thing   The following Character.
         * @param other   The leading Character.
         */
        Animations.prototype.animateCharacterFollowContinue = function (thing, other) {
            if (other.walkingCommands.length === 0) {
                return;
            }
            var direction = other.walkingCommands.shift();
            this.animateCharacterStartWalking(thing, direction, 0);
        };
        /**
         * Animates a Character to stop having a follower.
         *
         * @param thing   The leading Character.
         * @returns True, to stop TimeHandlr cycles.
         */
        Animations.prototype.animateCharacterFollowStop = function (thing) {
            var other = thing.following;
            if (!other) {
                return true;
            }
            thing.nocollide = false;
            delete thing.following;
            delete other.follower;
            this.animateCharacterStopWalking(thing);
            this.EightBitter.TimeHandler.cancelEvent(thing.followingLoop);
            return true;
        };
        /**
         * Animates a Character to hop over a ledge.
         *
         * @param thing   A walking Character.
         * @param other   A ledge for thing to hop over.
         */
        Animations.prototype.animateCharacterHopLedge = function (thing, other) {
            var _this = this;
            var shadow = this.EightBitter.things.add("Shadow");
            var speed = 2;
            var dy = -this.EightBitter.unitsize;
            var steps = 14;
            var changed = 0;
            thing.shadow = shadow;
            thing.ledge = other;
            // Center the shadow below the Thing
            this.EightBitter.physics.setMidXObj(shadow, thing);
            this.EightBitter.physics.setBottom(shadow, thing.bottom);
            // Continuously ensure The Thing still moves off the ledge if not walking
            this.EightBitter.TimeHandler.addEventInterval(function () {
                if (thing.walking) {
                    return false;
                }
                _this.EightBitter.animations.animateCharacterSetDistanceVelocity(thing, thing.distance);
                return true;
            }, 1, steps * speed - 1);
            // Keep the shadow below the Thing, and move the Thing's offsetY
            this.EightBitter.TimeHandler.addEventInterval(function () {
                _this.EightBitter.physics.setBottom(shadow, thing.bottom);
                if (changed % speed === 0) {
                    thing.offsetY += dy;
                }
                changed += 1;
            }, 1, steps * speed);
            // Inverse the Thing's offsetY changes halfway through the hop
            this.EightBitter.TimeHandler.addEvent(function () {
                dy *= -1;
            }, speed * (steps / 2) | 0);
            // Delete the shadow after the jump is done
            this.EightBitter.TimeHandler.addEvent(function () {
                delete thing.ledge;
                _this.EightBitter.physics.killNormal(shadow);
                if (!thing.walking) {
                    _this.EightBitter.animations.animateCharacterStopWalking(thing);
                }
                if (thing.player) {
                    thing.canKeyWalking = true;
                    _this.EightBitter.MapScreener.blockInputs = false;
                }
            }, steps * speed);
        };
        /**
         * Activates a Detector to trigger a cutscene and/or routine.
         *
         * @param thing   A Player triggering other.
         * @param other   A Detector triggered by thing.
         */
        Animations.prototype.activateCutsceneTriggerer = function (thing, other) {
            if (!other.alive || thing.collidedTrigger === other) {
                return;
            }
            thing.collidedTrigger = other;
            this.EightBitter.animations.animatePlayerDialogFreeze(thing);
            if (!other.keepAlive) {
                other.alive = false;
                if (other.id.indexOf("Anonymous") !== -1) {
                    console.warn("Deleting anonymous CutsceneTriggerer:", other.id);
                }
                this.EightBitter.StateHolder.addChange(other.id, "alive", false);
                this.EightBitter.physics.killNormal(other);
            }
            if (other.cutscene) {
                this.EightBitter.ScenePlayer.startCutscene(other.cutscene, {
                    player: thing,
                    triggerer: other
                });
            }
            if (other.routine) {
                this.EightBitter.ScenePlayer.playRoutine(other.routine);
            }
        };
        /**
         * Activates a Detector to play an audio theme.
         *
         * @param thing   A Player triggering other.
         * @param other   A Detector triggered by thing.
         */
        Animations.prototype.activateThemePlayer = function (thing, other) {
            if (!thing.player || this.EightBitter.AudioPlayer.getThemeName() === other.theme) {
                return;
            }
            this.EightBitter.AudioPlayer.playTheme(other.theme);
        };
        /**
         * Activates a Detector to play a cutscene, and potentially a dialog.
         *
         * @param thing   A Player triggering other.
         * @param other   A Detector triggered by thing.
         */
        Animations.prototype.activateCutsceneResponder = function (thing, other) {
            if (!thing.player || !other.alive) {
                return;
            }
            if (other.dialog) {
                this.EightBitter.animations.activateMenuTriggerer(thing, other);
                return;
            }
            this.EightBitter.ScenePlayer.startCutscene(other.cutscene, {
                player: thing,
                triggerer: other
            });
        };
        /**
         * Activates a Detector to open a menu, and potentially a dialog.
         *
         * @param thing   A Character triggering other.
         * @param other   A Detector triggered by thing.
         */
        Animations.prototype.activateMenuTriggerer = function (thing, other) {
            var _this = this;
            if (!other.alive || thing.collidedTrigger === other) {
                return;
            }
            var name = other.menu || "GeneralText";
            var dialog = other.dialog;
            thing.collidedTrigger = other;
            this.animateCharacterPreventWalking(thing);
            if (!other.keepAlive) {
                this.EightBitter.physics.killNormal(other);
            }
            if (!this.EightBitter.MenuGrapher.getMenu(name)) {
                this.EightBitter.MenuGrapher.createMenu(name, other.menuAttributes);
            }
            if (dialog) {
                this.EightBitter.MenuGrapher.addMenuDialog(name, dialog, function () {
                    var onStop;
                    if (other.pushSteps) {
                        onStop = other.pushSteps.slice();
                    }
                    _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
                    if (typeof other.pushDirection !== "undefined") {
                        onStop.push(function () {
                            _this.EightBitter.MapScreener.blockInputs = false;
                            delete thing.collidedTrigger;
                        });
                        _this.animateCharacterStartWalkingCycle(thing, other.pushDirection, onStop);
                    }
                    else {
                        _this.EightBitter.MapScreener.blockInputs = false;
                        delete thing.collidedTrigger;
                    }
                });
            }
            this.EightBitter.MenuGrapher.setActiveMenu(name);
        };
        /**
         * Activates a Character's sight detector for when another Character walks
         * into it.
         *
         * @param thing   A Character triggering other.
         * @param other   A sight detector being triggered by thing.
         */
        Animations.prototype.activateSightDetector = function (thing, other) {
            if (other.viewer.talking) {
                return;
            }
            other.viewer.talking = true;
            other.active = false;
            this.EightBitter.MapScreener.blockInputs = true;
            this.EightBitter.ScenePlayer.startCutscene("TrainerSpotted", {
                player: thing,
                sightDetector: other,
                triggerer: other.viewer
            });
        };
        /**
         * Activation callback for level transports (any Thing with a .transport
         * attribute). Depending on the transport, either the map or location are
         * shifted to it.
         *
         * @param thing   A Character attempting to enter other.
         * @param other   A transporter being entered by thing.
         */
        Animations.prototype.activateTransporter = function (thing, other) {
            var _this = this;
            if (!thing.player || !other.active) {
                return;
            }
            if (typeof other.transport === "undefined") {
                throw new Error("No transport given to activateTransporter");
            }
            var transport = other.transport;
            var callback;
            if (transport.constructor === String) {
                callback = function () { return _this.EightBitter.maps.setLocation(transport); };
            }
            else if (typeof transport.map !== "undefined") {
                callback = function () { return _this.EightBitter.maps.setMap(transport.map, transport.location); };
            }
            else if (typeof transport.location !== "undefined") {
                callback = function () { return _this.EightBitter.maps.setLocation(transport.location); };
            }
            else {
                throw new Error("Unknown transport type: '" + transport + "'");
            }
            other.active = false;
            this.EightBitter.animations.animateFadeToColor({
                callback: callback,
                color: "Black"
            });
        };
        /**
         * Activation trigger for a gym statue. If the Player is looking up at it,
         * it speaks the status of the gym leader.
         *
         * @param thing   A Player activating other.
         * @param other   A gym statue being activated by thing.
         */
        Animations.prototype.activateGymStatue = function (thing, other) {
            if (thing.direction !== 0) {
                return;
            }
            var gym = other.gym;
            var leader = other.leader;
            var dialog = [
                gym.toUpperCase()
                    + " \n %%%%%%%POKEMON%%%%%%% GYM \n LEADER: "
                    + leader.toUpperCase(),
                "WINNING TRAINERS: %%%%%%%RIVAL%%%%%%%"
            ];
            if (this.EightBitter.ItemsHolder.getItem("badges")[leader]) {
                dialog[1] += " \n %%%%%%%PLAYER%%%%%%%";
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", dialog);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Calls an HMCharacter's partyActivate Function when the Player activates the HMCharacter.
         *
         * @param player   The Player.
         * @param thing   The Solid to be affected.
         */
        Animations.prototype.activateHMCharacter = function (player, thing) {
            if (thing.requiredBadge && !this.EightBitter.ItemsHolder.getItem("badges")[thing.requiredBadge]) {
                return;
            }
            var partyPokemon = this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            for (var _i = 0, partyPokemon_1 = partyPokemon; _i < partyPokemon_1.length; _i++) {
                var pokemon = partyPokemon_1[_i];
                var moves = pokemon.moves;
                for (var _a = 0, moves_1 = moves; _a < moves_1.length; _a++) {
                    var move = moves_1[_a];
                    if (move.title === thing.moveName) {
                        thing.moveCallback(player, pokemon);
                        return;
                    }
                }
            }
        };
        /**
         * Starts a Character roaming in random directions.
         *
         * @param thing   A Character to start roaming.
         * @returns Whether the time cycle should stop (thing is dead).
         */
        Animations.prototype.activateCharacterRoaming = function (thing) {
            var _this = this;
            if (!thing.alive) {
                return true;
            }
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.animations.activateCharacterRoaming(thing); }, 70 + this.EightBitter.NumberMaker.randomInt(210));
            if (!thing.talking && !this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.animations.animateCharacterStartWalkingRandom(thing);
            }
            return false;
        };
        /**
         * Activates a Spawner by calling its .activate.
         *
         * @param thing   A newly placed Spawner.
         */
        Animations.prototype.activateSpawner = function (thing) {
            thing.activate(thing);
        };
        /**
         * Checks if a WindowDetector is within frame, and activates it if so.
         *
         * @param thing   An in-game WindowDetector.
         */
        Animations.prototype.checkWindowDetector = function (thing) {
            if (thing.bottom < 0
                || thing.left > this.EightBitter.MapScreener.width
                || thing.top > this.EightBitter.MapScreener.height
                || thing.right < 0) {
                return false;
            }
            thing.activate(thing);
            this.EightBitter.physics.killNormal(thing);
            return true;
        };
        /**
         * Activates an AreaSpawner. If it's for a different Area than the current,
         * that area is spawned in the appropriate direction.
         *
         * @param thing   An AreaSpawner to activate.
         */
        Animations.prototype.spawnAreaSpawner = function (thing) {
            var map = this.EightBitter.AreaSpawner.getMap(thing.map);
            var area = map.areas[thing.area];
            if (area === this.EightBitter.AreaSpawner.getArea()) {
                this.EightBitter.physics.killNormal(thing);
                return;
            }
            if (area.spawnedBy
                && area.spawnedBy === this.EightBitter.AreaSpawner.getArea().spawnedBy) {
                this.EightBitter.physics.killNormal(thing);
                return;
            }
            area.spawnedBy = this.EightBitter.AreaSpawner.getArea().spawnedBy;
            this.EightBitter.maps.activateAreaSpawner(thing, area);
        };
        /**
         * Makes sure that Player is facing the correct HMCharacter
         *
         * @param player   The Player.
         * @param pokemon   The Pokemon using the move.
         * @param move   The move being used.
         * @todo Add context for what happens if player is not bordering the correct HMCharacter.
         * @todo Refactor to give borderedThing a .hmActivate property.
         */
        Animations.prototype.partyActivateCheckThing = function (player, pokemon, move) {
            var borderedThing = player.bordering[player.direction];
            if (borderedThing && borderedThing.title.indexOf(move.characterName) !== -1) {
                move.partyActivate(player, pokemon);
            }
        };
        /**
         * Cuts a CuttableTree.
         *
         * @param player   The Player.
         * @param pokemon   The Pokemon using Cut.
         * @todo Add an animation for what happens when the CuttableTree is cut.
         */
        Animations.prototype.partyActivateCut = function (player, pokemon) {
            this.EightBitter.MenuGrapher.deleteAllMenus();
            this.EightBitter.menus.closePauseMenu();
            this.EightBitter.physics.killNormal(player.bordering[player.direction]);
        };
        /**
         * Makes a StrengthBoulder move.
         *
         * @param player   The Player.
         * @param pokemon   The Pokemon using Strength.
         * @todo Verify the exact speed, sound, and distance.
         */
        Animations.prototype.partyActivateStrength = function (player, pokemon) {
            var _this = this;
            var boulder = player.bordering[player.direction];
            this.EightBitter.MenuGrapher.deleteAllMenus();
            this.EightBitter.menus.closePauseMenu();
            if (!this.EightBitter.ThingHitter.checkHitForThings(player, boulder)
                || boulder.bordering[player.direction] !== undefined) {
                return;
            }
            var xvel = 0;
            var yvel = 0;
            switch (player.direction) {
                case 0:
                    yvel = -this.EightBitter.unitsize;
                    break;
                case 1:
                    xvel = this.EightBitter.unitsize;
                    break;
                case 2:
                    yvel = this.EightBitter.unitsize;
                    break;
                case 3:
                    xvel = -this.EightBitter.unitsize;
                    break;
                default:
                    throw new Error("Unknown direction: '" + player.direction + "'.");
            }
            this.EightBitter.TimeHandler.addEventInterval(function () { return _this.EightBitter.physics.shiftBoth(boulder, xvel, yvel); }, 1, 8);
            for (var _i = 0, _a = boulder.bordering; _i < _a.length; _i++) {
                var border = _a[_i];
                border = undefined;
            }
        };
        /**
         * Starts the Player surfing.
         *
         * @param player   The Player.
         * @param pokemon   The Pokemon using Strength.
         * @todo Add the dialogue for when the Player starts surfing.
         */
        Animations.prototype.partyActivateSurf = function (player, pokemon) {
            this.EightBitter.MenuGrapher.deleteAllMenus();
            this.EightBitter.menus.closePauseMenu();
            if (player.cycling) {
                return;
            }
            player.bordering[player.direction] = undefined;
            this.EightBitter.graphics.addClass(player, "surfing");
            this.EightBitter.animations.animateCharacterStartWalking(player, player.direction, [1]);
            player.surfing = true;
        };
        return Animations;
    }(EightBittr.Component));
    FullScreenPokemon_1.Animations = Animations;
    /**
     * Battle functions used by FullScreenPokemon instances.
     */
    var Battles = (function (_super) {
        __extends(Battles, _super);
        function Battles() {
            _super.apply(this, arguments);
        }
        /**
         * Starts a Pokemon battle.
         *
         * @param battleInfo   Settings for the battle.
         */
        Battles.prototype.startBattle = function (battleInfo) {
            var _this = this;
            this.EightBitter.ModAttacher.fireEvent("onBattleStart", battleInfo);
            var animations = battleInfo.animations || [
                // "LineSpiral", "Flash"
                "Flash"
            ];
            var animation = this.EightBitter.NumberMaker.randomArrayMember(animations);
            var player = battleInfo.battlers.player;
            if (!player) {
                battleInfo.battlers.player = player = {};
            }
            player.name = player.name || "%%%%%%%PLAYER%%%%%%%";
            player.sprite = player.sprite || "PlayerBack";
            player.category = player.category || "Trainer";
            player.actors = player.actors || this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            player.hasActors = typeof player.hasActors === "undefined"
                ? true : player.hasActors;
            this.EightBitter.ModAttacher.fireEvent("onBattleReady", battleInfo);
            this.EightBitter.AudioPlayer.playTheme(battleInfo.theme || "Battle Trainer");
            this.EightBitter.cutscenes["cutsceneBattleTransition" + animation]({
                battleInfo: battleInfo,
                callback: function () { return _this.EightBitter.BattleMover.startBattle(battleInfo); }
            });
            this.EightBitter.graphics.moveBattleKeptThingsToText(battleInfo);
        };
        /**
         * Heals a Pokemon back to full health.
         *
         * @param pokemon   An in-game Pokemon to heal.
         */
        Battles.prototype.healPokemon = function (pokemon) {
            var moves = this.EightBitter.MathDecider.getConstant("moves");
            var statisticNames = this.EightBitter.MathDecider.getConstant("statisticNames");
            for (var _i = 0, statisticNames_2 = statisticNames; _i < statisticNames_2.length; _i++) {
                var statisticName = statisticNames_2[_i];
                pokemon[statisticName] = pokemon[statisticName + "Normal"];
            }
            for (var _a = 0, _b = pokemon.moves; _a < _b.length; _a++) {
                var move = _b[_a];
                move.remaining = moves[move.title].PP;
            }
            pokemon.status = "";
        };
        /**
         * Starts grass battle if a Player is in grass, using the doesGrassEncounterHappen
         * equation.
         *
         * @param thing   An in-game Player.
         */
        Battles.prototype.checkPlayerGrassBattle = function (thing) {
            if (!thing.grass || this.EightBitter.MenuGrapher.getActiveMenu()) {
                return false;
            }
            if (!this.EightBitter.ThingHitter.checkHitForThings(thing, thing.grass)) {
                delete thing.grass;
                return false;
            }
            if (!this.EightBitter.MathDecider.compute("doesGrassEncounterHappen", thing.grass)) {
                return false;
            }
            thing.keys = thing.getKeys();
            this.EightBitter.animations.animateGrassBattleStart(thing, thing.grass);
            return true;
        };
        /**
         * Chooses a random wild Pokemon schema from the given ones.
         *
         * @param options   Potential Pokemon schemas to choose from.
         * @returns One of the potential Pokemon schemas at random.
         */
        Battles.prototype.chooseRandomWildPokemon = function (options) {
            var choice = this.EightBitter.NumberMaker.random();
            var sum = 0;
            for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
                var option = options_1[_i];
                sum += option.rate;
                if (sum >= choice) {
                    return option;
                }
            }
        };
        /**
         * Adds Ball and BallEmpty Things to a menu representing inventory Pokemon.
         *
         * @param menu   A menu to add the Things to.
         * @param battler   Information on the Pokemon to add balls for.
         */
        Battles.prototype.addBattleDisplayPokeballs = function (menu, battler, opposite) {
            var text = [];
            var i;
            for (i = 0; i < battler.actors.length; i += 1) {
                text.push(["Ball"]);
            }
            for (; i < 6; i += 1) {
                text.push(["BallEmpty"]);
            }
            if (opposite) {
                text.reverse();
            }
            this.EightBitter.MenuGrapher.addMenuDialog(menu.name, [text]);
        };
        /**
         * Adds a Pokemon's health display to its appropriate menu.
         *
         * @param battlerName   Which battler to add the display for.
         */
        Battles.prototype.addBattleDisplayPokemonHealth = function (battlerName) {
            var battleInfo = this.EightBitter.BattleMover.getBattleInfo();
            var pokemon = battleInfo.battlers[battlerName].selectedActor;
            var menu = [
                "Battle",
                battlerName[0].toUpperCase(),
                battlerName.slice(1),
                "Health"
            ].join("");
            this.EightBitter.MenuGrapher.createMenu(menu);
            this.EightBitter.MenuGrapher.createMenu(menu + "Title");
            this.EightBitter.MenuGrapher.createMenu(menu + "Level");
            this.EightBitter.MenuGrapher.createMenu(menu + "Amount");
            this.setBattleDisplayPokemonHealthBar(battlerName, pokemon.HP, pokemon.HPNormal);
            this.EightBitter.MenuGrapher.addMenuDialog(menu + "Title", [[pokemon.nickname]]);
            this.EightBitter.MenuGrapher.addMenuDialog(menu + "Level", String(pokemon.level));
        };
        /**
         * Adds a health bar to a battle display, with an appropriate width.
         *
         * @param battlerName   Which battler to add the display for, as "player"
         *                      or "opponent".
         * @param hp   How much health the battler's Pokemon currently has.
         * @param hp   The battler's Pokemon's normal maximum health.
         */
        Battles.prototype.setBattleDisplayPokemonHealthBar = function (battlerName, hp, hpNormal) {
            var nameUpper = battlerName[0].toUpperCase() + battlerName.slice(1);
            var menuNumbers = "Battle" + nameUpper + "HealthNumbers";
            var bar = this.EightBitter.utilities.getThingById("HPBarFill" + nameUpper);
            var barWidth = this.EightBitter.MathDecider.compute("widthHealthBar", 25, hp, hpNormal);
            var healthDialog = this.EightBitter.utilities.makeDigit(hp, 3, "\t")
                + "/"
                + this.EightBitter.utilities.makeDigit(hpNormal, 3, "\t");
            if (this.EightBitter.MenuGrapher.getMenu(menuNumbers)) {
                for (var _i = 0, _a = this.EightBitter.MenuGrapher.getMenu(menuNumbers).children; _i < _a.length; _i++) {
                    var menu = _a[_i];
                    this.EightBitter.physics.killNormal(menu);
                }
                this.EightBitter.MenuGrapher.addMenuDialog(menuNumbers, healthDialog);
            }
            this.EightBitter.physics.setWidth(bar, barWidth);
            bar.hidden = barWidth === 0;
        };
        /**
         * Animates a Pokemon's health bar to increase or decrease its width.
         *
         * @param battlerName   Which battler to add the display for, as "player"
         *                      or "opponent".
         * @param hpStart   The battler's Pokemon's starting health.
         * @param hpEnd   The battler's Pokemon's ending health.
         * @param hpNormal   The battler's Pokemon's normal maximum health.
         * @param callback   A callback for when the bar is done resizing.
         */
        Battles.prototype.animateBattleDisplayPokemonHealthBar = function (battlerName, hpStart, hpEnd, hpNormal, callback) {
            var _this = this;
            var direction = hpStart > hpEnd ? -1 : 1;
            var hpNew = Math.round(hpStart + direction);
            this.setBattleDisplayPokemonHealthBar(battlerName, hpNew, hpNormal);
            if (hpNew === hpEnd) {
                if (callback) {
                    callback();
                }
                return;
            }
            this.EightBitter.TimeHandler.addEvent(function () { return _this.animateBattleDisplayPokemonHealthBar(battlerName, hpNew, hpEnd, hpNormal, callback); }, 2);
        };
        /**
         * Opens the in-battle moves menu.
         */
        Battles.prototype.openBattleMovesMenu = function () {
            var _this = this;
            var actorMoves = this.EightBitter.BattleMover.getBattleInfo().battlers.player.selectedActor.moves;
            var moveOptions = [];
            var _loop_1 = function(i) {
                var move = actorMoves[i];
                moveOptions.push({
                    text: move.title.toUpperCase(),
                    remaining: move.remaining,
                    callback: function (title) {
                        _this.EightBitter.BattleMover.playMove(move.title);
                    }
                });
            };
            for (var i = 0; i < actorMoves.length; i += 1) {
                _loop_1(i);
            }
            for (var i = actorMoves.length; i < 4; i += 1) {
                moveOptions.push({
                    text: "-"
                });
            }
            this.EightBitter.MenuGrapher.createMenu("BattleFightList");
            this.EightBitter.MenuGrapher.addMenuList("BattleFightList", {
                "options": moveOptions
            });
            this.EightBitter.MenuGrapher.setActiveMenu("BattleFightList");
        };
        /**
         * Opens the in-battle items menu.
         */
        Battles.prototype.openBattleItemsMenu = function () {
            this.EightBitter.menus.openPokemonMenu({
                position: {
                    horizontal: "right",
                    vertical: "bottom",
                    offset: {
                        left: 0
                    }
                },
                size: {
                    height: 44
                },
                container: "Battle",
                backMenu: "BattleOptions"
            });
        };
        /**
         * Opens the in-battle Pokemon menu.
         */
        Battles.prototype.openBattlePokemonMenu = function () {
            this.EightBitter.menus.openItemsMenu({
                backMenu: "BattleOptions",
                container: "Battle"
            });
        };
        /**
         * Starts the dialog to exit a battle.
         */
        Battles.prototype.startBattleExit = function () {
            var _this = this;
            if (this.EightBitter.BattleMover.getBattleInfo().battlers.opponent.category === "Trainer") {
                this.EightBitter.ScenePlayer.playRoutine("BattleExitFail");
                return;
            }
            this.EightBitter.MenuGrapher.deleteMenu("BattleOptions");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", this.EightBitter.BattleMover.getBattleInfo().exitDialog
                || this.EightBitter.BattleMover.getDefaults().exitDialog || "", function () {
                _this.EightBitter.BattleMover.closeBattle();
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        return Battles;
    }(EightBittr.Component));
    FullScreenPokemon_1.Battles = Battles;
    /**
     * Collision functions used by FullScreenPokemon instances.
     */
    var Collisions = (function (_super) {
        __extends(Collisions, _super);
        function Collisions() {
            _super.apply(this, arguments);
        }
        /**
         * Function generator for the generic canThingCollide checker. This is used
         * repeatedly by ThingHittr to generate separately optimized Functions for
         * different Thing types.
         *
         * @returns A Function that generates a canThingCollide checker.
         */
        Collisions.prototype.generateCanThingCollide = function () {
            /**
             * Generic checker for canCollide. This just returns if the Thing is alive.
             *
             * @param thing
             * @returns Whether the thing can collide.
             */
            return function (thing) { return thing.alive; };
        };
        /**
         * Function generator for the generic isCharacterTouchingCharacter checker.
         * This is used repeatedly by ThingHittr to generate separately optimized
         * Functions for different Thing types.
         *
         * @returns A Function that generates isCharacterTouchingCharacter.
         */
        Collisions.prototype.generateIsCharacterTouchingCharacter = function () {
            /**
             * Generic checker for whether two characters are touching each other.
             * This checks to see if either has the nocollide flag, or if they're
             * overlapping, respecting tolerances.
             *
             * @param thing
             * @param other
             * @returns Whether thing is touching other.
             */
            return function (thing, other) { return (!thing.nocollide && !other.nocollide
                && thing.right >= (other.left + other.tolLeft)
                && thing.left <= (other.right - other.tolRight)
                && thing.bottom >= (other.top + other.tolTop)
                && thing.top <= (other.bottom - other.tolBottom)); };
        };
        /**
         * Function generator for the generic isCharacterTouchingSolid checker. This
         * is used repeatedly by ThingHittr to generate separately optimized
         * Functions for different Thing types.
         *
         * @returns A Function that generates isCharacterTouchingSolid.
         */
        Collisions.prototype.generateIsCharacterTouchingSolid = function () {
            /**
             * Generic checker for whether a character is touching a solid. The
             * hidden, collideHidden, and nocollidesolid flags are most relevant.
             *
             * @param thing
             * @param other
             * @returns Whether thing is touching other.
             */
            return function (thing, other) { return (!thing.nocollide && !other.nocollide
                && thing.right >= (other.left + other.tolLeft)
                && thing.left <= (other.right - other.tolRight)
                && thing.bottom >= (other.top + other.tolTop)
                && thing.top <= (other.bottom - other.tolBottom)); };
        };
        /**
         * Function generator for the generic hitCharacterThing callback. This is
         * used repeatedly by ThingHittr to generate separately optimized Functions
         * for different Thing types.
         *
         * @returns A Function that generates hitCharacterThing.
         */
        Collisions.prototype.generateHitCharacterThing = function () {
            var _this = this;
            /**
             * Generic callback for when a Character touches a Thing. Other may have a
             * .collide to override with, but normally this just sets thing's position.
             *
             * @param thing
             * @param other
             * @returns Whether thing is hitting other.
             */
            return function (thing, other) {
                // If either Thing is the player, it should be the first
                if (other.player && !thing.player) {
                    _a = [other, thing], thing = _a[0], other = _a[1];
                }
                // The other's collide may return true to cancel overlapping checks
                if (other.collide && other.collide(thing, other)) {
                    return;
                }
                // Both the thing and other should know they're bordering each other
                // If other is a large solid, this will be irreleveant, so it's ok
                // that multiple borderings will be replaced by the most recent
                switch (_this.EightBitter.physics.getDirectionBordering(thing, other)) {
                    case Direction.Top:
                        if (thing.left !== other.right - other.tolRight && thing.right !== other.left + other.tolLeft) {
                            _this.setThingBordering(thing, other, Direction.Top);
                            _this.setThingBordering(other, thing, Direction.Bottom);
                            _this.EightBitter.physics.setTop(thing, other.bottom - other.tolBottom);
                        }
                        break;
                    case Direction.Right:
                        if (thing.top !== other.bottom - other.tolBottom && thing.bottom !== other.top + other.tolTop) {
                            _this.setThingBordering(thing, other, Direction.Right);
                            _this.setThingBordering(other, thing, Direction.Left);
                            _this.EightBitter.physics.setRight(thing, other.left + other.tolLeft);
                        }
                        break;
                    case Direction.Bottom:
                        if (thing.left !== other.right - other.tolRight && thing.right !== other.left + other.tolLeft) {
                            _this.setThingBordering(thing, other, Direction.Bottom);
                            _this.setThingBordering(other, thing, Direction.Top);
                            _this.EightBitter.physics.setBottom(thing, other.top + other.tolTop);
                        }
                        break;
                    case Direction.Left:
                        if (thing.top !== other.bottom - other.tolBottom && thing.bottom !== other.top + other.tolTop) {
                            _this.setThingBordering(thing, other, Direction.Left);
                            _this.setThingBordering(other, thing, Direction.Right);
                            _this.EightBitter.physics.setLeft(thing, other.right - other.tolRight);
                        }
                        break;
                    default:
                        break;
                }
                var _a;
            };
        };
        /**
         * Marks other as being a border of thing in the given direction, respecting borderPrimary.
         *
         * @param thing   A Thing whose borders are being checked.
         * @param other   A new border for thing.
         * @param direction   The direction border being changed.
         */
        Collisions.prototype.setThingBordering = function (thing, other, direction) {
            if (thing.bordering[direction] && thing.bordering[direction].borderPrimary && !other.borderPrimary) {
                return;
            }
            thing.bordering[direction] = other;
        };
        /**
         * Collision callback for a Character and a CollisionDetector. Only Players may
         * trigger the detector, which has to be active to do anything.
         *
         * @param thing   A Character triggering other.
         * @param other   A Detector triggered by thing.
         * @returns Whether to override normal positioning logic in hitCharacterThing.
         */
        Collisions.prototype.collideCollisionDetector = function (thing, other) {
            if (!thing.player) {
                return false;
            }
            if (other.active) {
                if (!other.requireOverlap || this.EightBitter.physics.isThingWithinOther(thing, other)) {
                    if (typeof other.requireDirection !== "undefined"
                        && !thing.keys[other.requireDirection]
                        && !thing.allowDirectionAsKeys
                        && thing.direction !== other.requireDirection) {
                        return false;
                    }
                    if (other.singleUse) {
                        other.active = false;
                    }
                    other.activate.call(this.EightBitter.animations, thing, other);
                }
                return true;
            }
            // If the thing is moving towards the triggerer, it's now active
            if (thing.direction === this.EightBitter.physics.getDirectionBordering(thing, other)) {
                other.active = true;
                return true;
            }
        };
        /**
         * Collision callback for a Player and a dialog-containing Character. The
         * dialog is started if it exists, as with a cutscene from other.
         *
         * @param thing   A Player triggering other.
         * @param other   A Character with dialog triggered by thing.
         */
        Collisions.prototype.collideCharacterDialog = function (thing, other) {
            var _this = this;
            var dialog = other.dialog;
            var direction;
            if (other.cutscene) {
                this.EightBitter.ScenePlayer.startCutscene(other.cutscene, {
                    thing: thing,
                    triggerer: other
                });
            }
            if (!dialog) {
                return;
            }
            direction = this.EightBitter.physics.getDirectionBetween(other, thing);
            if (other.dialogDirections) {
                dialog = dialog[direction];
                if (!dialog) {
                    return;
                }
            }
            thing.talking = true;
            other.talking = true;
            thing.canKeyWalking = false;
            if (!this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                    deleteOnFinish: !other.dialogOptions
                });
                this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", dialog, function () { return _this.EightBitter.animations.animateCharacterDialogFinish(thing, other); });
            }
            if (other.switchDirectionOnDialog) {
                this.EightBitter.animations.animateCharacterSetDirection(other, direction);
            }
        };
        /**
         * Collision callback for a Player and a Pokeball it's interacting with.
         *
         * @param thing   A Player interacting with other.
         * @param other   A Pokeball being interacted with by thing.
         */
        Collisions.prototype.collidePokeball = function (thing, other) {
            var _this = this;
            switch (other.action) {
                case "item":
                    this.EightBitter.MenuGrapher.createMenu("GeneralText");
                    this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                        "%%%%%%%PLAYER%%%%%%% found " + other.item + "!"
                    ], function () {
                        _this.EightBitter.MenuGrapher.deleteActiveMenu();
                        _this.EightBitter.physics.killNormal(other);
                        _this.EightBitter.StateHolder.addChange(other.id, "alive", false);
                    });
                    this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                    this.EightBitter.storage.addItemToBag(other.item, other.amount);
                    break;
                case "cutscene":
                    this.EightBitter.ScenePlayer.startCutscene(other.cutscene, {
                        player: thing,
                        triggerer: other
                    });
                    if (other.routine) {
                        this.EightBitter.ScenePlayer.playRoutine(other.routine);
                    }
                    break;
                case "pokedex":
                    this.EightBitter.menus.openPokedexListing(other.pokemon);
                    break;
                case "dialog":
                    this.EightBitter.MenuGrapher.createMenu("GeneralText");
                    this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", other.dialog);
                    this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                    break;
                case "yes/no":
                    this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                        killOnB: ["GeneralText"]
                    });
                    this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                        options: [
                            {
                                text: "YES",
                                callback: function () { return console.log("What do, yes?"); }
                            }, {
                                text: "NO",
                                callback: function () { return console.log("What do, no?"); }
                            }]
                    });
                    this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
                    break;
                default:
                    throw new Error("Unknown Pokeball action: " + other.action + ".");
            }
        };
        /**
         * Marks a Character as being visually within grass.
         *
         * @param thing   A Character within grass.
         * @param other   The specific Grass that thing is within.
         */
        Collisions.prototype.collideCharacterGrass = function (thing, other) {
            if (thing.grass || !this.EightBitter.physics.isThingWithinGrass(thing, other)) {
                return true;
            }
            thing.grass = other;
            this.EightBitter.storage.addStateHistory(thing, "height", thing.height);
            // Todo: Find a better way than manually setting canvas height?
            thing.canvas.height = thing.heightGrass * this.EightBitter.unitsize;
            this.EightBitter.PixelDrawer.setThingSprite(thing);
            thing.shadow = this.EightBitter.ObjectMaker.make(thing.title, {
                nocollide: true,
                id: thing.id + " shadow"
            });
            if (thing.shadow.className !== thing.className) {
                this.EightBitter.graphics.setClass(thing.shadow, thing.className);
            }
            this.EightBitter.things.add(thing.shadow, thing.left, thing.top);
            // Todo: is the arrayToEnd call necessary?
            this.EightBitter.GroupHolder.switchMemberGroup(thing.shadow, thing.shadow.groupType, "Terrain");
            this.EightBitter.utilities.arrayToEnd(thing.shadow, this.EightBitter.GroupHolder.getGroup("Terrain"));
            return true;
        };
        /**
         * Collision callback for a Character and a Ledge. If possible, the Character
         * is animated to start hopping over the Ledge.
         *
         * @param thing   A Character walking to other.
         * @param other   A Ledge walked to by thing.
         */
        Collisions.prototype.collideLedge = function (thing, other) {
            if (thing.ledge || !thing.walking) {
                return true;
            }
            if (thing.direction !== other.direction) {
                return false;
            }
            if (thing.direction % 2 === 0) {
                if (thing.left === other.right || thing.right === other.left) {
                    return true;
                }
            }
            else {
                if (thing.top === other.bottom || thing.bottom === other.top) {
                    return true;
                }
            }
            if (thing.player) {
                thing.canKeyWalking = false;
                this.EightBitter.MapScreener.blockInputs = true;
            }
            this.EightBitter.animations.animateCharacterHopLedge(thing, other);
            return true;
        };
        /**
         * Collision callback for a Character and a WaterEdge. If possible, the Character
         * is animated to move onto land.
         *
         * @param thing   A Character walking to other.
         * @param other   A Ledge walked to by thing.
         */
        Collisions.prototype.collideWaterEdge = function (thing, other) {
            var edge = other;
            if (!thing.surfing || edge.exitDirection !== thing.direction) {
                return false;
            }
            this.EightBitter.animations.animateCharacterStartWalking(thing, thing.direction, [2]);
            thing.surfing = false;
            this.EightBitter.graphics.removeClass(thing, "surfing");
            return true;
        };
        return Collisions;
    }(EightBittr.Component));
    FullScreenPokemon_1.Collisions = Collisions;
    /**
     * What direction(s) the screen may scroll from player movement.
     */
    (function (Scrollability) {
        /**
         * The screen may not scroll in either direction.
         */
        Scrollability[Scrollability["None"] = 0] = "None";
        /**
         * The screen may scroll vertically.
         */
        Scrollability[Scrollability["Vertical"] = 1] = "Vertical";
        /**
         * The screen may scroll horizontally.
         */
        Scrollability[Scrollability["Horizontal"] = 2] = "Horizontal";
        /**
         * The screen may scroll vertically and horizontally.
         */
        Scrollability[Scrollability["Both"] = 3] = "Both";
    })(FullScreenPokemon_1.Scrollability || (FullScreenPokemon_1.Scrollability = {}));
    var Scrollability = FullScreenPokemon_1.Scrollability;
    ;
    /**
     * How much to expand each pixel from raw sizing measurements to in-game.
     */
    FullScreenPokemon_1.Unitsize = 4;
    /**
     * Static scale of 2, to exand to two pixels per one game pixel.
     */
    FullScreenPokemon_1.Scale = 2;
    /**
     * Quickly tapping direction keys means to look in a direction, not walk.
     */
    FullScreenPokemon_1.InputTimeTolerance = 4;
    /**
     * The allowed uppercase keys to be shown in a keyboard.
     */
    FullScreenPokemon_1.KeysUppercase = [
        "A", "J", "S", "Times", "-",
        "B", "K", "T", "(", "?",
        "C", "L", "U", ")", "!",
        "D", "M", "V", ":", "MaleSymbol",
        "E", "N", "W", ";", "FemaleSymbol",
        "F", "O", "X", "[", "/",
        "G", "P", "Y", "]", ".",
        "H", "Q", "Z", "Poke", ",",
        "I", "R", " ", "Mon", "ED"
    ];
    /**
     * The allowed lowercase keys to be shown in a keyboard.
     */
    FullScreenPokemon_1.KeysLowercase = [
        "a", "j", "s", "Times", "-",
        "b", "k", "t", "(", "?",
        "c", "l", "u", ")", "!",
        "d", "m", "v", ":", "MaleSymbol",
        "e", "n", "w", ";", "FemaleSymbol",
        "f", "o", "x", "[", "/",
        "g", "p", "y", "]", ".",
        "h", "q", "z", "Poke", ",",
        "i", "r", " ", "Mon", "ED"
    ];
    /**
     * Cardinal directions a Thing may face in-game.
     */
    (function (Direction) {
        Direction[Direction["Top"] = 0] = "Top";
        Direction[Direction["Right"] = 1] = "Right";
        Direction[Direction["Bottom"] = 2] = "Bottom";
        Direction[Direction["Left"] = 3] = "Left";
    })(FullScreenPokemon_1.Direction || (FullScreenPokemon_1.Direction = {}));
    var Direction = FullScreenPokemon_1.Direction;
    ;
    /**
     * Whether a Pokemon is unknown, has been caught, or has been seen.
     */
    (function (PokedexListingStatus) {
        PokedexListingStatus[PokedexListingStatus["Unknown"] = 0] = "Unknown";
        PokedexListingStatus[PokedexListingStatus["Caught"] = 1] = "Caught";
        PokedexListingStatus[PokedexListingStatus["Seen"] = 2] = "Seen";
    })(FullScreenPokemon_1.PokedexListingStatus || (FullScreenPokemon_1.PokedexListingStatus = {}));
    var PokedexListingStatus = FullScreenPokemon_1.PokedexListingStatus;
    ;
    /**
     * Direction names, mapped to their opposites.
     */
    FullScreenPokemon_1.DirectionOpposites = {
        Top: "Bottom",
        top: "bottom",
        Right: "Left",
        right: "left",
        Bottom: "Top",
        bottom: "top",
        Left: "Right",
        left: "right"
    };
    /**
     * Directions, keyed by their string aliases.
     */
    FullScreenPokemon_1.DirectionAliases = {
        top: Direction.Top,
        right: Direction.Right,
        bottom: Direction.Bottom,
        left: Direction.Left
    };
    /**
     * String aliases of directions, keyed by the direction.
     */
    FullScreenPokemon_1.DirectionsToAliases = ["top", "right", "bottom", "left"];
    /**
     * Classes to add to Things facing particular directions.
     */
    FullScreenPokemon_1.DirectionClasses = ["up", "right", "down", "left"];
    /**
     * Direction aliases for AreaSpawner activations.
     */
    FullScreenPokemon_1.DirectionSpawns = ["yDec", "xInc", "yInc", "xInc"];
    /**
     * Cutscene functions used by FullScreenPokemon instances.
     */
    var Cutscenes = (function (_super) {
        __extends(Cutscenes, _super);
        function Cutscenes() {
            _super.apply(this, arguments);
        }
        /**
         * Cutscene for starting a battle with a spiral.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleTransitionLineSpiral = function (settings) {
            var _this = this;
            var unitsize = this.EightBitter.unitsize;
            var divisor = settings.divisor || 15;
            var screenWidth = this.EightBitter.MapScreener.width;
            var screenHeight = this.EightBitter.MapScreener.height;
            var width = Math.ceil(screenWidth / divisor);
            var height = Math.ceil(screenHeight / divisor);
            var things = [];
            var numTimes = 0;
            var direction = 2;
            var thing;
            var difference;
            var destination;
            var addLineSpiralThing = function () {
                if (numTimes >= ((divisor / 2) | 0)) {
                    if (settings.callback) {
                        settings.callback();
                        for (var _i = 0, things_5 = things; _i < things_5.length; _i++) {
                            var other = things_5[_i];
                            _this.EightBitter.physics.killNormal(other);
                        }
                    }
                    return;
                }
                switch (thing.direction) {
                    case Direction.Top:
                        thing = _this.EightBitter.ObjectMaker.make("BlackSquare", {
                            width: width / unitsize,
                            height: screenHeight / unitsize
                        });
                        _this.EightBitter.things.add(thing, screenWidth - ((numTimes + 1) * width), screenHeight - ((numTimes + 1) * divisor));
                        difference = -height;
                        destination = numTimes * height;
                        break;
                    case Direction.Right:
                        thing = _this.EightBitter.ObjectMaker.make("BlackSquare", {
                            width: screenWidth / unitsize,
                            height: height / unitsize
                        });
                        _this.EightBitter.things.add(thing, numTimes * divisor - screenWidth, screenHeight - (numTimes + 1) * height);
                        difference = width;
                        destination = screenWidth - numTimes * width;
                        break;
                    case Direction.Bottom:
                        thing = _this.EightBitter.ObjectMaker.make("BlackSquare", {
                            width: width / unitsize,
                            height: screenHeight / unitsize
                        });
                        _this.EightBitter.things.add(thing, numTimes * width, numTimes * height - screenHeight);
                        difference = height;
                        destination = screenHeight - numTimes * height;
                        break;
                    case Direction.Left:
                        thing = _this.EightBitter.ObjectMaker.make("BlackSquare", {
                            width: screenWidth / unitsize,
                            height: height / unitsize
                        });
                        _this.EightBitter.things.add(thing, screenWidth - numTimes * divisor, numTimes * height);
                        difference = -width;
                        destination = numTimes * width;
                        break;
                    default:
                        throw new Error("Unknown direction: '" + direction + "'.");
                }
                things.push(thing);
                _this.EightBitter.graphics.moveBattleKeptThingsToText(settings.battleInfo);
                _this.EightBitter.TimeHandler.addEventInterval(function () {
                    if (direction % 2 === 1) {
                        _this.EightBitter.physics.shiftHoriz(thing, difference);
                    }
                    else {
                        _this.EightBitter.physics.shiftVert(thing, difference);
                    }
                    if (direction === Direction.Right || direction === Direction.Bottom) {
                        if (thing[FullScreenPokemon_1.DirectionAliases[direction]] < destination) {
                            return false;
                        }
                    }
                    else {
                        if (thing[FullScreenPokemon_1.DirectionAliases[direction]] > destination) {
                            return false;
                        }
                    }
                    direction = (direction + 3) % 4;
                    if (direction === 2) {
                        numTimes += 1;
                    }
                    addLineSpiralThing();
                    _this.EightBitter.graphics.moveBattleKeptThingsToText(settings.battleInfo);
                    return true;
                }, 1, Infinity);
            };
            addLineSpiralThing();
        };
        /**
         * Cutscene for starting a battle with a series of flashes.
         *
         * @param settings   Settings used for the cutscene.
         * @remarks Three [black, white] flashes, then the spiral.
         */
        Cutscenes.prototype.cutsceneBattleTransitionFlash = function (settings) {
            var _this = this;
            var flashes = settings.flashes || 6;
            var flashColors = settings.flashColors || ["Black", "White"];
            var callback = settings.callback;
            var change = settings.change || .33;
            var speed = settings.speed || 1;
            var completed = 0;
            var color;
            var repeater = function () {
                if (completed >= flashes) {
                    if (callback) {
                        callback();
                    }
                    return;
                }
                color = flashColors[completed % flashColors.length];
                completed += 1;
                _this.EightBitter.animations.animateFadeToColor({
                    color: color,
                    change: change,
                    speed: speed,
                    callback: function () {
                        _this.EightBitter.animations.animateFadeFromColor({
                            color: color,
                            change: change,
                            speed: speed,
                            callback: repeater
                        });
                    }
                });
                _this.EightBitter.graphics.moveBattleKeptThingsToText(settings.battleInfo);
            };
            repeater();
        };
        /**
         * Cutscene for starting a battle with a twist.
         *
         * @param settings   Settings used for the cutscene.
         *
         * I think the way to do this would be to treat each quarter of the screen
         * as one section. Divide each section into 10 parts. On each interval
         * increase the maximum the parts can be, while each part is a fraction of
         * the maximum, rounded to a large amount to appear pixellated (perhaps,
         * unitsize * 32?).
         */
        Cutscenes.prototype.cutsceneBattleTransitionTwist = function (settings) {
            throw new Error("Not yet implemented.");
        };
        /**
         * Cutscene for starting a battle with a flash, then a twist..
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleTransitionFlashTwist = function (settings) {
            var _this = this;
            this.cutsceneBattleTransitionFlash({
                callback: function () { return _this.cutsceneBattleTransitionTwist(settings); }
            });
        };
        /**
         * Cutscene for starting a battle. Players slide in, then the openingText
         * cutscene is called.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattleEntrance = function (settings) {
            var things = settings.things;
            var battleInfo = settings.battleInfo;
            var player = things.player;
            var opponent = things.opponent;
            var menu = this.EightBitter.MenuGrapher.getMenu("BattleDisplayInitial");
            var playerX;
            var opponentX;
            var playerGoal;
            var opponentGoal;
            var timeout = 70;
            battleInfo.battlers.player.selectedIndex = 0;
            battleInfo.battlers.player.selectedActor = battleInfo.battlers.player.actors[0];
            battleInfo.battlers.opponent.selectedIndex = 0;
            battleInfo.battlers.opponent.selectedActor = battleInfo.battlers.opponent.actors[0];
            player.opacity = 0;
            opponent.opacity = 0;
            this.EightBitter.physics.setLeft(player, menu.right + player.width * this.EightBitter.unitsize);
            this.EightBitter.physics.setRight(opponent, menu.left);
            this.EightBitter.physics.setTop(opponent, menu.top);
            // They should be visible halfway through (2 * (1 / timeout))
            this.EightBitter.animations.animateFadeAttribute(player, "opacity", 2 / timeout, 1, 1);
            this.EightBitter.animations.animateFadeAttribute(opponent, "opacity", 2 / timeout, 1, 1);
            playerX = this.EightBitter.physics.getMidX(player);
            opponentX = this.EightBitter.physics.getMidX(opponent);
            playerGoal = menu.left + player.width * this.EightBitter.unitsize / 2;
            opponentGoal = menu.right - opponent.width * this.EightBitter.unitsize / 2;
            this.EightBitter.animations.animateSlideHorizontal(player, (playerGoal - playerX) / timeout, playerGoal, 1);
            this.EightBitter.animations.animateSlideHorizontal(opponent, (opponentGoal - opponentX) / timeout, opponentGoal, 1);
            this.EightBitter.storage.addPokemonToPokedex(battleInfo.battlers.opponent.actors[0].title, PokedexListingStatus.Seen);
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine("OpeningText"), timeout);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the opening text and base menus in a battle. Afer this,
         * the OpponentIntro or PlayerIntro cutscene is triggered.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattleOpeningText = function (settings) {
            var _this = this;
            var battleInfo = settings.battleInfo;
            var textStart = battleInfo.textStart;
            var nextRoutine;
            var callback;
            if (settings.battleInfo.battlers.opponent.hasActors) {
                nextRoutine = "OpponentIntro";
            }
            else {
                nextRoutine = "PlayerIntro";
            }
            if (battleInfo.automaticMenus) {
                callback = function () {
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.ScenePlayer.playRoutine(nextRoutine); }, 70);
                };
            }
            else {
                callback = this.EightBitter.ScenePlayer.bindRoutine(nextRoutine);
            }
            this.EightBitter.MenuGrapher.createMenu("BattlePlayerHealth");
            this.EightBitter.battles.addBattleDisplayPokeballs(this.EightBitter.MenuGrapher.getMenu("BattlePlayerHealth"), battleInfo.battlers.player);
            if (battleInfo.battlers.opponent.hasActors) {
                this.EightBitter.MenuGrapher.createMenu("BattleOpponentHealth");
                this.EightBitter.battles.addBattleDisplayPokeballs(this.EightBitter.MenuGrapher.getMenu("BattleOpponentHealth"), battleInfo.battlers.player, true);
            }
            else {
                this.EightBitter.battles.addBattleDisplayPokemonHealth("opponent");
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: battleInfo.automaticMenus
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    textStart[0], battleInfo.battlers.opponent.name, textStart[1]
                ]
            ], callback);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for an enemy's intro in a battle. They enter, and either send
         * out a Pokemon or let the player intro.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattleOpponentIntro = function (settings) {
            var _this = this;
            var things = settings.things;
            var opponent = things.opponent;
            var menu = this.EightBitter.MenuGrapher.getMenu("GeneralText");
            var opponentX = this.EightBitter.physics.getMidX(opponent);
            var opponentGoal = menu.right + opponent.width * this.EightBitter.unitsize / 2;
            var battleInfo = settings.battleInfo;
            var callback = battleInfo.battlers.opponent.hasActors
                ? "OpponentSendOut"
                : "PlayerIntro";
            var timeout = 49;
            this.EightBitter.animations.animateSlideHorizontal(opponent, (opponentGoal - opponentX) / timeout, opponentGoal, 1);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(opponent, "opacity", -2 / timeout, 0, 1);
            }, (timeout / 2) | 0);
            this.EightBitter.MenuGrapher.deleteMenu("BattleOpponentHealth");
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    battleInfo.textOpponentSendOut[0],
                    battleInfo.battlers.opponent.name,
                    battleInfo.textOpponentSendOut[1],
                    battleInfo.battlers.opponent.actors[0].nickname,
                    battleInfo.textOpponentSendOut[2]
                ]
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine(callback, {
                nextRoutine: "PlayerIntro"
            }), timeout);
        };
        /**
         * Cutscene for a player's intro into battle. Afterwards, the ShowPlayerMenu
         * cutscene is triggered.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattlePlayerIntro = function (settings) {
            var _this = this;
            var things = settings.things;
            var player = things.player;
            var menu = this.EightBitter.MenuGrapher.getMenu("GeneralText");
            var playerX = this.EightBitter.physics.getMidX(player);
            var playerGoal = menu.left - player.width * this.EightBitter.unitsize / 2;
            var battleInfo = settings.battleInfo;
            var timeout = 24;
            this.EightBitter.MenuGrapher.deleteMenu("BattlePlayerHealth");
            if (!battleInfo.battlers.player.hasActors) {
                this.EightBitter.ScenePlayer.playRoutine("ShowPlayerMenu");
                return;
            }
            this.EightBitter.animations.animateSlideHorizontal(player, (playerGoal - playerX) / timeout, playerGoal, 1);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(player, "opacity", -2 / timeout, 0, 1);
            }, (timeout / 2) | 0);
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    battleInfo.textPlayerSendOut[0],
                    battleInfo.battlers.player.actors[0].nickname,
                    battleInfo.textPlayerSendOut[1]
                ]
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine("PlayerSendOut", {
                nextRoutine: "ShowPlayerMenu"
            }), timeout);
        };
        /**
         * Cutscene for showing the player menu. The user may now interact with
         * the menu for controlling their side of the battle.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattleShowPlayerMenu = function (settings) {
            this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.BattleMover.showPlayerMenu();
            if (settings.battleInfo.onShowPlayerMenu) {
                settings.battleInfo.onShowPlayerMenu();
            }
        };
        /**
         * Cutscene for the opponent starting to send out a Pokemon. A smoke effect
         * plays, then the OpponentSendOutAppear cutscene triggers.
         *
         * @param settings   Settings used for the cutscene
         * @param args   Settings to pass to the OpponentSendOut cutscene.
         */
        Cutscenes.prototype.cutsceneBattleOpponentSendOut = function (settings, args) {
            var menu = settings.things.menu;
            var left = menu.right - this.EightBitter.unitsize * 8;
            var top = menu.top + this.EightBitter.unitsize * 32;
            console.warn("Should reset *Normal statistics for opponent Pokemon.");
            settings.opponentLeft = left;
            settings.opponentTop = top;
            this.EightBitter.MenuGrapher.setActiveMenu(undefined);
            this.EightBitter.animations.animateSmokeSmall(left, top, this.EightBitter.ScenePlayer.bindRoutine("OpponentSendOutAppear", args));
        };
        /**
         * Cutscene for the opponent's Pokemon appearing. The .nextRoutine from args
         * is played.
         *
         * @param settings   Settings used for the cutscene
         * @param args   Settings to pass to the next routine.
         */
        Cutscenes.prototype.cutsceneBattleOpponentSendOutAppear = function (settings, args) {
            var opponentInfo = settings.battleInfo.battlers.opponent;
            var pokemonInfo = opponentInfo.actors[opponentInfo.selectedIndex];
            var pokemon = this.EightBitter.BattleMover.setThing("opponent", pokemonInfo.title.join("") + "Front");
            console.log("Should make the zoom-in animation for appearing Pokemon...", pokemon);
            this.EightBitter.battles.addBattleDisplayPokemonHealth("opponent");
            this.EightBitter.storage.addPokemonToPokedex(pokemonInfo.title, PokedexListingStatus.Seen);
            if (args) {
                this.EightBitter.ScenePlayer.playRoutine(args.nextRoutine);
            }
        };
        /**
         * Cutscene for the player starting to send out a Pokemon. A smoke effect
         * plays, then the PlayerSendOutAppear cutscene triggers.
         *
         * @param settings   Settings used for the cutscene
         * @param args   Settings to pass to the PlayerSendOut cutscene.
         */
        Cutscenes.prototype.cutsceneBattlePlayerSendOut = function (settings, args) {
            var menu = settings.things.menu;
            var left = menu.left + this.EightBitter.unitsize * 8;
            var top = menu.bottom - this.EightBitter.unitsize * 8;
            console.warn("Should reset *Normal statistics for player Pokemon.");
            settings.playerLeft = left;
            settings.playerTop = top;
            this.EightBitter.MenuGrapher.setActiveMenu(undefined);
            this.EightBitter.animations.animateSmokeSmall(left, top, this.EightBitter.ScenePlayer.bindRoutine("PlayerSendOutAppear", args));
        };
        /**
         * Cutscene for the player's Pokemon appearing. The .nextRoutine from args
         * is played.
         *
         * @param settings   Settings used for the cutscene
         * @param args   Settings to pass to the next routine.
         */
        Cutscenes.prototype.cutsceneBattlePlayerSendOutAppear = function (settings, args) {
            var playerInfo = settings.battleInfo.battlers.player;
            var pokemonInfo = playerInfo.selectedActor;
            var pokemon = this.EightBitter.BattleMover.setThing("player", pokemonInfo.title.join("") + "Back");
            console.log("Should make the zoom-in animation for appearing Pokemon...", pokemon);
            this.EightBitter.battles.addBattleDisplayPokemonHealth("player");
            this.EightBitter.MenuGrapher.createMenu("BattlePlayerHealthNumbers");
            this.EightBitter.battles.setBattleDisplayPokemonHealthBar("Player", pokemonInfo.HP, pokemonInfo.HPNormal);
            this.EightBitter.ScenePlayer.playRoutine(args.nextRoutine);
        };
        /**
         * Cutscene for the player attempting to switch a Pokemon with itself.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattlePlayerSwitchesSamePokemon = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                backMenu: "PokemonMenuContext"
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                settings.battleInfo.battlers.player.selectedActor.nickname, " is already out!"
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player to start a Pokemon move. After the announcement text,
         * the MovePlayerAnimate cutscene is played.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleMovePlayer = function (settings, args) {
            var player = settings.battleInfo.battlers.player;
            var playerActor = player.selectedActor;
            var opponent = settings.battleInfo.battlers.opponent;
            var opponentActor = opponent.selectedActor;
            var choice = args.choicePlayer;
            args.damage = this.EightBitter.MathDecider.compute("damage", choice, playerActor, opponentActor);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    playerActor.nickname, " used ", choice + "!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("MovePlayerAnimate", args));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for animating the player's chosen move.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleMovePlayerAnimate = function (settings, args) {
            var _this = this;
            var choice = args.choicePlayer;
            var move = this.EightBitter.MathDecider.getConstant("moves")[choice];
            console.log("Should do something with", move);
            args.attackerName = "player";
            args.defenderName = "opponent";
            args.callback = function () {
                var callback;
                args.movePlayerDone = true;
                if (args.moveOpponentDone) {
                    callback = function () {
                        args.movePlayerDone = false;
                        args.moveOpponentDone = false;
                        _this.EightBitter.MenuGrapher.createMenu("GeneralText");
                        _this.EightBitter.BattleMover.showPlayerMenu();
                    };
                }
                else {
                    callback = function () {
                        _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.ScenePlayer.playRoutine("MoveOpponent", args); }, 7);
                    };
                }
                _this.EightBitter.ScenePlayer.playRoutine("Damage", {
                    battlerName: "opponent",
                    damage: args.damage,
                    callback: callback
                });
            };
            // @todo: When all moves have been implemented, this will be simplified.
            if (!this.EightBitter.ScenePlayer.getOtherRoutine("Attack" + choice.replace(" ", ""))) {
                console.warn(choice + " attack animation not implemented...");
                args.callback();
            }
            else {
                this.EightBitter.ScenePlayer.playRoutine("Attack" + choice.replace(" ", ""), args);
            }
        };
        /**
         * Cutscene for the opponent to start a Pokemon move. After the announcement text,
         * the MoveOpponentAnimate cutscene is played.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleMoveOpponent = function (settings, args) {
            var opponent = settings.battleInfo.battlers.opponent;
            var opponentActor = opponent.selectedActor;
            var player = settings.battleInfo.battlers.player;
            var playerActor = player.selectedActor;
            var choice = args.choiceOpponent;
            args.damage = this.EightBitter.MathDecider.compute("damage", choice, opponentActor, playerActor);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    opponentActor.nickname, " used ", choice + "!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("MoveOpponentAnimate", args));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for animating an opponent's chosen move.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleMoveOpponentAnimate = function (settings, args) {
            var _this = this;
            var choice = args.choiceOpponent;
            var move = this.EightBitter.MathDecider.getConstant("moves")[choice];
            console.log("Should do something with", move);
            args.attackerName = "opponent";
            args.defenderName = "player";
            args.callback = function () {
                var callback;
                args.moveOpponentDone = true;
                if (args.movePlayerDone) {
                    callback = function () {
                        args.movePlayerDone = false;
                        args.moveOpponentDone = false;
                        _this.EightBitter.MenuGrapher.createMenu("GeneralText");
                        _this.EightBitter.BattleMover.showPlayerMenu();
                    };
                }
                else {
                    callback = function () {
                        _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.ScenePlayer.playRoutine("MovePlayer", args); }, 7);
                    };
                }
                _this.EightBitter.ScenePlayer.playRoutine("Damage", {
                    battlerName: "player",
                    damage: args.damage,
                    callback: callback
                });
            };
            // @todo: When all moves have been implemented, this will be simplified.
            if (!this.EightBitter.ScenePlayer.getOtherRoutine("Attack" + choice.replace(" ", ""))) {
                console.warn(choice + " attack animation not implemented...");
                args.callback();
            }
            else {
                this.EightBitter.ScenePlayer.playRoutine("Attack" + choice.replace(" ", ""), args);
            }
        };
        /**
         * Cutscene for applying and animating damage in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleDamage = function (settings, args) {
            var _this = this;
            var battlerName = args.battlerName;
            var damage = args.damage;
            var battleInfo = this.EightBitter.BattleMover.getBattleInfo();
            var battler = battleInfo.battlers[battlerName];
            var actor = battler.selectedActor;
            var hpStart = actor.HP;
            var hpEnd = Math.max(hpStart - damage, 0);
            var callback = hpEnd === 0
                ? function () {
                    _this.EightBitter.TimeHandler.addEvent(function () {
                        _this.EightBitter.ScenePlayer.playRoutine("PokemonFaints", {
                            battlerName: battlerName
                        });
                    }, 49);
                }
                : args.callback;
            if (damage !== 0) {
                this.EightBitter.battles.animateBattleDisplayPokemonHealthBar(battlerName, hpStart, hpEnd, actor.HPNormal, callback);
                actor.HP = hpEnd;
            }
            else {
                callback(this.EightBitter);
            }
        };
        /**
         * Cutscene for a Pokemon fainting in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattlePokemonFaints = function (settings, args) {
            var _this = this;
            var battlerName = args.battlerName;
            var battleInfo = this.EightBitter.BattleMover.getBattleInfo();
            var actor = battleInfo.battlers[battlerName].selectedActor;
            var thing = settings.things[battlerName];
            var blank = this.EightBitter.ObjectMaker.make("WhiteSquare", {
                width: thing.width * thing.scale,
                height: thing.height * thing.scale
            });
            var texts = this.EightBitter.GroupHolder.getGroup("Text");
            var background = this.EightBitter.BattleMover.getBackgroundThing();
            var backgroundIndex = texts.indexOf(background);
            var nextRoutine = battlerName === "player"
                ? "AfterPlayerPokemonFaints" : "AfterOpponentPokemonFaints";
            this.EightBitter.things.add(blank, thing.left, thing.top + thing.height * thing.scale * this.EightBitter.unitsize);
            this.EightBitter.utilities.arrayToIndex(blank, texts, backgroundIndex + 1);
            this.EightBitter.utilities.arrayToIndex(thing, texts, backgroundIndex + 1);
            this.EightBitter.animations.animateSlideVertical(thing, this.EightBitter.unitsize * 2, this.EightBitter.physics.getMidY(thing) + thing.height * thing.scale * this.EightBitter.unitsize, 1, function () {
                _this.EightBitter.physics.killNormal(thing);
                _this.EightBitter.physics.killNormal(blank);
                _this.EightBitter.MenuGrapher.createMenu("GeneralText");
                _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                    [
                        actor.nickname, " fainted!"
                    ]
                ], _this.EightBitter.ScenePlayer.bindRoutine(nextRoutine, args));
                _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            });
            this.EightBitter.ModAttacher.fireEvent("onFaint", actor, battleInfo.battlers.player.actors);
        };
        /**
         * Cutscene for choosing what to do after a Pokemon faints in battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleAfterPlayerPokemonFaints = function (settings) {
            var battleInfo = this.EightBitter.BattleMover.getBattleInfo();
            var actorAvailable = this.EightBitter.utilities.checkArrayMembersIndex(battleInfo.battlers.player.actors, "HP");
            if (actorAvailable) {
                this.EightBitter.ScenePlayer.playRoutine("PlayerChoosesPokemon");
            }
            else {
                this.EightBitter.ScenePlayer.playRoutine("Defeat");
            }
        };
        /**
         * Cutscene for after an opponent's Pokemon faints in battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleAfterOpponentPokemonFaints = function (settings) {
            var battleInfo = settings.battleInfo;
            var opponent = battleInfo.battlers.opponent;
            var actorAvailable = this.EightBitter.utilities.checkArrayMembersIndex(opponent.actors, "HP");
            var experienceGained = this.EightBitter.MathDecider.compute("experienceGained", battleInfo.battlers.player, battleInfo.battlers.opponent);
            var callback;
            if (actorAvailable) {
                callback = this.EightBitter.ScenePlayer.bindRoutine("OpponentSwitchesPokemon");
            }
            else {
                callback = this.EightBitter.ScenePlayer.bindRoutine("Victory");
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    battleInfo.battlers.player.selectedActor.nickname,
                    " gained ",
                    experienceGained.toString(),
                    " EXP. points!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("ExperienceGain", {
                experienceGained: experienceGained,
                callback: callback
            }));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for an opponent switching Pokemon in battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleOpponentSwitchesPokemon = function (settings) {
            var _this = this;
            var battleInfo = settings.battleInfo;
            var opponent = battleInfo.battlers.opponent;
            var opponentActor = opponent.selectedActor;
            var nicknameExclaim = opponentActor.nickname.slice();
            nicknameExclaim.push("!");
            this.EightBitter.BattleMover.switchActor("opponent", opponent.selectedIndex + 1);
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                deleteOnFinish: false
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                opponent.name,
                "is about to use",
                nicknameExclaim,
                "Will %%%%%%%PLAYER%%%%%%% change %%%%%%%POKEMON%%%%%%%?"
            ], function () {
                _this.EightBitter.MenuGrapher.createMenu("Yes/No");
                _this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                    options: [
                        {
                            text: "Yes",
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("PlayerSwitchesPokemon", {
                                nextRoutine: "OpponentSendOut"
                            })
                        }, {
                            text: "No",
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("OpponentSendOut", {
                                nextRoutine: "ShowPlayerMenu"
                            })
                        }]
                });
                _this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for a player's Pokemon gaining experience in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleExperienceGain = function (settings, args) {
            var battleInfo = settings.battleInfo;
            var actor = battleInfo.battlers.player.selectedActor;
            var experience = actor.experience;
            var gains = args.experienceGained;
            console.warn("Experience gain is hardcoded to the current actor...");
            experience.current += gains;
            if (experience.next - experience.current < 0) {
                gains -= (experience.next - experience.current);
                this.EightBitter.ScenePlayer.playRoutine("LevelUp", {
                    experienceGained: gains,
                    callback: args.callback
                });
            }
            else {
                args.callback();
            }
        };
        /**
         * Cutscene for a player's Pokemon leveling up in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleLevelUp = function (settings, args) {
            var battleInfo = settings.battleInfo;
            // const gains: number = args.experienceGained;
            var actor = battleInfo.battlers.player.selectedActor;
            actor.level += 1;
            actor.experience = this.EightBitter.MathDecider.compute("newPokemonExperience", actor.title, actor.level);
            console.warn("Leveling up does not yet increase stats...");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    actor.nickname,
                    " grew to level ",
                    actor.level.toString(),
                    "!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("LevelUpStats", args));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for displaying a Pokemon's statistics in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleLevelUpStats = function (settings, args) {
            this.EightBitter.menus.openPokemonLevelUpStats({
                container: "BattleDisplayInitial",
                position: {
                    horizontal: "right",
                    vertical: "bottom",
                    offset: {
                        left: 4
                    }
                },
                pokemon: settings.battleInfo.battlers.player.selectedActor,
                onMenuDelete: args.callback
            });
            this.EightBitter.MenuGrapher.setActiveMenu("LevelUpStats");
            console.warn("For stones, LevelUpStats should be taken out of battles.");
        };
        /**
         * Cutscene for a player choosing a Pokemon (creating the menu for it).
         */
        Cutscenes.prototype.cutsceneBattlePlayerChoosesPokemon = function () {
            this.EightBitter.MenuGrapher.createMenu("Pokemon", {
                position: {
                    vertical: "center",
                    offset: {
                        left: 0
                    }
                }
            });
        };
        /**
         * Cutscene for failing to run from a trainer battle.
         */
        Cutscenes.prototype.cutsceneBattleExitFail = function () {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "No! There's no running from a trainer battle!", this.EightBitter.ScenePlayer.bindRoutine("BattleExitFailReturn"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for returning to a battle after failing to exit.
         *
         */
        Cutscenes.prototype.cutsceneBattleExitFailReturn = function () {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.BattleMover.showPlayerMenu();
        };
        /**
         * Cutscene for becoming victorious in battle.
         */
        Cutscenes.prototype.cutsceneBattleVictory = function () {
            var _this = this;
            var battleInfo = this.EightBitter.BattleMover.getBattleInfo();
            var opponent = battleInfo.battlers.opponent;
            if (!opponent.hasActors) {
                this.EightBitter.BattleMover.closeBattle(function () {
                    _this.EightBitter.animations.animateFadeFromColor({
                        color: "White"
                    });
                });
                return;
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    "%%%%%%%PLAYER%%%%%%% defeated ",
                    opponent.name,
                    "!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("VictorySpeech"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the opponent responding to the player's victory.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleVictorySpeech = function (settings) {
            var _this = this;
            var battleInfo = settings.battleInfo;
            var menu = this.EightBitter.MenuGrapher.getMenu("BattleDisplayInitial");
            var opponent = this.EightBitter.BattleMover.setThing("opponent", battleInfo.battlers.opponent.sprite);
            var timeout = 35;
            var opponentX;
            var opponentGoal;
            opponent.opacity = 0;
            this.EightBitter.physics.setTop(opponent, menu.top);
            this.EightBitter.physics.setLeft(opponent, menu.right);
            opponentX = this.EightBitter.physics.getMidX(opponent);
            opponentGoal = menu.right - opponent.width * this.EightBitter.unitsize / 2;
            this.EightBitter.animations.animateFadeAttribute(opponent, "opacity", 4 / timeout, 1, 1);
            this.EightBitter.animations.animateSlideHorizontal(opponent, (opponentGoal - opponentX) / timeout, opponentGoal, 1, function () {
                _this.EightBitter.MenuGrapher.createMenu("GeneralText");
                _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", battleInfo.textVictory, _this.EightBitter.ScenePlayer.bindRoutine("VictoryWinnings"));
                _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            });
        };
        /**
         * Cutscene for receiving cash for defeating an opponent.
         *
         * @param settings   Settings used for the cutscene
         */
        Cutscenes.prototype.cutsceneBattleVictoryWinnings = function (settings) {
            var _this = this;
            var battleInfo = settings.battleInfo;
            var reward = battleInfo.battlers.opponent.reward;
            var animationSettings = {
                color: "White"
            };
            var callback = function () {
                _this.EightBitter.BattleMover.closeBattle(function () {
                    _this.EightBitter.animations.animateFadeFromColor(animationSettings);
                });
            };
            if (battleInfo.giftAfterBattle) {
                this.EightBitter.storage.addItemToBag(battleInfo.giftAfterBattle, battleInfo.giftAfterBattleAmount || 1);
            }
            if (battleInfo.badge) {
                this.EightBitter.ItemsHolder.getItem("badges")[battleInfo.badge] = true;
            }
            if (battleInfo.textAfterBattle) {
                animationSettings.callback = function () {
                    _this.EightBitter.MenuGrapher.createMenu("GeneralText");
                    _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", battleInfo.textAfterBattle);
                    _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                };
            }
            if (!reward) {
                callback();
                return;
            }
            this.EightBitter.ItemsHolder.increase("money", reward);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%PLAYER%%%%%%% got $" + reward + " for winning!"
            ], callback);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player being defeated in battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleDefeat = function (settings) {
            var _this = this;
            var battleInfo = settings.battleInfo;
            var message = ["%%%%%%%PLAYER%%%%%%% is out of useable %%%%%%%POKEMON%%%%%%%!"];
            var callback;
            if (!battleInfo.noBlackout) {
                message.push("%%%%%%%PLAYER%%%%%%% blacked out!");
                callback = function () {
                    var transport = _this.EightBitter.ItemsHolder.getItem("lastPokecenter");
                    _this.EightBitter.BattleMover.closeBattle();
                    _this.EightBitter.maps.setMap(transport.map, transport.location);
                    for (var _i = 0, _a = _this.EightBitter.ItemsHolder.getItem("PokemonInParty"); _i < _a.length; _i++) {
                        var pokemon = _a[_i];
                        _this.EightBitter.battles.healPokemon(pokemon);
                    }
                    _this.EightBitter.storage.autoSave();
                };
            }
            else {
                callback = function () { return _this.EightBitter.BattleMover.closeBattle(); };
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", message, function () {
                _this.EightBitter.animations.animateFadeToColor({
                    color: "Black",
                    callback: callback
                });
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for a battle completely finishing.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleComplete = function (settings) {
            this.EightBitter.MapScreener.blockInputs = false;
            this.EightBitter.graphics.moveBattleKeptThingsBack(settings.battleInfo);
            this.EightBitter.ItemsHolder.setItem("PokemonInParty", settings.battleInfo.battlers.player.actors);
            this.EightBitter.ModAttacher.fireEvent("onBattleComplete", settings.battleInfo);
            if (this.EightBitter.MapScreener.theme) {
                this.EightBitter.AudioPlayer.playTheme(this.EightBitter.MapScreener.theme);
            }
        };
        /**
         * Cutscene for changing a statistic in battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneBattleChangeStatistic = function (settings, args) {
            var battleInfo = settings.battleInfo;
            var defenderName = args.defenderName;
            var defender = battleInfo.battlers[defenderName].selectedActor;
            var defenderLabel = defenderName === "opponent"
                ? "Enemy " : "";
            var statistic = args.statistic;
            var amount = args.amount;
            var amountLabel;
            defender[statistic] -= amount;
            switch (amount) {
                case 2:
                    amountLabel = "sharply rose";
                    break;
                case 1:
                    amountLabel = "rose";
                    break;
                case -1:
                    amountLabel = "fell";
                    break;
                case -2:
                    amountLabel = "sharply fell";
                    break;
                default:
                    break;
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    defenderLabel,
                    defender.nickname,
                    "'s ",
                    statistic.toUpperCase(),
                    " " + amountLabel + "!"
                ]
            ], args.callback);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for a Growl attack in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleAttackGrowl = function (settings, args) {
            var _this = this;
            var attackerName = args.attackerName;
            var defenderName = args.defenderName;
            var attacker = this.EightBitter.BattleMover.getThing(attackerName);
            var defender = this.EightBitter.BattleMover.getThing(defenderName);
            var direction = attackerName === "player" ? 1 : -1;
            var notes = [
                this.EightBitter.ObjectMaker.make("Note"),
                this.EightBitter.ObjectMaker.make("Note")
            ];
            var menu = this.EightBitter.MenuGrapher.getMenu("BattleDisplayInitial");
            var dt = 10;
            var startX;
            var startY;
            var movement = function (note, dx) {
                var flip = 1;
                var differenceX;
                var differenceY;
                if (direction === 1) {
                    differenceX = menu.right - startX;
                    differenceY = (menu.top + defender.height / 2 * _this.EightBitter.unitsize) - startY;
                }
                else {
                    differenceX = menu.left - startX;
                    differenceY = (menu.bottom - defender.height * _this.EightBitter.unitsize) - startY;
                }
                for (var i = 1; i <= 4; i += 1) {
                    _this.EightBitter.TimeHandler.addEvent(function () {
                        _this.EightBitter.physics.shiftHoriz(note, differenceX / 4);
                        if (flip === 1) {
                            _this.EightBitter.physics.shiftVert(note, differenceY / 10 * 6);
                        }
                        else {
                            _this.EightBitter.physics.shiftVert(note, -1 * differenceY / 8);
                        }
                        flip *= -1;
                    }, dx * i);
                }
            };
            if (direction === 1) {
                startX = menu.left + attacker.width / 2 * this.EightBitter.unitsize;
                startY = menu.bottom - attacker.height * this.EightBitter.unitsize;
            }
            else {
                startX = menu.right - attacker.width / 2 * this.EightBitter.unitsize;
                startY = menu.top + attacker.height * this.EightBitter.unitsize;
            }
            this.EightBitter.things.add(notes[0], startX, startY);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.things.add(notes[1], startX + notes[1].width / 2 * _this.EightBitter.unitsize, startY + _this.EightBitter.unitsize * 3);
            }, 2);
            movement(notes[0], dt);
            movement(notes[1], dt + 2);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.killNormal(notes[0]); }, 5 * dt);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.killNormal(notes[1]); }, 5 * dt + 2);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateScreenShake(3, 0, 6, undefined, _this.EightBitter.ScenePlayer.bindRoutine("ChangeStatistic", _this.EightBitter.utilities.proliferate({
                    callback: args.callback,
                    defenderName: defenderName,
                    statistic: "Attack",
                    amount: -1
                }, args)));
            }, 5 * dt);
        };
        /**
         * Cutscene for a Tackle attack in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleAttackTackle = function (settings, args) {
            var _this = this;
            var attackerName = args.attackerName;
            var defenderName = args.defenderName;
            var attacker = this.EightBitter.BattleMover.getThing(attackerName);
            var defender = this.EightBitter.BattleMover.getThing(defenderName);
            var direction = attackerName === "player" ? 1 : -1;
            var xvel = 7 * direction;
            var dt = 7;
            var movement = this.EightBitter.TimeHandler.addEventInterval(function () {
                _this.EightBitter.physics.shiftHoriz(attacker, xvel);
            }, 1, Infinity);
            this.EightBitter.TimeHandler.addEvent(function () {
                xvel *= -1;
            }, dt);
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.TimeHandler.cancelEvent, dt * 2 - 1, movement);
            if (attackerName === "player") {
                this.EightBitter.TimeHandler.addEvent(this.EightBitter.animations.animateFlicker, dt * 2, defender, 14, 5, args.callback);
            }
            else {
                this.EightBitter.TimeHandler.addEvent(function () {
                    _this.EightBitter.animations.animateScreenShake(0, undefined, undefined, undefined, function () {
                        _this.EightBitter.animations.animateFlicker(defender, 14, 5, args.callback);
                    });
                }, dt * 2);
            }
        };
        /**
         * Cutscene for a Tail Whip attack in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleAttackTailWhip = function (settings, args) {
            var _this = this;
            var attackerName = args.attackerName;
            var defenderName = args.defenderName;
            var attacker = this.EightBitter.BattleMover.getThing(attackerName);
            var direction = attackerName === "player" ? 1 : -1;
            var dt = 11;
            var dx = this.EightBitter.unitsize * 4;
            this.EightBitter.physics.shiftHoriz(attacker, dx * direction);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.shiftHoriz(attacker, -dx * direction); }, dt);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.shiftHoriz(attacker, dx * direction); }, dt * 2);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.shiftHoriz(attacker, -dx * direction); }, dt * 3);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateScreenShake(3, 0, 6, undefined, _this.EightBitter.ScenePlayer.bindRoutine("ChangeStatistic", {
                    callback: args.callback,
                    defenderName: defenderName,
                    statistic: "Defense",
                    amount: -1
                }));
            }, (dt * 3.5) | 0);
        };
        /**
         * Cutscene for a Scratch attack in battle.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneBattleAttackScratch = function (settings, args) {
            var _this = this;
            var defenderName = args.defenderName;
            var defender = this.EightBitter.BattleMover.getThing(defenderName);
            var dt = 1;
            var direction = defenderName === "opponent" ? -1 : 1;
            var differenceX = defender.width / 2 * this.EightBitter.unitsize;
            var lineArray = [];
            var menu = this.EightBitter.MenuGrapher.getMenu("BattleDisplayInitial");
            var scratches = [
                this.EightBitter.ObjectMaker.make("ExplosionSmall"),
                this.EightBitter.ObjectMaker.make("ExplosionSmall"),
                this.EightBitter.ObjectMaker.make("ExplosionSmall")
            ];
            var startX;
            var startY;
            if (direction === -1) {
                startX = menu.right - defender.width / 2 * this.EightBitter.unitsize;
                startY = menu.top;
            }
            else {
                startX = menu.left + defender.width * this.EightBitter.unitsize;
                startY = menu.bottom - (defender.height + 8) * this.EightBitter.unitsize;
            }
            this.EightBitter.things.add(scratches[0], startX, startY);
            var offset = scratches[0].width * this.EightBitter.unitsize / 2;
            this.EightBitter.things.add(scratches[1], startX + offset * direction * -1, startY + offset);
            this.EightBitter.things.add(scratches[2], startX + offset * direction * -2, startY + offset * 2);
            this.EightBitter.TimeHandler.addEventInterval(function () {
                var _loop_2 = function(scratch) {
                    var left = direction === -1 ? scratch.left : scratch.right - 3 * _this.EightBitter.unitsize;
                    var top_1 = scratch.bottom - 3 * _this.EightBitter.unitsize;
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.shiftHoriz(scratch, differenceX * direction / 16); }, dt);
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.physics.shiftVert(scratch, differenceX * direction / 16); }, dt);
                    var line = _this.EightBitter.things.add("ScratchLine", left, top_1);
                    if (direction === 1) {
                        _this.EightBitter.graphics.flipHoriz(line);
                    }
                    lineArray.push(line);
                };
                for (var _i = 0, scratches_1 = scratches; _i < scratches_1.length; _i++) {
                    var scratch = scratches_1[_i];
                    _loop_2(scratch);
                }
            }, dt, 16);
            this.EightBitter.TimeHandler.addEvent(function () {
                for (var _i = 0, scratches_2 = scratches; _i < scratches_2.length; _i++) {
                    var scratch = scratches_2[_i];
                    _this.EightBitter.physics.killNormal(scratch);
                }
                for (var _a = 0, lineArray_1 = lineArray; _a < lineArray_1.length; _a++) {
                    var line = lineArray_1[_a];
                    _this.EightBitter.physics.killNormal(line);
                }
                _this.EightBitter.animations.animateFlicker(defender, 14, 5, args.callback);
            }, 17 * dt);
        };
        /**
         * Cutscene for when a trainer is encountered for battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneTrainerSpottedExclamation = function (settings) {
            this.EightBitter.animations.animateCharacterPreventWalking(this.EightBitter.player);
            this.EightBitter.animations.animateExclamation(settings.triggerer, 70, this.EightBitter.ScenePlayer.bindRoutine("Approach"));
        };
        /**
         * Cutscene for when a trainer approaches the player after being encountered.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneTrainerSpottedApproach = function (settings) {
            var player = settings.player;
            var triggerer = settings.triggerer;
            var direction = triggerer.direction;
            var directionName = Direction[direction].toLowerCase();
            var locationTriggerer = triggerer[directionName];
            var locationPlayer = player[FullScreenPokemon_1.DirectionOpposites[directionName]];
            var distance = Math.abs(locationTriggerer - locationPlayer);
            var blocks = Math.max(0, distance / this.EightBitter.unitsize / 8);
            if (blocks) {
                this.EightBitter.animations.animateCharacterStartWalking(triggerer, direction, [
                    blocks,
                    this.EightBitter.ScenePlayer.bindRoutine("Dialog")
                ]);
            }
            else {
                this.EightBitter.ScenePlayer.playRoutine("Dialog");
            }
        };
        /**
         * Cutscene for a trainer introduction after the player is approached.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneTrainerSpottedDialog = function (settings) {
            this.EightBitter.collisions.collideCharacterDialog(settings.player, settings.triggerer);
            this.EightBitter.MapScreener.blockInputs = false;
        };
        /**
         * Cutscene for a nurse's welcome at the Pokemon Center.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeCenterWelcome = function (settings) {
            settings.nurse = this.EightBitter.utilities.getThingById(settings.nurseId || "Nurse");
            settings.machine = this.EightBitter.utilities.getThingById(settings.machineId || "HealingMachine");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Welcome to our %%%%%%%POKEMON%%%%%%% CENTER!",
                "We heal your %%%%%%%POKEMON%%%%%%% back to perfect health!",
                "Shall we heal your %%%%%%%POKEMON%%%%%%%?"
            ], this.EightBitter.ScenePlayer.bindRoutine("Choose"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for choosing whether or not to heal Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeCenterChoose = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("Heal/Cancel");
            this.EightBitter.MenuGrapher.addMenuList("Heal/Cancel", {
                options: [
                    {
                        text: "HEAL",
                        callback: this.EightBitter.ScenePlayer.bindRoutine("ChooseHeal")
                    },
                    {
                        text: "CANCEL",
                        callback: this.EightBitter.ScenePlayer.bindRoutine("ChooseCancel")
                    }
                ]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Heal/Cancel");
        };
        /**
         * Cutscene for choosing to heal Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeCenterChooseHeal = function (settings) {
            this.EightBitter.MenuGrapher.deleteMenu("Heal/Cancel");
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                ignoreA: true,
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Ok. We'll need your %%%%%%%POKEMON%%%%%%%."
            ], this.EightBitter.ScenePlayer.bindRoutine("Healing"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for placing Pokeballs into the healing machine.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeCenterHealing = function (settings) {
            var _this = this;
            var party = this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            var balls = [];
            var dt = 35;
            var left = settings.machine.left + 5 * this.EightBitter.unitsize;
            var top = settings.machine.top + 7 * this.EightBitter.unitsize;
            var i = 0;
            settings.balls = balls;
            this.EightBitter.animations.animateCharacterSetDirection(settings.nurse, 3);
            this.EightBitter.TimeHandler.addEventInterval(function () {
                balls.push(_this.EightBitter.things.add("HealingMachineBall", left + (i % 2) * 3 * _this.EightBitter.unitsize, top + Math.floor(i / 2) * 2.5 * _this.EightBitter.unitsize));
                i += 1;
            }, dt, party.length);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.ScenePlayer.playRoutine("HealingAction", {
                balls: balls
            }); }, dt * (party.length + 1));
        };
        /**
         * Cutscene for Pokemon being healed in the healing machine.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutscenePokeCenterHealingAction = function (settings, args) {
            var _this = this;
            var balls = args.balls;
            var numFlashes = 8;
            var i = 0;
            var changer;
            this.EightBitter.TimeHandler.addEventInterval(function () {
                changer = i % 2 === 0
                    ? function (thing, className) { return _this.EightBitter.graphics.addClass(thing, className); }
                    : function (thing, className) { return _this.EightBitter.graphics.removeClass(thing, className); };
                for (var _i = 0, balls_1 = balls; _i < balls_1.length; _i++) {
                    var ball = balls_1[_i];
                    changer(ball, "lit");
                }
                changer(settings.machine, "lit");
                i += 1;
            }, 21, numFlashes);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.ScenePlayer.playRoutine("HealingComplete", {
                balls: balls
            }); }, (numFlashes + 2) * 21);
        };
        /**
         * Cutscene for when the Pokemon have finished healing.
         *
         * @param settings   Settings used for the cutscene.
         * @param args Settings for the routine.
         */
        Cutscenes.prototype.cutscenePokeCenterHealingComplete = function (settings, args) {
            var _this = this;
            var balls = args.balls;
            var party = this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            for (var _i = 0, balls_2 = balls; _i < balls_2.length; _i++) {
                var ball = balls_2[_i];
                this.EightBitter.physics.killNormal(ball);
            }
            for (var _a = 0, party_1 = party; _a < party_1.length; _a++) {
                var pokemon = party_1[_a];
                this.EightBitter.battles.healPokemon(pokemon);
            }
            this.EightBitter.animations.animateCharacterSetDirection(settings.nurse, 2);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Thank you! \n Your %%%%%%%POKEMON%%%%%%% are fighting fit!",
                "We hope to see you again!"
            ], function () {
                _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
                _this.EightBitter.ScenePlayer.stopCutscene();
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for choosing not to heal Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeCenterChooseCancel = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.deleteMenu("Heal/Cancel");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "We hope to see you again!"
            ], function () {
                _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
                _this.EightBitter.ScenePlayer.stopCutscene();
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for speaking to a PokeMart cashier.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeMartGreeting = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true,
                ignoreA: true,
                ignoreB: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Hi there! \n May I help you?"
            ], this.EightBitter.ScenePlayer.bindRoutine("Options"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene showing the PokeMart action options.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeMartOptions = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("Money");
            this.EightBitter.MenuGrapher.createMenu("Buy/Sell", {
                killOnB: ["Money", "GeneralText"],
                onMenuDelete: this.EightBitter.ScenePlayer.bindRoutine("Exit")
            });
            this.EightBitter.MenuGrapher.addMenuList("Buy/Sell", {
                options: [{
                        text: "BUY",
                        callback: this.EightBitter.ScenePlayer.bindRoutine("BuyMenu")
                    }, {
                        text: "SELL",
                        callback: undefined
                    }, {
                        text: "QUIT",
                        callback: this.EightBitter.MenuGrapher.registerB
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Buy/Sell");
        };
        /**
         * Cutscene for the PokeMart item menu.
         *
         * @param settings   Settings used for the cutscene.
         *
         * @todo Add constants for all items, for display names
         */
        Cutscenes.prototype.cutscenePokeMartBuyMenu = function (settings) {
            var _this = this;
            var options = settings.triggerer.items.map(function (reference) {
                var text = reference.item.toUpperCase();
                var cost = reference.cost;
                return {
                    text: text,
                    textsFloating: [{
                            text: "$" + cost,
                            x: 42 - String(cost).length * 3.5,
                            y: 4
                        }],
                    callback: _this.EightBitter.ScenePlayer.bindRoutine("SelectAmount", {
                        reference: reference,
                        amount: 1,
                        cost: cost
                    }),
                    reference: reference
                };
            });
            options.push({
                text: "CANCEL",
                callback: this.EightBitter.MenuGrapher.registerB
            });
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Take your time."
            ], function () {
                _this.EightBitter.MenuGrapher.createMenu("ShopItems", {
                    backMenu: "Buy/Sell"
                });
                _this.EightBitter.MenuGrapher.addMenuList("ShopItems", {
                    options: options
                });
                _this.EightBitter.MenuGrapher.setActiveMenu("ShopItems");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for selecting the amount of an item the player wishes to buy.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutscenePokeMartSelectAmount = function (settings, args) {
            var reference = args.reference;
            var amount = args.amount;
            var cost = args.cost;
            var costTotal = cost * amount;
            var text = this.EightBitter.utilities.makeDigit(amount, 2)
                + this.EightBitter.utilities.makeDigit("$" + costTotal, 8, " ");
            this.EightBitter.MenuGrapher.createMenu("ShopItemsAmount", {
                childrenSchemas: [
                    {
                        type: "text",
                        words: ["Times"],
                        position: {
                            offset: {
                                left: 4,
                                top: 4.25
                            }
                        }
                    },
                    {
                        type: "text",
                        words: [text],
                        position: {
                            offset: {
                                left: 8,
                                top: 3.75
                            }
                        }
                    }],
                onUp: this.EightBitter.ScenePlayer.bindRoutine("SelectAmount", {
                    amount: (amount === 99) ? 1 : amount + 1,
                    cost: cost,
                    reference: reference
                }),
                onDown: this.EightBitter.ScenePlayer.bindRoutine("SelectAmount", {
                    amount: (amount === 1) ? 99 : amount - 1,
                    cost: cost,
                    reference: reference
                }),
                callback: this.EightBitter.ScenePlayer.bindRoutine("ConfirmPurchase", args)
            });
            this.EightBitter.MenuGrapher.setActiveMenu("ShopItemsAmount");
        };
        /**
         * Cutscene for confirming a PokeMart purchase.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutscenePokeMartConfirmPurchase = function (settings, args) {
            var _this = this;
            var reference = args.reference;
            var cost = args.cost;
            var amount = args.amount;
            var costTotal = args.costTotal = cost * amount;
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                reference.item.toUpperCase() + "? \n That will be $" + costTotal + ". OK?"
            ], function () {
                _this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                    position: {
                        horizontal: "right",
                        vertical: "bottom",
                        offset: {
                            top: 0,
                            left: 0
                        }
                    },
                    onMenuDelete: _this.EightBitter.ScenePlayer.bindRoutine("CancelPurchase"),
                    container: "ShopItemsAmount"
                });
                _this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                    options: [
                        {
                            text: "YES",
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("TryPurchase", args)
                        }, {
                            text: "NO",
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("CancelPurchase")
                        }]
                });
                _this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for canceling a PokeMart purchase.
         *
         * @param settings   Settings used for the cutscene.
         *
         * @todo Why is the BuyMenu text appearing twice?
         */
        Cutscenes.prototype.cutscenePokeMartCancelPurchase = function (settings) {
            this.EightBitter.ScenePlayer.playRoutine("BuyMenu");
        };
        /**
         * Cutscene for carrying out a PokeMart transaction. Can either confirm or deny
         * the purchase based on the player's total money.
         *
         * @param settings   Settings used for the cutscene.
         * @param args  Settings for the routine.
         */
        Cutscenes.prototype.cutscenePokeMartTryPurchase = function (settings, args) {
            var costTotal = args.costTotal;
            if (this.EightBitter.ItemsHolder.getItem("money") < costTotal) {
                this.EightBitter.ScenePlayer.playRoutine("FailPurchase", args);
                return;
            }
            this.EightBitter.ItemsHolder.decrease("money", args.costTotal);
            this.EightBitter.MenuGrapher.createMenu("Money");
            this.EightBitter.ItemsHolder.getItem("items").push({
                item: args.reference.item,
                amount: args.amount
            });
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Here you are! \n Thank you!"
            ], this.EightBitter.ScenePlayer.bindRoutine("ContinueShopping"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for when the player does not have enough money for the
         * PokeMart purchase.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeMartFailPurchase = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "You don't have enough money."
            ], this.EightBitter.ScenePlayer.bindRoutine("ContinueShopping"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for asking if the player wants to continue shopping.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeMartContinueShopping = function (settings) {
            if (this.EightBitter.MenuGrapher.getMenu("Yes/No")) {
                delete this.EightBitter.MenuGrapher.getMenu("Yes/No").onMenuDelete;
            }
            this.EightBitter.MenuGrapher.deleteMenu("ShopItems");
            this.EightBitter.MenuGrapher.deleteMenu("ShopItemsAmount");
            this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Is there anything else I can do?"
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("Buy/Sell");
            this.EightBitter.storage.autoSave();
        };
        /**
         * Cutscene for the player choosing to stop shopping.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutscenePokeMartExit = function (settings) {
            this.EightBitter.ScenePlayer.stopCutscene();
            this.EightBitter.MenuGrapher.deleteMenu("Buy/Sell");
            this.EightBitter.MenuGrapher.deleteMenu("Money");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Thank you!"
            ], this.EightBitter.MenuGrapher.deleteActiveMenu);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the beginning of the game introduction.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroFadeIn = function (settings) {
            var _this = this;
            var oak = this.EightBitter.ObjectMaker.make("OakPortrait", {
                opacity: 0
            });
            settings.oak = oak;
            console.warn("Cannot find Introduction audio theme!");
            // this.EightBitter.AudioPlayer.playTheme("Introduction");
            this.EightBitter.ModAttacher.fireEvent("onIntroFadeIn", oak);
            this.EightBitter.maps.setMap("Blank", "White");
            this.EightBitter.MenuGrapher.deleteActiveMenu();
            this.EightBitter.things.add(oak);
            this.EightBitter.physics.setMidX(oak, this.EightBitter.MapScreener.middleX | 0);
            this.EightBitter.physics.setMidY(oak, this.EightBitter.MapScreener.middleY | 0);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(oak, "opacity", .15, 1, 14, _this.EightBitter.ScenePlayer.bindRoutine("FirstDialog"));
            }, 70);
        };
        /**
         * Cutscene for Oak's introduction.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroFirstDialog = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Hello there! \n Welcome to the world of %%%%%%%POKEMON%%%%%%%!",
                "My name is OAK! People call me the %%%%%%%POKEMON%%%%%%% PROF!"
            ], this.EightBitter.ScenePlayer.bindRoutine("FirstDialogFade"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak's introduction exit.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroFirstDialogFade = function (settings) {
            var _this = this;
            var blank = this.EightBitter.ObjectMaker.make("WhiteSquare", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 0
            });
            this.EightBitter.things.add(blank, 0, 0);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(blank, "opacity", .15, 1, 7, _this.EightBitter.ScenePlayer.bindRoutine("PokemonExpo"));
            }, 35);
        };
        /**
         * Cutscene for transitioning Nidorino onto the screen.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPokemonExpo = function (settings) {
            var pokemon = this.EightBitter.ObjectMaker.make("NIDORINOFront", {
                flipHoriz: true,
                opacity: .01
            });
            this.EightBitter.GroupHolder.applyOnAll(this.EightBitter.physics, this.EightBitter.physics.killNormal);
            this.EightBitter.things.add(pokemon, (this.EightBitter.MapScreener.middleX + 24 * this.EightBitter.unitsize) | 0, 0);
            this.EightBitter.physics.setMidY(pokemon, this.EightBitter.MapScreener.middleY);
            this.EightBitter.animations.animateFadeAttribute(pokemon, "opacity", .15, 1, 3);
            this.EightBitter.animations.animateSlideHorizontal(pokemon, -this.EightBitter.unitsize * 2, this.EightBitter.MapScreener.middleX | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("PokemonExplanation"));
        };
        /**
         * Cutscene for showing an explanation of the Pokemon world.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPokemonExplanation = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "This world is inhabited by creatures called %%%%%%%POKEMON%%%%%%%!",
                "For some people, %%%%%%%POKEMON%%%%%%% are pets. Others use them for fights.",
                "Myself...",
                "I study %%%%%%%POKEMON%%%%%%% as a profession."
            ], this.EightBitter.ScenePlayer.bindRoutine("PlayerAppear"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene showing the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerAppear = function (settings) {
            var middleX = this.EightBitter.MapScreener.middleX | 0;
            var player = this.EightBitter.ObjectMaker.make("PlayerPortrait", {
                flipHoriz: true,
                opacity: .01
            });
            settings.player = player;
            this.EightBitter.GroupHolder.applyOnAll(this.EightBitter.physics, this.EightBitter.physics.killNormal);
            this.EightBitter.things.add(player, this.EightBitter.MapScreener.middleX + 24 * this.EightBitter.unitsize, 0);
            this.EightBitter.physics.setMidY(player, this.EightBitter.MapScreener.middleY);
            this.EightBitter.animations.animateFadeAttribute(player, "opacity", .15, 1, 3);
            this.EightBitter.animations.animateSlideHorizontal(player, -this.EightBitter.unitsize * 2, middleX - player.width * this.EightBitter.unitsize / 2, 1, this.EightBitter.ScenePlayer.bindRoutine("PlayerName"));
        };
        /**
         * Cutscene asking the player to enter his/her name.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerName = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "First, what is your name?"
            ], this.EightBitter.ScenePlayer.bindRoutine("PlayerSlide"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for sliding the player over to show the naming options.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerSlide = function (settings) {
            this.EightBitter.animations.animateSlideHorizontal(settings.player, this.EightBitter.unitsize, (this.EightBitter.MapScreener.middleX + 16 * this.EightBitter.unitsize) | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("PlayerNameOptions"));
        };
        /**
         * Cutscene for showing the player naming option menu.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerNameOptions = function (settings) {
            var _this = this;
            var fromMenu = this.EightBitter.ScenePlayer.bindRoutine("PlayerNameFromMenu");
            var fromKeyboard = this.EightBitter.ScenePlayer.bindRoutine("PlayerNameFromKeyboard");
            this.EightBitter.MenuGrapher.createMenu("NameOptions");
            this.EightBitter.MenuGrapher.addMenuList("NameOptions", {
                options: [
                    {
                        text: "NEW NAME".split(""),
                        callback: function () { return _this.EightBitter.menus.openKeyboardMenu({
                            title: "YOUR NAME?",
                            callback: fromKeyboard
                        }); }
                    }, {
                        text: "BLUE".split(""),
                        callback: fromMenu
                    }, {
                        text: "GARY".split(""),
                        callback: fromMenu
                    }, {
                        text: "JOHN".split(""),
                        callback: fromMenu
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("NameOptions");
        };
        /**
         * Cutscene for the player selecting Blue, Gary, or John.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerNameFromMenu = function (settings) {
            settings.name = this.EightBitter.MenuGrapher.getMenuSelectedOption("NameOptions").text;
            this.EightBitter.MenuGrapher.deleteMenu("NameOptions");
            this.EightBitter.animations.animateSlideHorizontal(settings.player, -this.EightBitter.unitsize, this.EightBitter.MapScreener.middleX | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("PlayerNameConfirm"));
        };
        /**
         * Cutscene for the player choosing to customize a new name.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerNameFromKeyboard = function (settings) {
            settings.name = this.EightBitter.MenuGrapher.getMenu("KeyboardResult").completeValue;
            this.EightBitter.MenuGrapher.deleteMenu("Keyboard");
            this.EightBitter.MenuGrapher.deleteMenu("NameOptions");
            this.EightBitter.animations.animateSlideHorizontal(settings.player, -this.EightBitter.unitsize, this.EightBitter.MapScreener.middleX | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("PlayerNameConfirm"));
        };
        /**
         * Cutscene confirming the player's name.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerNameConfirm = function (settings) {
            this.EightBitter.ItemsHolder.setItem("name", settings.name);
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    "Right! So your name is ".split(""),
                    settings.name,
                    "!".split("")
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("PlayerNameComplete"));
        };
        /**
         * Cutscene fading the player out.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroPlayerNameComplete = function (settings) {
            var _this = this;
            var blank = this.EightBitter.ObjectMaker.make("WhiteSquare", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 0
            });
            this.EightBitter.things.add(blank, 0, 0);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(blank, "opacity", .2, 1, 7, _this.EightBitter.ScenePlayer.bindRoutine("RivalAppear"));
            }, 35);
        };
        /**
         * Cutscene for showing the rival.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalAppear = function (settings) {
            var rival = this.EightBitter.ObjectMaker.make("RivalPortrait", {
                opacity: 0
            });
            settings.rival = rival;
            this.EightBitter.GroupHolder.applyOnAll(this.EightBitter.physics, this.EightBitter.physics.killNormal);
            this.EightBitter.things.add(rival, 0, 0);
            this.EightBitter.physics.setMidX(rival, this.EightBitter.MapScreener.middleX | 0);
            this.EightBitter.physics.setMidY(rival, this.EightBitter.MapScreener.middleY | 0);
            this.EightBitter.animations.animateFadeAttribute(rival, "opacity", .1, 1, 1, this.EightBitter.ScenePlayer.bindRoutine("RivalName"));
        };
        /**
         * Cutscene introducing the rival.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalName = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "This is my grand-son. He's been your rival since you were a baby.",
                "...Erm, what is his name again?"
            ], this.EightBitter.ScenePlayer.bindRoutine("RivalSlide"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for sliding the rival over to show the rival naming options.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalSlide = function (settings) {
            this.EightBitter.animations.animateSlideHorizontal(settings.rival, this.EightBitter.unitsize, (this.EightBitter.MapScreener.middleX + 16 * this.EightBitter.unitsize) | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("RivalNameOptions"));
        };
        /**
         * Cutscene for showing the rival naming option menu.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalNameOptions = function (settings) {
            var _this = this;
            var fromMenu = this.EightBitter.ScenePlayer.bindRoutine("RivalNameFromMenu");
            var fromKeyboard = this.EightBitter.ScenePlayer.bindRoutine("RivalNameFromKeyboard");
            this.EightBitter.MenuGrapher.createMenu("NameOptions");
            this.EightBitter.MenuGrapher.addMenuList("NameOptions", {
                options: [
                    {
                        text: "NEW NAME",
                        callback: function () { return _this.EightBitter.menus.openKeyboardMenu({
                            title: "RIVAL's NAME?",
                            callback: fromKeyboard
                        }); }
                    }, {
                        text: "RED".split(""),
                        callback: fromMenu
                    }, {
                        text: "ASH".split(""),
                        callback: fromMenu
                    }, {
                        text: "JACK".split(""),
                        callback: fromMenu
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("NameOptions");
        };
        /**
         * Cutscene for choosing to name the rival Red, Ash, or Jack.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalNameFromMenu = function (settings) {
            settings.name = this.EightBitter.MenuGrapher.getMenuSelectedOption("NameOptions").text;
            this.EightBitter.MenuGrapher.deleteMenu("NameOptions");
            this.EightBitter.animations.animateSlideHorizontal(settings.rival, -this.EightBitter.unitsize, this.EightBitter.MapScreener.middleX | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("RivalNameConfirm"));
        };
        /**
         * Cutscene for choosing to customize the rival's name.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalNameFromKeyboard = function (settings) {
            settings.name = this.EightBitter.MenuGrapher.getMenu("KeyboardResult").completeValue;
            this.EightBitter.MenuGrapher.deleteMenu("Keyboard");
            this.EightBitter.MenuGrapher.deleteMenu("NameOptions");
            this.EightBitter.animations.animateSlideHorizontal(settings.rival, -this.EightBitter.unitsize, this.EightBitter.MapScreener.middleX | 0, 1, this.EightBitter.ScenePlayer.bindRoutine("RivalNameConfirm"));
        };
        /**
         * Cutscene for confirming the rival's name.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalNameConfirm = function (settings) {
            this.EightBitter.ItemsHolder.setItem("nameRival", settings.name);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    "That's right! I remember now! His name is ", settings.name, "!"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("RivalNameComplete"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene fading the rival out.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroRivalNameComplete = function (settings) {
            var _this = this;
            var blank = this.EightBitter.ObjectMaker.make("WhiteSquare", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 0
            });
            this.EightBitter.things.add(blank, 0, 0);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(blank, "opacity", .2, 1, 7, _this.EightBitter.ScenePlayer.bindRoutine("LastDialogAppear"));
            }, 35);
        };
        /**
         * Cutscene for fading the player in.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroLastDialogAppear = function (settings) {
            var portrait = this.EightBitter.ObjectMaker.make("PlayerPortrait", {
                flipHoriz: true,
                opacity: 0
            });
            settings.portrait = portrait;
            this.EightBitter.GroupHolder.applyOnAll(this.EightBitter.physics, this.EightBitter.physics.killNormal);
            this.EightBitter.things.add(portrait, 0, 0);
            this.EightBitter.physics.setMidX(portrait, this.EightBitter.MapScreener.middleX | 0);
            this.EightBitter.physics.setMidY(portrait, this.EightBitter.MapScreener.middleY | 0);
            this.EightBitter.animations.animateFadeAttribute(portrait, "opacity", .1, 1, 1, this.EightBitter.ScenePlayer.bindRoutine("LastDialog"));
        };
        /**
         * Cutscene for the last part of the introduction.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroLastDialog = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%PLAYER%%%%%%%!",
                "Your very own %%%%%%%POKEMON%%%%%%% legend is about to unfold!",
                "A world of dreams and adventures with %%%%%%%POKEMON%%%%%%% awaits! Let's go!"
            ], this.EightBitter.ScenePlayer.bindRoutine("ShrinkPlayer"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for shrinking the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroShrinkPlayer = function (settings) {
            var _this = this;
            var silhouetteLarge = this.EightBitter.ObjectMaker.make("PlayerSilhouetteLarge");
            var silhouetteSmall = this.EightBitter.ObjectMaker.make("PlayerSilhouetteSmall");
            var player = this.EightBitter.ObjectMaker.make("Player");
            var timeDelay = 49;
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.things.add(silhouetteLarge);
                _this.EightBitter.physics.setMidObj(silhouetteLarge, settings.portrait);
                _this.EightBitter.physics.killNormal(settings.portrait);
            }, timeDelay);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.things.add(silhouetteSmall);
                _this.EightBitter.physics.setMidObj(silhouetteSmall, silhouetteLarge);
                _this.EightBitter.physics.killNormal(silhouetteLarge);
            }, timeDelay * 2);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.things.add(player);
                _this.EightBitter.physics.setMidObj(player, silhouetteSmall);
                _this.EightBitter.physics.killNormal(silhouetteSmall);
            }, timeDelay * 3);
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine("FadeOut"), timeDelay * 4);
        };
        /**
         * Cutscene for completing the introduction and fading it out.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroFadeOut = function (settings) {
            var _this = this;
            var blank = this.EightBitter.ObjectMaker.make("WhiteSquare", {
                width: this.EightBitter.MapScreener.width,
                height: this.EightBitter.MapScreener.height,
                opacity: 0
            });
            this.EightBitter.things.add(blank, 0, 0);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateFadeAttribute(blank, "opacity", .2, 1, 7, _this.EightBitter.ScenePlayer.bindRoutine("Finish"));
            }, 35);
        };
        /**
         * Cutscene showing the player in his bedroom.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneIntroFinish = function (settings) {
            delete this.EightBitter.MapScreener.cutscene;
            this.EightBitter.MenuGrapher.deleteActiveMenu();
            this.EightBitter.ScenePlayer.stopCutscene();
            this.EightBitter.ItemsHolder.setItem("gameStarted", true);
            this.EightBitter.maps.setMap("Pallet Town", "Start Game");
        };
        /**
         * Cutscene for walking into the grass before receiving a Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroFirstDialog = function (settings) {
            var _this = this;
            var triggered = false;
            settings.triggerer.alive = false;
            this.EightBitter.StateHolder.addChange(settings.triggerer.id, "alive", false);
            if (this.EightBitter.ItemsHolder.getItem("starter")) {
                this.EightBitter.MapScreener.blockInputs = false;
                return;
            }
            this.EightBitter.animations.animatePlayerDialogFreeze(settings.player);
            this.EightBitter.animations.animateCharacterSetDirection(settings.player, 2);
            this.EightBitter.AudioPlayer.playTheme("Professor Oak");
            this.EightBitter.MapScreener.blockInputs = true;
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                finishAutomatically: true,
                finishAutomaticSpeed: 28
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "OAK: Hey! Wait! Don't go out!", function () {
                if (!triggered) {
                    triggered = true;
                    _this.EightBitter.ScenePlayer.playRoutine("Exclamation");
                }
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene showing the exclamation point over the player's head.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroExclamation = function (settings) {
            var _this = this;
            var timeout = 49;
            this.EightBitter.animations.animateExclamation(settings.player, timeout);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.hideMenu("GeneralText"); }, timeout);
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine("Catchup"), timeout);
        };
        /**
         * Cutscene for animating Oak to walk to the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroCatchup = function (settings) {
            var door = this.EightBitter.utilities.getThingById("Oak's Lab Door");
            var oak = this.EightBitter.ObjectMaker.make("Oak", {
                outerOk: true,
                nocollide: true
            });
            var isToLeft = this.EightBitter.player.bordering[Direction.Left] !== undefined;
            var walkingSteps = [
                1, "left", 4, "top", 8, "right", 1, "top", 1, "right", 1, "top", 1
            ];
            if (!isToLeft) {
                walkingSteps.push("right", 1, "top", 0);
            }
            walkingSteps.push(this.EightBitter.ScenePlayer.bindRoutine("GrassWarning"));
            settings.oak = oak;
            settings.isToLeft = isToLeft;
            this.EightBitter.things.add(oak, door.left, door.top);
            this.EightBitter.animations.animateCharacterStartWalkingCycle(oak, 2, walkingSteps);
        };
        /**
         * Cutscene for Oak telling the player to keep out of the grass.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroGrassWarning = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "It's unsafe! Wild %%%%%%%POKEMON%%%%%%% live in tall grass!",
                "You need your own %%%%%%%POKEMON%%%%%%% for your protection. \n I know!",
                "Here, come with me."
            ], this.EightBitter.ScenePlayer.bindRoutine("FollowToLab"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player following Oak to the Professor's lab.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroFollowToLab = function (settings) {
            var startingDirection;
            var walkingSteps;
            if (settings.isToLeft) {
                startingDirection = Direction.Bottom;
                walkingSteps = [5, "left", 1, "bottom", 5, "right", 3, "top", 1];
            }
            else {
                startingDirection = Direction.Left;
                walkingSteps = [1, "bottom", 5, "left", 1, "bottom", 5, "right", 3, "top", 1];
            }
            walkingSteps.push(this.EightBitter.ScenePlayer.bindRoutine("EnterLab"));
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            this.EightBitter.animations.animateCharacterFollow(settings.player, settings.oak);
            this.EightBitter.animations.animateCharacterStartWalkingCycle(settings.oak, startingDirection, walkingSteps);
        };
        /**
         * Cutscene for entering Oak's lab.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroEnterLab = function (settings) {
            var _this = this;
            this.EightBitter.StateHolder.addChange("Pallet Town::Oak's Lab::Oak", "alive", true);
            settings.oak.hidden = true;
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.animations.animateCharacterStartWalkingCycle, this.EightBitter.MathDecider.compute("speedWalking", this.EightBitter.player), this.EightBitter.player, 0, [
                0,
                function () {
                    _this.EightBitter.maps.setMap("Pallet Town", "Oak's Lab Floor 1 Door", false);
                    _this.EightBitter.player.hidden = true;
                    _this.EightBitter.ScenePlayer.playRoutine("WalkToTable");
                }
            ]);
        };
        /**
         * Cutscene for Oak offering a Pokemon to the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroWalkToTable = function (settings) {
            var _this = this;
            var oak = this.EightBitter.utilities.getThingById("Oak");
            var rival = this.EightBitter.utilities.getThingById("Rival");
            settings.oak = oak;
            settings.player = this.EightBitter.player;
            oak.dialog = "OAK: Now, %%%%%%%PLAYER%%%%%%%, which %%%%%%%POKEMON%%%%%%% do you want?";
            oak.hidden = false;
            oak.nocollide = true;
            this.EightBitter.physics.setMidXObj(oak, settings.player);
            this.EightBitter.physics.setBottom(oak, settings.player.top);
            this.EightBitter.StateHolder.addChange(oak.id, "hidden", false);
            this.EightBitter.StateHolder.addChange(oak.id, "nocollide", false);
            this.EightBitter.StateHolder.addChange(oak.id, "dialog", oak.dialog);
            rival.dialog = [
                "%%%%%%%RIVAL%%%%%%%: Heh, I don't need to be greedy like you!",
                "Go ahead and choose, %%%%%%%PLAYER%%%%%%%!"
            ];
            this.EightBitter.StateHolder.addChange(rival.id, "dialog", rival.dialog);
            this.EightBitter.animations.animateCharacterStartWalking(oak, 0, [
                8, "bottom", 0
            ]);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.player.hidden = false;
            }, 112 - this.EightBitter.MathDecider.compute("speedWalking", settings.player));
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.animations.animateCharacterStartWalking(settings.player, 0, [8, _this.EightBitter.ScenePlayer.bindRoutine("RivalComplain")]);
            }, 112);
        };
        /**
         * Cutscene for the rival complaining to Oak.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalComplain = function (settings) {
            settings.oak.nocollide = false;
            settings.player.nocollide = false;
            this.EightBitter.StateHolder.addChange(settings.oak.id, "nocollide", false);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "%%%%%%%RIVAL%%%%%%%: Gramps! I'm fed up with waiting!", this.EightBitter.ScenePlayer.bindRoutine("OakThinksToRival"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak telling the player to pick a Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroOakThinksToRival = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "OAK: %%%%%%%RIVAL%%%%%%%? Let me think...",
                "Oh, that's right, I told you to come! Just wait!",
                "Here, %%%%%%%PLAYER%%%%%%%!",
                "There are 3 %%%%%%%POKEMON%%%%%%% here!",
                "Haha!",
                "They are inside the %%%%%%%POKE%%%%%%% BALLs.",
                "When I was young, I was a serious %%%%%%%POKEMON%%%%%%% trainer!",
                "In my old age, I have only 3 left, but you can have one! Choose!"
            ], this.EightBitter.ScenePlayer.bindRoutine("RivalProtests"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival protesting to Oak.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalProtests = function (settings) {
            var _this = this;
            var timeout = 21;
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.MenuGrapher.createMenu("GeneralText");
            }, timeout);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Hey! Gramps! What about me?"
            ], _this.EightBitter.ScenePlayer.bindRoutine("OakRespondsToProtest")); }, timeout);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText"); }, timeout);
        };
        /**
         * Cutscene for Oak responding to the rival's protest.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroOakRespondsToProtest = function (settings) {
            var _this = this;
            var blocker = this.EightBitter.utilities.getThingById("OakBlocker");
            var timeout = 21;
            settings.player.nocollide = false;
            settings.oak.nocollide = false;
            blocker.nocollide = false;
            this.EightBitter.StateHolder.addChange(blocker.id, "nocollide", false);
            this.EightBitter.MapScreener.blockInputs = false;
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                    deleteOnFinish: true
                });
            }, timeout);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "Oak: Be patient! %%%%%%%RIVAL%%%%%%%, you can have one too!"); }, timeout);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText"); }, timeout);
        };
        /**
         * Cutscene for the player checking a Pokeball.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerChecksPokeball = function (settings) {
            // If Oak is hidden, this cutscene shouldn't be starting (too early)
            if (this.EightBitter.utilities.getThingById("Oak").hidden) {
                this.EightBitter.ScenePlayer.stopCutscene();
                this.EightBitter.MenuGrapher.createMenu("GeneralText");
                this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                    "Those are %%%%%%%POKE%%%%%%% Balls. They contain %%%%%%%POKEMON%%%%%%%!"
                ]);
                this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                return;
            }
            // If there's already a starter, ignore this sad last ball...
            if (this.EightBitter.ItemsHolder.getItem("starter")) {
                return;
            }
            var pokeball = settings.triggerer;
            settings.chosen = pokeball.pokemon;
            this.EightBitter.menus.openPokedexListing(pokeball.pokemon, this.EightBitter.ScenePlayer.bindRoutine("PlayerDecidesPokemon"), {
                position: {
                    vertical: "center",
                    offset: {
                        left: 0
                    }
                }
            });
        };
        /**
         * Cutscene for confirming the player wants to keep the chosen Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerDecidesPokemon = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    "So! You want the " + settings.triggerer.description + " %%%%%%%POKEMON%%%%%%%, ", settings.chosen, "?"
                ]
            ], function () {
                _this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                    killOnB: ["GeneralText"]
                });
                _this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                    options: [
                        {
                            text: "YES",
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("PlayerTakesPokemon")
                        }, {
                            text: "NO",
                            callback: _this.EightBitter.MenuGrapher.registerB
                        }]
                });
                _this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player receiving his Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerTakesPokemon = function (settings) {
            var oak = this.EightBitter.utilities.getThingById("Oak");
            var rival = this.EightBitter.utilities.getThingById("Rival");
            var dialogOak = "Oak: If a wild %%%%%%%POKEMON%%%%%%% appears, your %%%%%%%POKEMON%%%%%%% can fight against it!";
            var dialogRival = "%%%%%%%RIVAL%%%%%%%: My %%%%%%%POKEMON%%%%%%% looks a lot stronger.";
            settings.oak = oak;
            oak.dialog = dialogOak;
            this.EightBitter.StateHolder.addChange(oak.id, "dialog", dialogOak);
            settings.rival = rival;
            rival.dialog = dialogRival;
            this.EightBitter.StateHolder.addChange(rival.id, "dialog", dialogRival);
            this.EightBitter.ItemsHolder.setItem("starter", settings.chosen.join(""));
            settings.triggerer.hidden = true;
            this.EightBitter.StateHolder.addChange(settings.triggerer.id, "hidden", true);
            this.EightBitter.StateHolder.addChange(settings.triggerer.id, "nocollide", true);
            this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                [
                    "%%%%%%%PLAYER%%%%%%% received a ", settings.chosen, "!"
                ],
                "This %%%%%%%POKEMON%%%%%%% is really energetic!",
                [
                    "Do you want to give a nickname to ", settings.chosen, "?"
                ]
            ], this.EightBitter.ScenePlayer.bindRoutine("PlayerChoosesNickname"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.ItemsHolder.setItem("starter", settings.chosen);
            this.EightBitter.ItemsHolder.setItem("PokemonInParty", [
                this.EightBitter.MathDecider.compute("newPokemon", settings.chosen, 5)
            ]);
            this.EightBitter.storage.addPokemonToPokedex(settings.chosen, PokedexListingStatus.Caught);
        };
        /**
         * Cutscene for allowing the player to choose his Pokemon's nickname.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerChoosesNickname = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                ignoreB: true,
                killOnB: ["GeneralText"]
            });
            this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                options: [
                    {
                        text: "YES",
                        callback: function () { return _this.EightBitter.menus.openKeyboardMenu({
                            title: settings.chosen,
                            callback: _this.EightBitter.ScenePlayer.bindRoutine("PlayerSetsNickname")
                        }); }
                    }, {
                        text: "NO",
                        callback: this.EightBitter.ScenePlayer.bindRoutine("RivalWalksToPokemon")
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
        };
        /**
         * Cutscene for the player finishing the naming process.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoicePlayerSetsNickname = function (settings) {
            var party = this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            var menu = this.EightBitter.MenuGrapher.getMenu("KeyboardResult");
            var result = menu.completeValue;
            party[0].nickname = result;
            this.EightBitter.ScenePlayer.playRoutine("RivalWalksToPokemon");
        };
        /**
         * Cutscene for the rival selecting his Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoiceRivalWalksToPokemon = function (settings) {
            var _this = this;
            var rival = this.EightBitter.utilities.getThingById("Rival");
            var starterRival;
            var steps;
            this.EightBitter.MenuGrapher.deleteMenu("Keyboard");
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
            this.EightBitter.MapScreener.blockInputs = true;
            switch (settings.chosen.join("")) {
                case "SQUIRTLE":
                    starterRival = "BULBASAUR".split("");
                    steps = 4;
                    break;
                case "CHARMANDER":
                    starterRival = "SQUIRTLE".split("");
                    steps = 3;
                    break;
                case "BULBASAUR":
                    starterRival = "CHARMANDER".split("");
                    steps = 2;
                    break;
                default:
                    throw new Error("Unknown first Pokemon.");
            }
            settings.rivalPokemon = starterRival;
            settings.rivalSteps = steps;
            this.EightBitter.ItemsHolder.setItem("starterRival", starterRival);
            this.EightBitter.storage.addPokemonToPokedex(starterRival, PokedexListingStatus.Caught);
            var pokeball = this.EightBitter.utilities.getThingById("Pokeball" + starterRival.join(""));
            settings.rivalPokeball = pokeball;
            this.EightBitter.animations.animateCharacterStartWalkingCycle(rival, 2, [
                2, "right", steps, "top", 1,
                function () { return _this.EightBitter.ScenePlayer.playRoutine("RivalTakesPokemon"); }
            ]);
        };
        /**
         * Cutscene for the rival receiving his Pokemon.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroPokemonChoiceRivalTakesPokemon = function (settings) {
            var _this = this;
            var oakblocker = this.EightBitter.utilities.getThingById("OakBlocker");
            var rivalblocker = this.EightBitter.utilities.getThingById("RivalBlocker");
            this.EightBitter.MenuGrapher.deleteMenu("Yes/No");
            oakblocker.nocollide = true;
            this.EightBitter.StateHolder.addChange(oakblocker.id, "nocollide", true);
            rivalblocker.nocollide = false;
            this.EightBitter.StateHolder.addChange(rivalblocker.id, "nocollide", false);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: I'll take this one, then!",
                [
                    "%%%%%%%RIVAL%%%%%%% received a ", settings.rivalPokemon, "!"
                ]
            ], function () {
                settings.rivalPokeball.hidden = true;
                _this.EightBitter.StateHolder.addChange(settings.rivalPokeball.id, "hidden", true);
                _this.EightBitter.MenuGrapher.deleteActiveMenu();
                _this.EightBitter.MapScreener.blockInputs = false;
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival challenging the player to a Pokemon battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalBattleApproach = function (settings) {
            var rival = this.EightBitter.utilities.getThingById("Rival");
            var dx = Math.abs(settings.triggerer.left - settings.player.left);
            var further = dx < this.EightBitter.unitsize;
            this.EightBitter.AudioPlayer.playTheme("Rival Appears");
            settings.rival = rival;
            this.EightBitter.animations.animateCharacterSetDirection(rival, Direction.Bottom);
            this.EightBitter.animations.animateCharacterSetDirection(settings.player, Direction.Top);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Wait, %%%%%%%PLAYER%%%%%%%! Let's check out our %%%%%%%POKEMON%%%%%%%!",
                "Come on, I'll take you on!"
            ], this.EightBitter.ScenePlayer.bindRoutine("Challenge", {
                further: further
            }));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for showing the lab after the battle ends.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalLeavesAfterBattle = function (settings) {
            this.EightBitter.MapScreener.blockInputs = true;
            for (var _i = 0, _a = this.EightBitter.ItemsHolder.getItem("PokemonInParty"); _i < _a.length; _i++) {
                var pokemon = _a[_i];
                this.EightBitter.battles.healPokemon(pokemon);
            }
            this.EightBitter.TimeHandler.addEvent(this.EightBitter.ScenePlayer.bindRoutine("Complaint"), 49);
        };
        /**
         * Cutscene for the rival's comment after losing the battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalLeavesComplaint = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Okay! I'll make my %%%%%%%POKEMON%%%%%%% fight to toughen it up!"
            ], function () {
                _this.EightBitter.MenuGrapher.deleteActiveMenu();
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("Goodbye"), 21);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival telling Oak he is leaving.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalLeavesGoodbye = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%PLAYER%%%%%%%! Gramps! Smell ya later!"
            ], this.EightBitter.ScenePlayer.bindRoutine("Walking"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival leaving the lab and Oak giving the player advice.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalLeavesWalking = function (settings) {
            var _this = this;
            var oak = this.EightBitter.utilities.getThingById("Oak");
            var rival = this.EightBitter.utilities.getThingById("Rival");
            var isRight = Math.abs(oak.left - rival.left) < this.EightBitter.unitsize;
            var steps = [
                1,
                "bottom",
                6,
                function () {
                    _this.EightBitter.physics.killNormal(rival);
                    _this.EightBitter.StateHolder.addChange(rival.id, "alive", false);
                    _this.EightBitter.MapScreener.blockInputs = false;
                }
            ];
            var dialog = [
                "OAK: %%%%%%%PLAYER%%%%%%%, raise your young %%%%%%%POKEMON%%%%%%% by making it fight!"
            ];
            console.log("Shouldn't this say the dialog?", dialog);
            this.EightBitter.ScenePlayer.stopCutscene();
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            rival.nocollide = true;
            this.EightBitter.animations.animateCharacterStartWalkingCycle(rival, isRight ? Direction.Left : Direction.Right, steps);
        };
        /**
         * Cutscene for the battle between the player and the rival.
         *
         * @param settings   Settings used for the cutscene.
         * @param args   Settings for the routine.
         */
        Cutscenes.prototype.cutsceneOakIntroRivalBattleChallenge = function (settings, args) {
            var _this = this;
            var starterRival = this.EightBitter.ItemsHolder.getItem("starterRival");
            var battleInfo = {
                battlers: {
                    opponent: {
                        sprite: "RivalPortrait",
                        name: this.EightBitter.ItemsHolder.getItem("nameRival"),
                        category: "Trainer",
                        hasActors: true,
                        reward: 175,
                        actors: [
                            this.EightBitter.MathDecider.compute("newPokemon", starterRival, 5)
                        ]
                    }
                },
                textStart: ["", " wants to fight!"],
                textDefeat: ["%%%%%%%RIVAL%%%%%%% Yeah! Am I great or what?"],
                textVictory: [
                    [
                        "%%%%%%%RIVAL%%%%%%%: WHAT?",
                        "Unbelievable!",
                        "I picked the wrong %%%%%%%POKEMON%%%%%%%!"
                    ].join(" ")
                ],
                // "animation": "LineSpiral",
                noBlackout: true,
                keptThings: this.EightBitter.graphics.collectBattleKeptThings(["player", "Rival"]),
                nextCutscene: "OakIntroRivalLeaves"
            };
            var steps;
            switch (this.EightBitter.ItemsHolder.getItem("starterRival").join("")) {
                case "SQUIRTLE":
                    steps = 2;
                    break;
                case "BULBASAUR":
                    steps = 3;
                    break;
                case "CHARMANDER":
                    steps = 1;
                    break;
                default:
                    throw new Error("Unknown starterRival.");
            }
            if (args.further) {
                steps += 1;
            }
            this.EightBitter.animations.animateCharacterStartWalkingCycle(settings.rival, 3, [
                steps,
                "bottom",
                1,
                function () { return _this.EightBitter.battles.startBattle(battleInfo); }
            ]);
        };
        /**
         * Cutscene for the PokeMart clerk calling the player to pick up Oak's parcel.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelPickupGreeting = function (settings) {
            settings.triggerer.alive = false;
            this.EightBitter.StateHolder.addChange(settings.triggerer.id, "alive", false);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Hey! You came from PALLET TOWN?"
            ], this.EightBitter.ScenePlayer.bindRoutine("WalkToCounter"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player walking to the counter when picking up the parcel.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelPickupWalkToCounter = function (settings) {
            this.EightBitter.animations.animateCharacterStartWalkingCycle(settings.player, 0, [
                2,
                "left",
                1,
                this.EightBitter.ScenePlayer.bindRoutine("CounterDialog")
            ]);
        };
        /**
         * Cutscene for the player receiving the parcel from the PokeMart clerk.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelPickupCounterDialog = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "You know PROF. Oak, right?",
                "His order came in. Will you take it to him?",
                "%%%%%%%PLAYER%%%%%%% got OAK's PARCEL!"
            ], function () {
                _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
                _this.EightBitter.ScenePlayer.stopCutscene();
                _this.EightBitter.MapScreener.blockInputs = false;
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.StateHolder.addCollectionChange("Pallet Town::Oak's Lab", "Oak", "cutscene", "OakParcelDelivery");
        };
        /**
         * Cutscene for when the player delivers the parcel to Oak.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryGreeting = function (settings) {
            var _this = this;
            settings.rival = this.EightBitter.utilities.getThingById("Rival");
            settings.oak = settings.triggerer;
            delete settings.oak.cutscene;
            delete settings.oak.dialog;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "OAK: Oh, %%%%%%%PLAYER%%%%%%%!",
                "How is my old %%%%%%%POKEMON%%%%%%%?",
                "Well, it seems to like you a lot.",
                "You must be talented as a %%%%%%%POKEMON%%%%%%% trainer!",
                "What? You have something for me?",
                "%%%%%%%PLAYER%%%%%%% delivered OAK's PARCEL.",
                "Ah! This is the custom %%%%%%%POKE%%%%%%% BALL I ordered! Thank you!"
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("RivalInterrupts"), 14);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::PokeMart", "CashierDetector", "dialog", false);
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::Land", "CrankyGrandpa", "alive", false);
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::Land", "CrankyGrandpaBlocker", "alive", false);
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::Land", "CrankyGranddaughter", "alive", false);
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::Land", "HappyGrandpa", "alive", true);
            this.EightBitter.StateHolder.addCollectionChange("Viridian City::Land", "HappyGranddaughter", "alive", true);
        };
        /**
         * Cutscene for when the rival interrupts Oak and the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryRivalInterrupts = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Gramps!"
            ], this.EightBitter.ScenePlayer.bindRoutine("RivalWalksUp"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival walking up to Oak and the player.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryRivalWalksUp = function (settings) {
            var _this = this;
            var doormat = this.EightBitter.utilities.getThingById("DoormatLeft");
            var rival = this.EightBitter.things.add("Rival", doormat.left, doormat.top);
            rival.alive = true;
            settings.rival = rival;
            this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            this.EightBitter.animations.animateCharacterStartWalkingCycle(rival, 0, [
                8,
                function () { return _this.EightBitter.ScenePlayer.playRoutine("RivalInquires"); }
            ]);
        };
        /**
         * Cutscene for the rival asking Oak why he was called.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryRivalInquires = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: What did you call me for?"
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("OakRequests"), 14);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak requesting something of the player and rival.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryOakRequests = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Oak: Oh right! I have a request of you two."
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("OakDescribesPokedex"), 14);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak describing the Pokedex.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryOakDescribesPokedex = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "On the desk there is my invention, %%%%%%%POKEDEX%%%%%%%!",
                "It automatically records data on %%%%%%%POKEMON%%%%%%% you've seen or caught!",
                "It's a hi-tech encyclopedia!"
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("OakGivesPokedex"), 14);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak giving the player and rival Pokedexes.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryOakGivesPokedex = function (settings) {
            var _this = this;
            var bookLeft = this.EightBitter.utilities.getThingById("BookLeft");
            var bookRight = this.EightBitter.utilities.getThingById("BookRight");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "OAK: %%%%%%%PLAYER%%%%%%% and %%%%%%%RIVAL%%%%%%%! Take these with you!",
                "%%%%%%%PLAYER%%%%%%% got %%%%%%%POKEDEX%%%%%%% from OAK!"
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("OakDescribesGoal"), 14);
                _this.EightBitter.physics.killNormal(bookLeft);
                _this.EightBitter.physics.killNormal(bookRight);
                _this.EightBitter.StateHolder.addChange(bookLeft.id, "alive", false);
                _this.EightBitter.StateHolder.addChange(bookRight.id, "alive", false);
                _this.EightBitter.ItemsHolder.setItem("hasPokedex", true);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Oak describing his life goal.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryOakDescribesGoal = function (settings) {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "To make a complete guide on all the %%%%%%%POKEMON%%%%%%% in the world...",
                "That was my dream!",
                "But, I'm too old! I can't do it!",
                "So, I want you two to fulfill my dream for me!",
                "Get moving, you two!",
                "This is a great undertaking in %%%%%%%POKEMON%%%%%%% history!"
            ], function () {
                _this.EightBitter.TimeHandler.addEvent(_this.EightBitter.ScenePlayer.bindRoutine("RivalAccepts"), 14);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the rival accepting the Pokedex and challenge to complete Oak's goal.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneOakParcelDeliveryRivalAccepts = function (settings) {
            var _this = this;
            this.EightBitter.animations.animateCharacterSetDirection(settings.rival, 1);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Alright Gramps! Leave it all to me!",
                "%%%%%%%PLAYER%%%%%%%, I hate to say it, but I don't need you!",
                "I know! I'll borrow a TOWN MAP from my sis!",
                "I'll tell her not to lend you one, %%%%%%%PLAYER%%%%%%%! Hahaha!"
            ], function () {
                _this.EightBitter.ScenePlayer.stopCutscene();
                _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
                delete settings.oak.activate;
                settings.rival.nocollide = true;
                _this.EightBitter.animations.animateCharacterStartWalkingCycle(settings.rival, 2, [
                    8,
                    function () {
                        _this.EightBitter.physics.killNormal(settings.rival);
                        _this.EightBitter.player.canKeyWalking = true;
                    }
                ]);
                delete settings.oak.cutscene;
                settings.oak.dialog = [
                    "%%%%%%%POKEMON%%%%%%% around the world wait for you, %%%%%%%PLAYER%%%%%%%!"
                ];
                _this.EightBitter.StateHolder.addChange(settings.oak.id, "dialog", settings.oak.dialog);
                _this.EightBitter.StateHolder.addChange(settings.oak.id, "cutscene", undefined);
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for Daisy giving the player a Town Map.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneDaisyTownMapGreeting = function (settings) {
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Grandpa asked you to run an errand? Here, this will help you!"
            ], this.EightBitter.ScenePlayer.bindRoutine("ReceiveMap"));
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        /**
         * Cutscene for the player receiving the Town Map.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneDaisyTownMapReceiveMap = function (settings) {
            var _this = this;
            var book = this.EightBitter.utilities.getThingById("Book");
            var daisy = settings.triggerer;
            this.EightBitter.physics.killNormal(book);
            this.EightBitter.StateHolder.addChange(book.id, "alive", false);
            delete daisy.cutscene;
            this.EightBitter.StateHolder.addChange(daisy.id, "cutscene", undefined);
            daisy.dialog = [
                "Use the TOWN MAP to find out where you are."
            ];
            this.EightBitter.StateHolder.addChange(daisy.id, "dialog", daisy.dialog);
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%PLAYER%%%%%%% got a TOWN MAP!"
            ], function () {
                _this.EightBitter.ScenePlayer.stopCutscene();
                _this.EightBitter.MenuGrapher.deleteMenu("GeneralText");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            console.warn("Player does not actually get a Town Map...");
        };
        /**
         * Cutscene for the old man battling a Weedle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneElderTrainingStartBattle = function (settings) {
            var _this = this;
            this.EightBitter.MapScreener.blockInputs = true;
            this.EightBitter.battles.startBattle({
                keptThings: this.EightBitter.graphics.collectBattleKeptThings([settings.player, settings.triggerer]),
                battlers: {
                    player: {
                        name: "OLD MAN".split(""),
                        sprite: "ElderBack",
                        category: "Wild",
                        actors: []
                    },
                    opponent: {
                        name: "WEEDLE".split(""),
                        sprite: "WeedleFront",
                        category: "Wild",
                        actors: [
                            this.EightBitter.MathDecider.compute("newPokemon", "WEEDLE".split(""), 5)
                        ]
                    }
                },
                items: [{
                        item: "Pokeball",
                        amount: 50
                    }],
                automaticMenus: true,
                onShowPlayerMenu: function () {
                    var timeout = 70;
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.registerDown(); }, timeout);
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.registerA(); }, timeout * 2);
                    _this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.registerA(); }, timeout * 3);
                }
            });
        };
        /**
         * Cutscene for encountering the rival on Route 22.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneRivalRoute22RivalEmerges = function (settings) {
            var player = settings.player;
            var triggerer = settings.triggerer;
            var playerUpper = Number(Math.abs(player.top - triggerer.top) < this.EightBitter.unitsize);
            var steps = [
                2,
                "right",
                3 + playerUpper,
            ];
            var rival = this.EightBitter.ObjectMaker.make("Rival", {
                direction: 0,
                nocollide: true,
                opacity: 0
            });
            if (playerUpper) {
                steps.push("top");
                steps.push(0);
            }
            settings.rival = rival;
            steps.push(this.EightBitter.ScenePlayer.bindRoutine("RivalTalks"));
            // thing, attribute, change, goal, speed, onCompletion
            this.EightBitter.animations.animateFadeAttribute(rival, "opacity", .2, 1, 3);
            this.EightBitter.things.add(rival, triggerer.left - this.EightBitter.unitsize * 28, triggerer.top + this.EightBitter.unitsize * 24);
            this.EightBitter.animations.animateCharacterStartWalkingCycle(rival, 0, steps);
        };
        /**
         * Cutscene for the rival talking to the player before the battle.
         *
         * @param settings   Settings used for the cutscene.
         */
        Cutscenes.prototype.cutsceneRivalRoute22RivalTalks = function (settings) {
            var _this = this;
            var rivalTitle = this.EightBitter.ItemsHolder.getItem("starterRival");
            this.EightBitter.animations.animateCharacterSetDirection(settings.player, this.EightBitter.physics.getDirectionBordering(settings.player, settings.rival));
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%RIVAL%%%%%%%: Hey! %%%%%%%PLAYER%%%%%%%!",
                "You're going to %%%%%%%POKEMON%%%%%%% LEAGUE?",
                "Forget it! You probably don't have any BADGES!",
                "The guard won't let you through!",
                "By the way did your %%%%%%%POKEMON%%%%%%% get any stronger?"
            ], function () { return _this.EightBitter.battles.startBattle({
                battlers: {
                    opponent: {
                        sprite: "RivalPortrait",
                        name: _this.EightBitter.ItemsHolder.getItem("nameRival"),
                        category: "Trainer",
                        hasActors: true,
                        reward: 280,
                        actors: [
                            _this.EightBitter.MathDecider.compute("newPokemon", rivalTitle, 8),
                            _this.EightBitter.MathDecider.compute("newPokemon", "PIDGEY".split(""), 9)
                        ]
                    }
                },
                textStart: [
                    "",
                    " wants to fight!"
                ],
                textDefeat: [
                    "Yeah! Am I great or what?".split("")
                ],
                textVictory: [
                    "Awww! You just lucked out!".split("")
                ],
                keptThings: _this.EightBitter.graphics.collectBattleKeptThings(["player", "Rival"])
            }); });
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        return Cutscenes;
    }(EightBittr.Component));
    FullScreenPokemon_1.Cutscenes = Cutscenes;
    /**
     * Cycling functions used by FullScreenPokemon instances.
     */
    var Cycling = (function (_super) {
        __extends(Cycling, _super);
        function Cycling() {
            _super.apply(this, arguments);
        }
        /**
         * Starts the Player cycling if the current Area allows it.
         *
         * @param thing   A Player to start cycling.
         * @param area   The current Area.
         * @returns Whether the properties were changed.
         */
        Cycling.prototype.startCycling = function (thing) {
            if (thing.surfing) {
                return false;
            }
            if (!this.EightBitter.MapScreener.variables.allowCycling) {
                return false;
            }
            thing.cycling = true;
            this.EightBitter.storage.addStateHistory(thing, "speed", thing.speed);
            thing.speed = this.EightBitter.MathDecider.compute("speedCycling", thing);
            this.EightBitter.graphics.addClass(thing, "cycling");
            this.EightBitter.menus.displayMessage(thing, "%%%%%%%PLAYER%%%%%%% got on the bicycle!");
            return true;
        };
        /**
         * Stops the Player cycling.
         *
         * @param thing   A Player to stop cycling.
         */
        Cycling.prototype.stopCycling = function (thing) {
            thing.cycling = false;
            this.EightBitter.storage.popStateHistory(thing, "speed");
            this.EightBitter.graphics.removeClass(thing, "cycling");
            this.EightBitter.TimeHandler.cancelClassCycle(thing, "cycling");
            this.EightBitter.menus.displayMessage(thing, "%%%%%%%PLAYER%%%%%%% got off the bicycle.");
        };
        /**
         * Toggles the Player's cycling status.
         *
         * @param thing   A Player to start or stop cycling.
         * @returns Whether the Player started cycling.
         */
        Cycling.prototype.toggleCycling = function (thing) {
            if (thing.cycling) {
                this.stopCycling(thing);
                return true;
            }
            return this.startCycling(thing);
        };
        return Cycling;
    }(EightBittr.Component));
    FullScreenPokemon_1.Cycling = Cycling;
    /**
     * Fishing functions used by FullScreenPokemon instances.
     */
    var Fishing = (function (_super) {
        __extends(Fishing, _super);
        function Fishing() {
            _super.apply(this, arguments);
        }
        /**
         * Starts the Player fishing.
         *
         * @param player   A Player to start fishing.
         * @param rod   The rod that will be used to fish.
         */
        Fishing.prototype.startFishing = function (player, item) {
            var _this = this;
            if (player.bordering[player.direction] === undefined ||
                player.bordering[player.direction].title.indexOf("WaterEdge") === -1) {
                this.EightBitter.menus.cannotDoThat(player);
                return;
            }
            var rod = item;
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                deleteOnFinish: true,
                ignoreA: true,
                ignoreB: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "%%%%%%%PLAYER%%%%%%% used " + rod.title + "!"
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
            this.EightBitter.physics.setWidth(player, 7, true, true);
            this.EightBitter.graphics.addClass(player, "fishing");
            this.EightBitter.TimeHandler.addEvent(function () {
                if (!_this.EightBitter.MathDecider.compute("canLandFish", player)) {
                    _this.EightBitter.fishing.playerFailedLandingFish(player);
                    return;
                }
                _this.EightBitter.animations.animateExclamation(player);
                _this.EightBitter.fishing.playerLandedFish(player, rod);
            }, 180);
        };
        /**
         * Displays message and starts battle when player lands a fish.
         *
         * @param player   A Player who landed the fish.
         * @param rod   The rod that will be used to fish.
         */
        Fishing.prototype.playerLandedFish = function (player, rod) {
            var _this = this;
            var currentMap = this.EightBitter.AreaSpawner.getMap(player.mapName);
            var currentArea = currentMap.areas[player.bordering[player.direction].areaName];
            var options = currentArea.wildPokemon.fishing[rod.type];
            var chosen = this.EightBitter.battles.chooseRandomWildPokemon(options);
            var chosenPokemon = this.EightBitter.utilities.createPokemon(chosen);
            this.EightBitter.TimeHandler.addEvent(function () {
                _this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                    deleteOnFinish: true
                });
                _this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                    "Oh! \n It's a bite!"
                ], function () {
                    _this.EightBitter.battles.startBattle({
                        battlers: {
                            opponent: {
                                name: chosenPokemon.title,
                                actors: [chosenPokemon],
                                category: "Wild",
                                sprite: chosenPokemon.title.join("") + "Front"
                            }
                        }
                    });
                });
                _this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
                _this.EightBitter.graphics.removeClass(player, "fishing");
                _this.EightBitter.physics.setWidth(player, 8, true, true);
            }, 140);
        };
        /**
         * Displays message when a Player does not land a fish.
         *
         * @param player   A Player who does not land a fish.
         */
        Fishing.prototype.playerFailedLandingFish = function (player) {
            this.EightBitter.MenuGrapher.deleteActiveMenu();
            this.EightBitter.menus.displayMessage(player, "rekt");
            this.EightBitter.graphics.removeClass(player, "fishing");
            this.EightBitter.physics.setWidth(player, 8, true, true);
        };
        return Fishing;
    }(EightBittr.Component));
    FullScreenPokemon_1.Fishing = Fishing;
    /**
     * Gameplay functions used by IGameStartr instances.
     */
    var Gameplay = (function (_super) {
        __extends(Gameplay, _super);
        function Gameplay() {
            _super.apply(this, arguments);
        }
        /**
         * Completely restarts the game. The StartOptions menu is shown.
         */
        Gameplay.prototype.gameStart = function () {
            this.startOptions();
            this.EightBitter.ModAttacher.fireEvent("onGameStart");
        };
        /**
         * Sets the map to Blank and displays the StartOptions menu.
         */
        Gameplay.prototype.startOptions = function () {
            var _this = this;
            var options = [
                {
                    text: "NEW GAME",
                    callback: function () { return _this.startIntro(); }
                }, {
                    text: "LOAD FILE",
                    callback: function () { return _this.loadFile(); }
                }];
            this.EightBitter.storage.checkForOldStorageData();
            if (this.EightBitter.ItemsHolder.getItem("gameStarted")) {
                options.unshift({
                    text: "CONTINUE",
                    callback: function () { return _this.startPlay(); }
                });
            }
            this.EightBitter.maps.setMap("Blank");
            this.EightBitter.MenuGrapher.createMenu("StartOptions");
            this.EightBitter.MenuGrapher.addMenuList("StartOptions", {
                options: options
            });
            this.EightBitter.MenuGrapher.setActiveMenu("StartOptions");
        };
        /**
         * Starts the game in the saved map and location from ItemsHolder, and fires the
         * onGameStartPlay mod trigger.
         */
        Gameplay.prototype.startPlay = function () {
            this.EightBitter.maps.setMap(this.EightBitter.ItemsHolder.getItem("map") || this.EightBitter.settings.maps.mapDefault, this.EightBitter.ItemsHolder.getItem("location"), true);
            this.EightBitter.maps.entranceResume();
            this.EightBitter.ModAttacher.fireEvent("onGameStartPlay");
        };
        /**
         * Starts the game's intro, and fires the onGameStartIntro mod trigger.
         */
        Gameplay.prototype.startIntro = function () {
            this.EightBitter.storage.clearSavedData();
            this.EightBitter.ScenePlayer.startCutscene("Intro", {
                disablePauseMenu: true
            });
            this.EightBitter.ModAttacher.fireEvent("onGameStartIntro");
        };
        /**
         * Loads a file using a dummy HTMLInputElement, then starts the game with it as
         * game state. The onGameStartIntro mod event is triggered.
         */
        Gameplay.prototype.loadFile = function () {
            var _this = this;
            var dummy = this.EightBitter.utilities.createElement("input", {
                type: "file",
                onchange: function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    var file = (dummy.files || event.dataTransfer.files)[0];
                    if (!file) {
                        return;
                    }
                    var reader = new FileReader();
                    reader.onloadend = function (loadEvent) {
                        _this.EightBitter.storage.loadData(loadEvent.currentTarget.result);
                        delete reader.onloadend;
                    };
                    reader.readAsText(file);
                }
            });
            dummy.click();
            this.EightBitter.ModAttacher.fireEvent("onGameStartIntro");
        };
        /**
         * Checks whether inputs may trigger, which is always true, and prevents the event.
         *
         * @param player   FSP's current user-controlled Player.
         * @param code   An key/mouse code from the event.
         * @param event   The original user-caused Event.
         * @returns Whether inputs may trigger (true).
         */
        Gameplay.prototype.canInputsTrigger = function (player, code, event) {
            if (event) {
                event.preventDefault();
            }
            return true;
        };
        /**
         * Starts the game (currently a no-op).
         */
        Gameplay.prototype.onGamePlay = function () {
            console.log("Playing!");
        };
        /**
         * Pauses the game (currently a no-op).
         */
        Gameplay.prototype.onGamePause = function () {
            console.log("Paused.");
        };
        /**
         * Closes the game (currently a no-op).
         */
        Gameplay.prototype.onGameClose = function () {
            this.EightBitter.storage.autoSave();
            console.log("Closed.");
        };
        return Gameplay;
    }(GameStartr.Gameplay));
    FullScreenPokemon_1.Gameplay = Gameplay;
    /**
     * Graphics functions used by FullScreenPokemon instances.
     */
    var Graphics = (function (_super) {
        __extends(Graphics, _super);
        function Graphics() {
            _super.apply(this, arguments);
        }
        /**
         * Collects all unique Things that should be kept on top of battle intro animations.
         *
         * @param thingsRaw   Titles of and/or references to Things that should be kept.
         * @returns The unique Things that will be kept.
         */
        Graphics.prototype.collectBattleKeptThings = function (thingsRaw) {
            var things = [this.EightBitter.player];
            var used = (_a = {},
                _a[this.EightBitter.player.title] = this.EightBitter.player,
                _a
            );
            for (var _i = 0, thingsRaw_1 = thingsRaw; _i < thingsRaw_1.length; _i++) {
                var thingRaw = thingsRaw_1[_i];
                var thing = thingRaw.constructor === String
                    ? this.EightBitter.utilities.getThingById(thingRaw)
                    : thingRaw;
                if (!used[thing.title]) {
                    used[thing.title] = thing;
                    things.push(thing);
                }
            }
            return things;
            var _a;
        };
        /**
         * Moves all kept Things in a battle to the Text group for animations.
         *
         * @param batleInfo    In-game state and settings for an ongoing battle.
         */
        Graphics.prototype.moveBattleKeptThingsToText = function (battleInfo) {
            var keptThings = battleInfo.keptThings;
            if (!keptThings) {
                return;
            }
            for (var _i = 0, keptThings_1 = keptThings; _i < keptThings_1.length; _i++) {
                var keptThing = keptThings_1[_i];
                this.EightBitter.GroupHolder.switchMemberGroup(keptThing, keptThing.groupType, "Text");
            }
        };
        /**
         * Moves all kept Things in a battle back to their original groups.
         *
         * @param batleInfo    In-game state and settings for an ongoing battle.
         */
        Graphics.prototype.moveBattleKeptThingsBack = function (battleInfo) {
            var keptThings = battleInfo.keptThings;
            if (!keptThings) {
                return;
            }
            for (var _i = 0, keptThings_2 = keptThings; _i < keptThings_2.length; _i++) {
                var keptThing = keptThings_2[_i];
                this.EightBitter.GroupHolder.switchMemberGroup(keptThing, "Text", keptThing.groupType);
            }
        };
        return Graphics;
    }(GameStartr.Graphics));
    FullScreenPokemon_1.Graphics = Graphics;
    /**
     * Input functions used by IGameStartr instances.
     */
    var Inputs = (function (_super) {
        __extends(Inputs, _super);
        function Inputs() {
            _super.apply(this, arguments);
        }
        /**
         * Checks whether direction keys such as up may trigger, which is true if the
         * game isn't paused, the isn't an active menu, and the MapScreener doesn't
         * specify blockInputs = true.
         *
         * @returns Whether direction keys may trigger.
         */
        Inputs.prototype.canDirectionsTrigger = function () {
            if (this.EightBitter.GamesRunner.getPaused()) {
                return false;
            }
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                return true;
            }
            return !this.EightBitter.MapScreener.blockInputs;
        };
        /**
         * Reacts to a Character simulating an up key press. If possible, this causes
         * walking in the up direction. The onKeyDownUp mod trigger is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownUp = function (thing, event) {
            var _this = this;
            if (!this.canDirectionsTrigger()) {
                return;
            }
            if (thing.player) {
                thing.keys[Direction.Top] = true;
                this.EightBitter.TimeHandler.addEvent(function () { return _this.keyDownDirectionReal(thing, 0); }, FullScreenPokemon_1.InputTimeTolerance);
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownUpReal");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to a Character simulating a right key press. If possible, this causes
         * walking in the right direction. The onKeyDownRight mod trigger is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownRight = function (thing, event) {
            var _this = this;
            if (!this.canDirectionsTrigger()) {
                return;
            }
            if (thing.player) {
                thing.keys[Direction.Right] = true;
                this.EightBitter.TimeHandler.addEvent(function () { return _this.keyDownDirectionReal(thing, 1); }, FullScreenPokemon_1.InputTimeTolerance);
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to a Character simulating a down key press. If possible, this causes
         * walking in the down direction. The onKeyDownDown mod trigger is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownDown = function (thing, event) {
            var _this = this;
            if (!this.canDirectionsTrigger()) {
                return;
            }
            if (thing.player) {
                thing.keys[Direction.Bottom] = true;
            }
            this.EightBitter.TimeHandler.addEvent(function () { return _this.keyDownDirectionReal(thing, 2); }, 2);
            this.EightBitter.ModAttacher.fireEvent("onKeyDownDown");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to a Character simulating a left key press. If possible, this causes
         * walking in the left direction. The onKeyDownLeft mod trigger is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownLeft = function (thing, event) {
            var _this = this;
            if (!this.canDirectionsTrigger()) {
                return;
            }
            if (thing.player) {
                thing.keys[Direction.Left] = true;
                this.EightBitter.TimeHandler.addEvent(function () { return _this.keyDownDirectionReal(thing, 3); }, 3);
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownLeft");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Driver for a direction key being pressed. The MenuGraphr's active menu reacts
         * to the movement if it exists, or the triggering Character attempts to walk
         * if not. The onKeyDownDirectionReal mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownDirectionReal = function (thing, direction) {
            if (!thing.player || !thing.keys[direction]) {
                return;
            }
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.MenuGrapher.registerDirection(direction);
            }
            else {
                if (thing.direction !== direction) {
                    thing.turning = direction;
                }
                if (thing.canKeyWalking && !thing.shouldWalk) {
                    this.EightBitter.physics.setPlayerDirection(thing, direction);
                    thing.canKeyWalking = false;
                }
                else {
                    thing.nextDirection = direction;
                }
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownDirectionReal", direction);
        };
        /**
         * Reacts to the A key being pressed. The MenuGraphr's active menu reacts to
         * the selection if it exists. The onKeyDownA mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownA = function (thing, event) {
            if (this.EightBitter.GamesRunner.getPaused()) {
                return;
            }
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.MenuGrapher.registerA();
            }
            else if (thing.bordering[thing.direction]) {
                if (thing.bordering[thing.direction].activate) {
                    thing.bordering[thing.direction].activate(thing, thing.bordering[thing.direction]);
                }
                if (thing.keys) {
                    thing.keys.a = true;
                }
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownA");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the B key being pressed. The MenuGraphr's active menu reacts to
         * the deselection if it exists. The onKeyDownB mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownB = function (thing, event) {
            if (this.EightBitter.GamesRunner.getPaused()) {
                return;
            }
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.MenuGrapher.registerB();
            }
            else if (thing.keys) {
                thing.keys.b = true;
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownB");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the pause key being pressed. The game is paused if it isn't
         * already. The onKeyDownPause mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownPause = function (thing, event) {
            this.EightBitter.menus.togglePauseMenu(thing);
            this.EightBitter.ModAttacher.fireEvent("onKeyDownPause");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the mute key being pressed. The game has mute toggled, and the
         * onKeyDownMute mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyDownMute = function (thing, event) {
            this.EightBitter.AudioPlayer.toggleMuted();
            this.EightBitter.ModAttacher.fireEvent("onKeyDownMute");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the select key being pressed. Toggles the use of the registered item.
         *
         * @param thing   The triggering Player.
         * @param event   The original user-caused Event.
         * @todo Extend the use for any registered item, not just the bicycle.
         */
        Inputs.prototype.keyDownSelect = function (thing, event) {
            if (this.EightBitter.MenuGrapher.getActiveMenu() || thing.walking) {
                return;
            }
            this.EightBitter.ModAttacher.fireEvent("onKeyDownSelect");
            var selectItem = this.EightBitter.ItemsHolder.getItem("SelectItem");
            if (!selectItem) {
                return;
            }
            var itemSchema = this.EightBitter.MathDecider.getConstant("items")[selectItem];
            if (!itemSchema.bagActivate.call(this, thing, itemSchema)) {
                this.EightBitter.menus.displayMessage(thing, itemSchema.error);
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the left key being lifted. The onKeyUpLeft mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpLeft = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpLeft");
            if (thing.player) {
                thing.keys[3] = false;
                if (thing.nextDirection === 3) {
                    delete thing.nextDirection;
                }
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the right key being lifted. The onKeyUpRight mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpRight = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpRight");
            if (thing.player) {
                thing.keys[1] = false;
                if (thing.nextDirection === 1) {
                    delete thing.nextDirection;
                }
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the up key being lifted. The onKeyUpUp mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpUp = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpUp");
            if (thing.player) {
                thing.keys[0] = false;
                if (thing.nextDirection === 0) {
                    delete thing.nextDirection;
                }
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the down key being lifted. The onKeyUpDown mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpDown = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpDown");
            if (thing.player) {
                thing.keys[2] = false;
                if (thing.nextDirection === 2) {
                    delete thing.nextDirection;
                }
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the A key being lifted. The onKeyUpA mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpA = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpA");
            if (thing.player) {
                thing.keys.a = false;
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the B key being lifted. The onKeyUpB mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpB = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpB");
            if (thing.player) {
                thing.keys.b = false;
            }
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the pause key being lifted. The onKeyUpPause mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.keyUpPause = function (thing, event) {
            this.EightBitter.ModAttacher.fireEvent("onKeyUpPause");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        /**
         * Reacts to the context menu being activated. The pause menu is opened,
         * and the onMouseDownRight mod event is fired.
         *
         * @param thing   The triggering Character.
         * @param event   The original user-caused Event.
         */
        Inputs.prototype.mouseDownRight = function (thing, event) {
            this.EightBitter.menus.togglePauseMenu(thing);
            this.EightBitter.ModAttacher.fireEvent("onMouseDownRight");
            if (event && event.preventDefault) {
                event.preventDefault();
            }
        };
        return Inputs;
    }(EightBittr.Component));
    FullScreenPokemon_1.Inputs = Inputs;
    /**
     * Macro functions used by FullScreenPokemon instances.
     */
    var Macros = (function (_super) {
        __extends(Macros, _super);
        function Macros() {
            _super.apply(this, arguments);
        }
        /**
         * Macro Function used to create an alternating pattern of Things.
         *
         * @param reference   Settings for a Checkered macro.
         * @returns A checkered pattern of Things.
         */
        Macros.prototype.macroCheckered = function (reference) {
            var xStart = reference.x || 0;
            var yStart = reference.y || 0;
            var xnum = reference.xnum || 1;
            var ynum = reference.ynum || 1;
            var xwidth = reference.xwidth || 8;
            var yheight = reference.yheight || 8;
            var offset = reference.offset || 0;
            var things = reference.things;
            var mod = things.length;
            var output = [];
            var y;
            y = yStart;
            for (var i = 0; i < ynum; i += 1) {
                var x = xStart;
                for (var j = 0; j < xnum; j += 1) {
                    var thing = reference.things[(i + j + offset) % mod];
                    if (thing !== "") {
                        output.push({
                            x: x,
                            y: y,
                            thing: thing
                        });
                    }
                    x += xwidth;
                }
                y += yheight;
            }
            return output;
        };
        /**
         * Macro Function used to create a body of water.
         *
         * @param reference   Settings for a Water macro.
         * @returns A body of water.
         */
        Macros.prototype.macroWater = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var width = reference.width || 8;
            var height = reference.height || 8;
            var open = reference.open || [true, true, true, true];
            var output = [{
                    thing: "Water",
                    x: x,
                    y: y,
                    width: width,
                    height: height
                }];
            if (!open[0]) {
                output.push({
                    thing: "WaterEdgeTop",
                    x: x,
                    y: y,
                    width: width
                });
            }
            if (!open[1]) {
                output.push({
                    thing: "WaterEdgeRight",
                    x: x + width - 4,
                    y: open[0] ? y : y + 4,
                    height: open[0] ? height : height - 4
                });
            }
            if (!open[2]) {
                output.push({
                    thing: "WaterEdgeBottom",
                    x: x,
                    y: y + height - 4,
                    width: width
                });
            }
            if (!open[3]) {
                output.push({
                    thing: "WaterEdgeLeft",
                    x: x,
                    y: y,
                    height: height
                });
            }
            return output;
        };
        /**
         * Macro Function used to create a House.
         *
         * @param reference   Settings for a House macro.
         * @returns A House.
         */
        Macros.prototype.macroHouse = function (reference) {
            var width = reference.width || 32;
            var stories = reference.stories || 1;
            var output = [];
            var x = reference.x || 0;
            var y = reference.y || 0;
            if (stories === 1) {
                output.push({
                    thing: "HouseTopRoofLeft",
                    x: x,
                    y: y
                });
                output.push({
                    thing: "HouseTopRoof",
                    x: x + 8,
                    y: y,
                    width: width - 16
                });
                output.push({
                    thing: "HouseTopRoofRight",
                    x: x + width - 8,
                    y: y
                });
                output.push({
                    thing: "HouseLeft",
                    x: x,
                    y: y + 8
                });
                output.push({
                    thing: "HouseRight",
                    x: x + width - 8,
                    y: y + 8
                });
                if (reference.door) {
                    output.push({
                        thing: "HouseMiddle",
                        x: x + 16,
                        y: y + 8,
                        width: width - 24
                    });
                }
                else {
                    output.push({
                        thing: "HouseMiddle",
                        x: x + 8,
                        y: y + 8,
                        width: width - 16
                    });
                }
            }
            else {
                output.push({
                    thing: "HouseTop",
                    x: x,
                    y: y
                });
            }
            y += 16;
            for (var i = 1; i < stories; i += 1) {
                output.push({
                    thing: "HouseCenterLeft",
                    x: x,
                    y: y
                });
                output.push({
                    thing: "HouseCenterRight",
                    x: x + 16,
                    y: y,
                    width: width - 16
                });
                y += 8;
            }
            if (reference.door) {
                var door = {
                    thing: "Door",
                    x: x + 8,
                    y: y - 8,
                    requireDirection: 0
                };
                if (reference.entrance) {
                    door.entrance = reference.entrance;
                }
                if (reference.transport) {
                    door.transport = reference.transport;
                }
                output.push(door);
            }
            return output;
        };
        /**
         * Macro Function used to create a Large House.
         *
         * @param reference   Settings for a Large House macro.
         * @returns A Large House.
         */
        Macros.prototype.macroHouseLarge = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var width = reference.width || 48;
            var stories = reference.stories || 1;
            var doorOffset = reference.doorOffset || 16;
            var output = [
                {
                    thing: "HouseLargeTopLeft",
                    x: x,
                    y: y
                }, {
                    thing: "HouseLargeTopMiddle",
                    x: x + 8,
                    y: y,
                    width: width - 16
                }, {
                    thing: "HouseLargeTopRight",
                    x: x + width - 8,
                    y: y
                }];
            y += 20;
            for (var i = 2; i < stories; i += 1) {
                output.push({
                    thing: "HouseLargeCenter",
                    x: x,
                    y: y,
                    width: width
                });
                if (reference.white) {
                    output.push({
                        thing: "HouseWallWhitewash",
                        x: reference.white.start,
                        y: y,
                        width: reference.white.end - reference.white.start,
                        position: "end"
                    });
                }
                y += 16;
            }
            if (!reference.door) {
                output.push({
                    thing: "HouseLargeCenterLeft",
                    x: x,
                    y: y,
                    width: 16
                });
                output.push({
                    thing: "HouseLargeCenterMiddle",
                    x: x + 16,
                    y: y,
                    width: 8
                });
                output.push({
                    thing: "HouseLargeCenterRight",
                    x: x + 24,
                    y: y,
                    width: width - 24
                });
            }
            else {
                output.push({
                    thing: "HouseLargeCenterLeft",
                    x: x,
                    y: y,
                    width: doorOffset
                });
                output.push({
                    thing: "HouseLargeCenterMiddle",
                    x: x + doorOffset,
                    y: y,
                    width: 8,
                    height: 4
                });
                output.push({
                    thing: "HouseLargeCenterRight",
                    x: x + doorOffset + 8,
                    y: y,
                    width: width - doorOffset - 8
                });
                if (reference.white) {
                    output.push({
                        thing: "HouseWallWhitewash",
                        x: reference.white.start,
                        y: y,
                        width: reference.white.end - reference.white.start,
                        position: "end"
                    });
                }
                y += 16;
                var door = {
                    thing: "Door",
                    x: x + doorOffset,
                    y: y - 12,
                    requireDirection: 0,
                    id: reference.id
                };
                if (reference.entrance) {
                    door.entrance = reference.entrance;
                }
                if (reference.transport) {
                    door.transport = reference.transport;
                }
                output.push(door);
            }
            return output;
        };
        /**
         * Macro Function used to create a Gym.
         *
         * @param reference   Settings for a Gym macro.
         * @returns A Gym.
         */
        Macros.prototype.macroGym = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var width = reference.width || 48;
            var stories = reference.stories || 2;
            return [
                {
                    macro: "HouseLarge",
                    x: x,
                    y: y,
                    width: width,
                    stories: stories,
                    white: {
                        start: x + 4,
                        end: x + width - 4
                    },
                    transport: reference.transport,
                    entrance: reference.entrance,
                    door: true,
                    doorOffset: width - 16
                }, {
                    thing: "GymLabel",
                    x: x + 16,
                    y: y + 16,
                    width: width - 32
                }];
        };
        /**
         * Macro Function used to create a Building.
         *
         * @param reference   Settings for a Building macro.
         * @returns A Building.
         */
        Macros.prototype.macroBuilding = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var width = reference.width || 32;
            var stories = reference.stories || 1;
            var doorOffset = reference.doorOffset || 8;
            var output = [
                {
                    thing: "BuildingTopLeft",
                    x: x,
                    y: y
                }, {
                    thing: "BuildingTopMiddle",
                    x: x + 4,
                    y: y,
                    width: width - 8
                }, {
                    thing: "BuildingTopRight",
                    x: x + width - 4,
                    y: y
                }];
            y += 16;
            for (var i = 0; i < stories; i += 1) {
                output.push({
                    thing: "BuildingMiddleLeft",
                    x: x,
                    y: y
                });
                output.push({
                    thing: "BuildingMiddleWindow",
                    x: x + 4,
                    y: y,
                    width: width - 8,
                    height: 4
                });
                output.push({
                    thing: "BuildingMiddleMiddle",
                    x: x + 4,
                    y: y + 4,
                    width: width - 8,
                    height: 4
                });
                output.push({
                    thing: "BuildingMiddleRight",
                    x: x + width - 4,
                    y: y
                });
                y += 8;
            }
            output.push({
                thing: "BuildingMiddleLeft",
                x: x,
                y: y,
                height: 4
            });
            output.push({
                thing: "BuildingMiddleRight",
                x: x + width - 4,
                y: y,
                height: 4
            });
            if (reference.door) {
                var door = {
                    thing: "Door",
                    x: x + doorOffset,
                    y: y,
                    entrance: reference.entrance
                };
                if (reference.entrance) {
                    door.entrance = reference.entrance;
                }
                if (reference.transport) {
                    door.transport = reference.transport;
                }
                output.push({
                    thing: "BuildingMiddleMiddle",
                    x: x + 4,
                    y: y,
                    height: 4,
                    width: doorOffset - 4
                });
                output.push(door);
                output.push({
                    thing: "BuildingMiddleMiddle",
                    x: x + doorOffset + 8,
                    y: y,
                    height: 4,
                    width: width - doorOffset - 12
                });
                output.push({
                    thing: "BuildingBottomLeft",
                    x: x,
                    y: y + 4,
                    width: doorOffset
                });
                output.push({
                    thing: "BuildingBottomRight",
                    x: x + doorOffset + 8,
                    y: y + 4,
                    width: width - doorOffset - 8
                });
            }
            else {
                output.push({
                    thing: "BuildingMiddleMiddle",
                    x: x + 4,
                    y: y,
                    width: width - 8,
                    height: 4
                });
                output.push({
                    thing: "BuildingBottom",
                    x: x,
                    y: y + 4,
                    width: width
                });
            }
            if (reference.label) {
                output.push({
                    thing: reference.label + "Label",
                    x: x + 16,
                    y: y
                });
            }
            return output;
        };
        /**
         * Macro Function used to create a Mountain.
         *
         * @param reference   Settings for a Mountain macro.
         * @returns A Mountain.
         */
        Macros.prototype.macroMountain = function (reference) {
            var openingOffset = reference.openingOffset || 8;
            var output = [];
            var x = reference.x || 0;
            var y = reference.y || 0;
            var width = reference.width || 8;
            var height = reference.height || 8;
            if (reference.right) {
                if (reference.top) {
                    output.push({
                        thing: "MountainTopRight",
                        x: x + width - 8,
                        y: y
                    });
                    output.push({
                        thing: "MountainRight",
                        x: x + width - 8,
                        y: y + 4
                    });
                    output.push({
                        thing: "MountainTopRight",
                        x: x + width - 4,
                        y: y + 4
                    });
                }
                else {
                    output.push({
                        thing: "MountainRight",
                        x: x + width - 8,
                        y: y,
                        width: 8,
                        height: 8
                    });
                }
                if (reference.bottom) {
                    output.push({
                        thing: "MountainBottomRight",
                        x: x + width - 8,
                        y: y + height - 8
                    });
                    output.push({
                        thing: "MountainRight",
                        x: x + width - 4,
                        y: y + height - 8
                    });
                    output.push({
                        thing: "MountainBottom",
                        x: x + width - 8,
                        y: y + height - 4
                    });
                    output.push({
                        thing: "MountainBottomRight",
                        x: x + width - 4,
                        y: y + height - 4
                    });
                }
                else {
                    output.push({
                        thing: "MountainRight",
                        x: x + width - 8,
                        y: y + height - 8,
                        width: 8,
                        height: 8
                    });
                }
                if (height > 16) {
                    output.push({
                        thing: "MountainRight",
                        x: x + width - 8,
                        y: y + 8,
                        width: 8,
                        height: height - 16
                    });
                }
                width -= 8;
            }
            if (reference.left) {
                if (reference.top) {
                    output.push({
                        thing: "MountainTopLeft",
                        x: x + 4,
                        y: y
                    });
                    output.push({
                        thing: "MountainTopLeft",
                        x: x,
                        y: y + 4
                    });
                    output.push({
                        thing: "MountainLeft",
                        x: x + 4,
                        y: y + 4
                    });
                }
                else {
                    output.push({
                        thing: "MountainLeft",
                        x: x,
                        y: y,
                        width: 8,
                        height: 8
                    });
                }
                if (reference.bottom) {
                    output.push({
                        thing: "MountainLeft",
                        x: x,
                        y: y + height - 8
                    });
                    output.push({
                        thing: "MountainBottomLeft",
                        x: x + 4,
                        y: y + height - 8
                    });
                    output.push({
                        thing: "MountainBottomLeft",
                        x: x,
                        y: y + height - 4
                    });
                    output.push({
                        thing: "MountainBottom",
                        x: x + 4,
                        y: y + height - 4
                    });
                }
                else {
                    output.push({
                        thing: "MountainLeft",
                        x: x,
                        y: y + height - 8,
                        width: 8,
                        height: 8
                    });
                }
                if (height > 16) {
                    output.push({
                        thing: "MountainLeft",
                        x: x,
                        y: y + 8,
                        width: 8,
                        height: height - 16
                    });
                }
                width -= 8;
                x += 8;
            }
            if (reference.top && width > 0) {
                output.push({
                    thing: "MountainTop",
                    x: x,
                    y: y,
                    width: width
                });
                y += 5;
                height -= 5;
            }
            if (reference.bottom && width > 0) {
                if (reference.opening) {
                    if (openingOffset > 0) {
                        output.push({
                            thing: "MountainBottom",
                            x: x,
                            y: y + height - 8,
                            width: openingOffset,
                            height: 8
                        });
                    }
                    output.push({
                        thing: "CaveOpening",
                        x: x + openingOffset,
                        y: y + height - 8,
                        entrance: reference.entrance,
                        transport: reference.transport
                    });
                    if (openingOffset < width) {
                        output.push({
                            thing: "MountainBottom",
                            x: x + openingOffset + 8,
                            y: y + height - 8,
                            width: width - openingOffset - 8,
                            height: 8
                        });
                    }
                }
                else {
                    output.push({
                        thing: "MountainBottom",
                        x: x,
                        y: y + height - 8,
                        width: width,
                        height: 8
                    });
                }
                height -= 8;
            }
            if (width > 0 && height > 0) {
                output.push({
                    thing: "Mountain",
                    x: x,
                    y: y,
                    width: width,
                    height: height
                });
            }
            return output;
        };
        /**
         * Macro Function used to create a Pokemon Center.
         *
         * @param reference   Settings for a Pokemon Center macro.
         * @returns A Pokemon Center.
         */
        Macros.prototype.macroPokeCenter = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var output = [
                {
                    thing: "FloorDiamonds",
                    width: 112,
                    height: 64,
                    x: x,
                    y: y
                }, {
                    thing: "SquareWallTop",
                    x: x,
                    y: y,
                    height: 16
                }, {
                    thing: "HealingMachine",
                    x: x + 8,
                    y: y,
                    id: "HealingMachine"
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 8,
                    y: y,
                    width: 32
                }, {
                    thing: "PokeCenterPoster",
                    x: x + 28,
                    y: y
                }, {
                    thing: "SquareWallTop",
                    x: x + 40,
                    y: y,
                    height: 16
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 48,
                    y: y,
                    width: 32
                }, {
                    thing: "StairsVertical",
                    x: x + 80,
                    y: y
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 88,
                    y: y
                }, {
                    thing: "StairsVertical",
                    x: x + 96,
                    y: y
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 104,
                    y: y
                }, {
                    thing: "Nurse",
                    id: "Nurse",
                    x: x + 24,
                    y: y + 8
                }, {
                    thing: "SquareWallFront",
                    x: x,
                    y: y + 16
                }, {
                    thing: "PokeCenterDeskLeft",
                    x: x + 8,
                    y: y + 16
                }, {
                    thing: "PokeCenterDesk",
                    x: x + 12,
                    y: y + 16,
                    width: 32
                }, {
                    thing: "CutsceneResponder",
                    x: x + 24,
                    y: y + 16,
                    cutscene: "PokeCenter",
                    keepAlive: true
                }, {
                    thing: "SquareWallFront",
                    x: x + 40,
                    y: y + 16
                }, {
                    thing: "PokeCenterDesk",
                    x: x + 48,
                    y: y + 16,
                    width: 32
                }, {
                    thing: "PokeCenterDeskBlocker",
                    x: x + 80,
                    y: y + 16
                }, {
                    thing: "DeskWoman",
                    x: x + 88,
                    y: y + 16,
                    dialog: [
                        "Welcome to the Cable Club!",
                        "This area is reserved for 2 friends who are linked by cable."
                    ]
                }, {
                    thing: "PokeCenterDeskBlocker",
                    x: x + 96,
                    y: y + 16
                }, {
                    thing: "PokeCenterDesk",
                    x: x + 104,
                    y: y + 16
                }, {
                    thing: "Buzzer",
                    x: x + 28,
                    y: y + 19
                }, {
                    thing: "Computer",
                    x: x + 104,
                    y: y + 24
                }, {
                    thing: "SofaLeft",
                    x: x,
                    y: y + 32
                }, {
                    thing: "PottedPalmTree",
                    x: x,
                    y: y + 48,
                    width: 16
                }, {
                    thing: "PottedPalmTree",
                    x: x + 48,
                    y: y + 48,
                    width: 16
                }, {
                    thing: "PottedPalmTree",
                    x: x + 96,
                    y: y + 48,
                    width: 16
                }, {
                    thing: "Doormat",
                    x: x + 24,
                    y: y + 56,
                    width: 16,
                    entrance: reference.entrance
                }];
            if (reference.transport) {
                output.push({
                    thing: "HiddenTransporter",
                    x: x + 24,
                    y: y + 56,
                    width: 16,
                    transport: reference.transport,
                    requireDirection: 2
                });
            }
            if (!reference.excludeCoolTrainer) {
                output.push({
                    thing: "CoolTrainerM",
                    x: x,
                    y: y + 32,
                    offsetX: this.EightBitter.unitsize * 1.75,
                    offsetY: 0,
                    direction: 1,
                    sitting: true,
                    dialogDirections: true,
                    dialog: reference.coolTrainerDialog || [
                        "",
                        "%%%%%%%POKEMON%%%%%%% CENTERs heal your tired, hurt, or fainted %%%%%%%POKEMON%%%%%%%!",
                        "",
                        ""
                    ]
                });
            }
            return output;
        };
        /**
         * Macro Function used to create a PokeMart.
         *
         * @param reference   Settings for a PokeMart macro.
         * @returns A PokeMart.
         */
        Macros.prototype.macroPokeMart = function (reference) {
            var x = reference.x || 0;
            var y = reference.y || 0;
            var output = [
                {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x,
                    y: y,
                    width: 16,
                    height: 4
                }, {
                    thing: "FloorDiamonds",
                    x: x,
                    y: y + 8,
                    width: 64,
                    height: 56
                }, {
                    thing: "FloorDiamondsDark",
                    x: x,
                    y: y + 16,
                    height: 8
                }, {
                    thing: "StoreFridge",
                    x: x + 16,
                    y: y,
                    width: 32
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 48,
                    y: y,
                    width: 16,
                    height: 4
                }, {
                    thing: "StoreSaleBin",
                    x: x,
                    y: y + 4,
                    width: 16
                }, {
                    thing: "StoreSaleBin",
                    x: x + 48,
                    y: y + 4,
                    width: 16
                }, {
                    thing: "StoreAisle",
                    x: x,
                    y: y + 24,
                    height: 8
                }, {
                    thing: "StoreAisle",
                    x: x + 32,
                    y: y + 24,
                    width: 32
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x,
                    y: y + 32
                }, {
                    thing: "WallIndoorHorizontalBandsDark",
                    x: x + 8,
                    y: y + 32,
                    height: 4
                }, {
                    thing: "FloorDiamondsDark",
                    x: x + 16,
                    y: y + 32,
                    height: 24
                }, {
                    thing: "SquareWallTop",
                    x: x + 8,
                    y: y + 36,
                    height: 16
                }, {
                    thing: "Cashier",
                    x: x,
                    y: y + 40,
                    direction: 1
                }, {
                    thing: "FloorDiamondsDark",
                    x: x,
                    y: y + 40
                }, {
                    thing: "Register",
                    x: x + 8,
                    y: y + 40,
                    id: reference.responderId,
                    activate: this.EightBitter.animations.activateCutsceneResponder,
                    cutscene: "PokeMart",
                    keepAlive: true,
                    items: reference.items,
                    dialog: reference.responderDialog
                }, {
                    thing: "PokeCenterDeskLeft",
                    x: x,
                    y: y + 48
                }, {
                    thing: "PokeCenterDesk",
                    x: x + 4,
                    y: y + 48,
                    width: 12
                }, {
                    thing: "FloorDiamondsDark",
                    x: x,
                    y: y + 56
                }, {
                    thing: "Doormat",
                    x: x + 24,
                    y: y + 56,
                    width: 16,
                    entrance: reference.entrance
                }];
            if (reference.transport) {
                output.push({
                    thing: "HiddenTransporter",
                    x: x + 24,
                    y: y + 56,
                    width: 16,
                    transport: reference.transport,
                    requireDirection: 2
                });
            }
            return output;
        };
        return Macros;
    }(EightBittr.Component));
    FullScreenPokemon_1.Macros = Macros;
    /**
     * Maintenance functions used by FullScreenPokemon instances.
     */
    var Maintenance = (function (_super) {
        __extends(Maintenance, _super);
        function Maintenance() {
            _super.apply(this, arguments);
        }
        /**
         * Generic maintenance Function for a group of Things. For each Thing, if
         * it isn't alive, it's removed from the group.
         *
         * @param things   A group of Things to maintain.
         */
        Maintenance.prototype.maintainGeneric = function (things) {
            for (var i = 0; i < things.length; i += 1) {
                if (!things[i].alive) {
                    this.EightBitter.utilities.arrayDeleteThing(things[i], things, i);
                    i -= 1;
                }
            }
        };
        /**
         * Maintenance for all active Characters. Walking, grass maintenance, alive
         * checking, and quadrant maintenance are performed.
         *
         * @param characters   The Characters group of Things.
         */
        Maintenance.prototype.maintainCharacters = function (characters) {
            for (var i = 0; i < characters.length; i += 1) {
                var character = characters[i];
                this.EightBitter.physics.shiftCharacter(character);
                if (character.shouldWalk && !this.EightBitter.MenuGrapher.getActiveMenu()) {
                    character.onWalkingStart(character, character.direction);
                    character.shouldWalk = false;
                }
                if (character.grass) {
                    this.maintainCharacterGrass(character, character.grass);
                }
                if (!character.alive && !character.outerOk) {
                    this.EightBitter.utilities.arrayDeleteThing(character, characters, i);
                    i -= 1;
                    continue;
                }
                for (var j = 0; j < 4; j += 1) {
                    character.bordering[j] = undefined;
                }
                this.EightBitter.QuadsKeeper.determineThingQuadrants(character);
                this.EightBitter.ThingHitter.checkHitsForThing(character);
            }
        };
        /**
         * Maintenance for a Character visually in grass. The shadow is updated to
         * move or be deleted as needed.
         *
         * @param thing   A Character in grass.
         * @param other   Grass that thing is in.
         */
        Maintenance.prototype.maintainCharacterGrass = function (thing, other) {
            // If thing is no longer in grass, delete the shadow and stop
            if (!this.EightBitter.physics.isThingWithinGrass(thing, other)) {
                this.EightBitter.physics.killNormal(thing.shadow);
                thing.canvas.height = thing.height * this.EightBitter.unitsize;
                this.EightBitter.PixelDrawer.setThingSprite(thing);
                delete thing.shadow;
                delete thing.grass;
                return;
            }
            // Keep the shadow in sync with thing in position and visuals.
            this.EightBitter.physics.setLeft(thing.shadow, thing.left);
            this.EightBitter.physics.setTop(thing.shadow, thing.top);
            if (thing.shadow.className !== thing.className) {
                this.EightBitter.graphics.setClass(thing.shadow, thing.className);
            }
        };
        /**
         * Maintenance for a Player. The screen is scrolled according to the global
         * MapScreener.scrollability.
         *
         * @param player   An in-game Player Thing.
         */
        Maintenance.prototype.maintainPlayer = function (player) {
            if (!player || !player.alive) {
                return;
            }
            switch (this.EightBitter.MapScreener.variables.scrollability) {
                case Scrollability.Horizontal:
                    this.EightBitter.scrolling.scrollWindow(this.EightBitter.scrolling.getHorizontalScrollAmount());
                    return;
                case Scrollability.Vertical:
                    this.EightBitter.scrolling.scrollWindow(0, this.EightBitter.scrolling.getVerticalScrollAmount());
                    return;
                case Scrollability.Both:
                    this.EightBitter.scrolling.scrollWindow(this.EightBitter.scrolling.getHorizontalScrollAmount(), this.EightBitter.scrolling.getVerticalScrollAmount());
                    return;
                default:
                    return;
            }
        };
        return Maintenance;
    }(EightBittr.Component));
    FullScreenPokemon_1.Maintenance = Maintenance;
    /**
     * Map functions used by FullScreenPokemon instances.
     */
    var Maps = (function (_super) {
        __extends(Maps, _super);
        function Maps() {
            _super.apply(this, arguments);
        }
        /**
         * Processes additional Thing attributes. For each attribute the Area's
         * class says it may have, if it has it, the attribute value proliferated
         * onto the Area.
         *
         * @param area The Area being processed.
         */
        Maps.prototype.areaProcess = function (area) {
            var attributes = area.attributes;
            for (var attribute in attributes) {
                if (area[attribute]) {
                    this.EightBitter.utilities.proliferate(area, attributes[attribute]);
                }
            }
        };
        /**
         * Adds a Thing via addPreThing based on the specifications in a PreThing.
         * This is done relative to MapScreener.left and MapScreener.top.
         *
         * @param prething   A PreThing whose Thing is to be added to the game.
         */
        Maps.prototype.addPreThing = function (prething) {
            var _this = this;
            var thing = prething.thing;
            var position = prething.position || thing.position;
            if (thing.spawned) {
                return;
            }
            thing.spawned = true;
            thing.areaName = thing.areaName || this.EightBitter.AreaSpawner.getAreaName();
            thing.mapName = thing.mapName || this.EightBitter.AreaSpawner.getMapName();
            this.EightBitter.things.add(thing, prething.left * this.EightBitter.unitsize - this.EightBitter.MapScreener.left, prething.top * this.EightBitter.unitsize - this.EightBitter.MapScreener.top, true);
            // Either the prething or thing, in that order, may request to be in the
            // front or back of the container
            if (position) {
                this.EightBitter.TimeHandler.addEvent(function () {
                    switch (position) {
                        case "beginning":
                            _this.EightBitter.utilities.arrayToBeginning(thing, _this.EightBitter.GroupHolder.getGroup(thing.groupType));
                            break;
                        case "end":
                            _this.EightBitter.utilities.arrayToEnd(thing, _this.EightBitter.GroupHolder.getGroup(thing.groupType));
                            break;
                        default:
                            throw new Error("Unknown position: " + position + ".");
                    }
                });
            }
            this.EightBitter.ModAttacher.fireEvent("onAddPreThing", prething);
        };
        /**
         * Adds a new Player Thing to the game and sets it as EightBitter.player. Any
         * required additional settings (namely keys, power/size, and swimming) are
         * applied here.
         *
         * @param left   A left edge to place the Thing at (by default, 0).
         * @param bottom   A top to place the Thing upon (by default, 0).
         * @param useSavedInfo   Whether an Area's saved info in StateHolder should be
         *                       applied to the Thing's position (by default, false).
         * @returns A newly created Player in the game.
         */
        Maps.prototype.addPlayer = function (left, top, useSavedInfo) {
            if (left === void 0) { left = 0; }
            if (top === void 0) { top = 0; }
            var player = this.EightBitter.player = this.EightBitter.ObjectMaker.make("Player");
            player.keys = player.getKeys();
            this.EightBitter.InputWriter.setEventInformation(player);
            this.EightBitter.things.add(player, left || 0, top || 0, useSavedInfo);
            this.EightBitter.ModAttacher.fireEvent("onAddPlayer", player);
            return player;
        };
        /**
         * Sets the game state to a new Map, resetting all Things and inputs in the
         * process. The mod events are fired.
         *
         * @param name   The name of the Map.
         * @param location   The name of the Location within the Map.
         * @param noEntrance    Whether or not an entry Function should
         *                      be skipped (by default, false).
         * @remarks Most of the work here is done by setLocation.
         */
        Maps.prototype.setMap = function (name, location, noEntrance) {
            if (typeof name === "undefined" || name.constructor === FullScreenPokemon) {
                name = this.EightBitter.AreaSpawner.getMapName();
            }
            var map = this.EightBitter.AreaSpawner.setMap(name);
            this.EightBitter.ModAttacher.fireEvent("onPreSetMap", map);
            this.EightBitter.NumberMaker.resetFromSeed(map.seed);
            this.EightBitter.InputWriter.restartHistory();
            this.EightBitter.ModAttacher.fireEvent("onSetMap", map);
            this.setLocation(location
                || map.locationDefault
                || this.EightBitter.settings.maps.locationDefault, noEntrance);
        };
        /**
         * Sets the game state to a Location within the current map, resetting all
         * Things, inputs, the current Area, PixelRender, and MapScreener in the
         * process. The Location's entry Function is called to bring a new Player
         * into the game if specified. The mod events are fired.
         *
         * @param name   The name of the Location within the Map.
         * @param noEntrance   Whether or not an entry Function should
         *                     be skipped (by default, false).
         */
        Maps.prototype.setLocation = function (name, noEntrance) {
            var _this = this;
            name = name || "0";
            this.EightBitter.AudioPlayer.clearAll();
            this.EightBitter.GroupHolder.clearArrays();
            this.EightBitter.MapScreener.clearScreen();
            this.EightBitter.MenuGrapher.deleteAllMenus();
            this.EightBitter.TimeHandler.cancelAllEvents();
            this.EightBitter.AreaSpawner.setLocation(name);
            this.EightBitter.MapScreener.setVariables();
            var location = this.EightBitter.AreaSpawner.getLocation(name);
            location.area.spawnedBy = {
                name: name,
                timestamp: new Date().getTime()
            };
            this.EightBitter.ModAttacher.fireEvent("onPreSetLocation", location);
            this.EightBitter.PixelDrawer.setBackground(this.EightBitter.AreaSpawner.getArea().background);
            this.EightBitter.StateHolder.setCollection(location.area.map.name + "::" + location.area.name);
            this.EightBitter.QuadsKeeper.resetQuadrants();
            var theme = location.theme || location.area.theme || location.area.map.theme;
            this.EightBitter.MapScreener.theme = theme;
            if (theme && this.EightBitter.AudioPlayer.getThemeName() !== theme) {
                this.EightBitter.AudioPlayer.playTheme(theme);
            }
            if (!noEntrance) {
                location.entry.call(this, location);
            }
            this.EightBitter.ModAttacher.fireEvent("onSetLocation", location);
            this.EightBitter.GamesRunner.play();
            this.EightBitter.animations.animateFadeFromColor({
                color: "Black"
            });
            if (location.push) {
                this.EightBitter.animations.animateCharacterStartWalking(this.EightBitter.player, this.EightBitter.player.direction, function () { return _this.EightBitter.storage.autoSave(); });
            }
        };
        /**
         * Analyzes a PreThing to be placed in one of the
         * cardinal directions of the current Map's boundaries
         * (just outside of the current Area).
         *
         * @param prething   A PreThing whose Thing is to be added to the game.
         * @param direction   The cardinal direction the Character is facing.
         * @remarks Direction is taken in by the .forEach call as the index.
         */
        Maps.prototype.addAfter = function (prething, direction) {
            var prethings = this.EightBitter.AreaSpawner.getPreThings();
            var area = this.EightBitter.AreaSpawner.getArea();
            var map = this.EightBitter.AreaSpawner.getMap();
            var boundaries = this.EightBitter.AreaSpawner.getArea().boundaries;
            prething.direction = direction;
            switch (direction) {
                case 0:
                    prething.x = boundaries.left;
                    prething.y = boundaries.top - 8;
                    prething.width = boundaries.right - boundaries.left;
                    break;
                case 1:
                    prething.x = boundaries.right;
                    prething.y = boundaries.top;
                    prething.height = boundaries.bottom - boundaries.top;
                    break;
                case 2:
                    prething.x = boundaries.left;
                    prething.y = boundaries.bottom;
                    prething.width = boundaries.right - boundaries.left;
                    break;
                case 3:
                    prething.x = boundaries.left - 8;
                    prething.y = boundaries.top;
                    prething.height = boundaries.bottom - boundaries.top;
                    break;
                default:
                    throw new Error("Unknown direction: " + direction + ".");
            }
            this.EightBitter.MapsCreator.analyzePreSwitch(prething, prethings, area, map);
        };
        /**
         * A blank Map entrance Function where no Character is placed.
         */
        Maps.prototype.entranceBlank = function () {
            this.addPlayer(0, 0);
            this.EightBitter.player.hidden = true;
        };
        /**
         * Standard Map entrance Function. Character is placed based on specified Location.
         *
         * @param location   The name of the Location within the Map.
         */
        Maps.prototype.entranceNormal = function (location) {
            this.addPlayer(location.xloc ? location.xloc * this.EightBitter.unitsize : 0, location.yloc ? location.yloc * this.EightBitter.unitsize : 0);
            this.EightBitter.animations.animateCharacterSetDirection(this.EightBitter.player, (typeof location.direction === "undefined"
                ? this.EightBitter.MapScreener.playerDirection
                : location.direction)
                || 0);
            this.EightBitter.scrolling.centerMapScreen();
            if (location.cutscene) {
                this.EightBitter.ScenePlayer.startCutscene(location.cutscene, {
                    player: this.EightBitter.player
                });
            }
            if (location.routine && this.EightBitter.ScenePlayer.getCutsceneName()) {
                this.EightBitter.ScenePlayer.playRoutine(location.routine);
            }
        };
        /**
         * Map entrace Function used when player is added to the Map at the beginning
         * of play. Retrieves Character position from the previous save state.
         */
        Maps.prototype.entranceResume = function () {
            var savedInfo = this.EightBitter.StateHolder.getChanges("player") || {};
            this.EightBitter.maps.addPlayer(savedInfo.xloc || 0, savedInfo.yloc || 0, true);
            this.EightBitter.animations.animateCharacterSetDirection(this.EightBitter.player, savedInfo.direction || Direction.Top);
            this.EightBitter.scrolling.centerMapScreen();
        };
        /**
         * Runs an AreaSpawner to place its Area's Things in the map.
         *
         * @param thing   An in-game AreaSpawner.
         * @param area   The Area associated with thing.
         */
        Maps.prototype.activateAreaSpawner = function (thing, area) {
            var direction = thing.direction;
            var areaCurrent = this.EightBitter.AreaSpawner.getArea();
            var mapCurrent = this.EightBitter.AreaSpawner.getMap();
            var prethingsCurrent = this.EightBitter.AreaSpawner.getPreThings();
            var left = thing.left + this.EightBitter.MapScreener.left;
            var top = thing.top + this.EightBitter.MapScreener.top;
            switch (direction) {
                case 0:
                    top -= area.height * this.EightBitter.unitsize;
                    break;
                case 1:
                    left += thing.width * this.EightBitter.unitsize;
                    break;
                case 2:
                    top += thing.height * this.EightBitter.unitsize;
                    break;
                case 3:
                    left -= area.width * this.EightBitter.unitsize;
                    break;
                default:
                    throw new Error("Unknown direction: " + direction + ".");
            }
            var x = left / this.EightBitter.unitsize + (thing.offsetX || 0);
            var y = top / this.EightBitter.unitsize + (thing.offsetY || 0);
            this.EightBitter.scrolling.expandMapBoundariesForArea(area, x, y);
            for (var _i = 0, _a = area.creation; _i < _a.length; _i++) {
                var creation = _a[_i];
                // A copy of the command must be used, so as to not modify the original 
                var command = this.EightBitter.utilities.proliferate({
                    noBoundaryStretch: true,
                    areaName: area.name,
                    mapName: area.map.name
                }, creation);
                if (!command.x) {
                    command.x = x;
                }
                else {
                    command.x += x;
                }
                if (!command.y) {
                    command.y = y;
                }
                else {
                    command.y += y;
                }
                // Having an entrance might conflict with previously set Locations
                if (command.hasOwnProperty("entrance")) {
                    delete command.entrance;
                }
                this.EightBitter.MapsCreator.analyzePreSwitch(command, prethingsCurrent, areaCurrent, mapCurrent);
            }
            this.EightBitter.AreaSpawner.spawnArea(FullScreenPokemon_1.DirectionSpawns[direction], this.EightBitter.QuadsKeeper.top / this.EightBitter.unitsize, this.EightBitter.QuadsKeeper.right / this.EightBitter.unitsize, this.EightBitter.QuadsKeeper.bottom / this.EightBitter.unitsize, this.EightBitter.QuadsKeeper.left / this.EightBitter.unitsize);
            area.spawned = true;
            this.EightBitter.physics.killNormal(thing);
        };
        return Maps;
    }(GameStartr.Maps));
    FullScreenPokemon_1.Maps = Maps;
    /**
     * Menu functions used by FullScreenPokemon instances.
     */
    var Menus = (function (_super) {
        __extends(Menus, _super);
        function Menus() {
            _super.apply(this, arguments);
        }
        /**
         * Opens the Pause menu.
         */
        Menus.prototype.openPauseMenu = function () {
            var _this = this;
            var options = [
                {
                    text: "%%%%%%%POKEMON%%%%%%%",
                    callback: function () { return _this.openPokemonMenu({}); }
                }, {
                    text: "ITEM",
                    callback: function (settings) { return _this.openItemsMenu(settings); }
                }, {
                    text: "%%%%%%%PLAYER%%%%%%%",
                    callback: function () { return _this.openPlayerMenu(); }
                }, {
                    text: "SAVE",
                    callback: function () { return _this.openSaveMenu(); }
                }, {
                    text: "OPTION"
                }, {
                    text: "Exit",
                    callback: function () { return _this.closePauseMenu(); }
                }];
            // The Pokedex option is only shown if the Player has one
            if (this.EightBitter.ItemsHolder.getItem("hasPokedex") === true) {
                options.unshift({
                    text: "%%%%%%%POKEDEX%%%%%%%",
                    callback: function () { return _this.openPokedexMenu(); }
                });
            }
            this.EightBitter.MenuGrapher.createMenu("Pause");
            this.EightBitter.MenuGrapher.addMenuList("Pause", {
                options: options
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Pause");
        };
        /**
         * Closes the Pause menu.
         */
        Menus.prototype.closePauseMenu = function () {
            this.EightBitter.MenuGrapher.deleteMenu("Pause");
        };
        /**
         * Toggles whether the Pause menu is open. If there is an active menu, A
         * Start key trigger is registered in the MenuGraphr instead.
         */
        Menus.prototype.togglePauseMenu = function (thing) {
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                this.EightBitter.MenuGrapher.registerStart();
                return;
            }
            var cutsceneSettings = this.EightBitter.ScenePlayer.getCutsceneSettings();
            if (cutsceneSettings && cutsceneSettings.disablePauseMenu) {
                return;
            }
            this.EightBitter.MenuGrapher.getMenu("Pause")
                ? this.closePauseMenu()
                : this.openPauseMenu();
        };
        /**
         * Opens the Pokedex menu.
         */
        Menus.prototype.openPokedexMenu = function () {
            var _this = this;
            var listings = this.EightBitter.storage.getPokedexListingsOrdered();
            var currentListing;
            this.EightBitter.MenuGrapher.createMenu("Pokedex");
            this.EightBitter.MenuGrapher.addMenuList("Pokedex", {
                options: listings.map(function (listing, i) {
                    var characters = _this.EightBitter.utilities.makeDigit(i + 1, 3, 0).split("");
                    var output = {
                        text: characters,
                        callback: function () {
                            currentListing = listing;
                            _this.EightBitter.MenuGrapher.setActiveMenu("PokedexOptions");
                        }
                    };
                    characters.push({
                        command: true,
                        y: 4
                    });
                    if (listing) {
                        if (listing.caught) {
                            characters.push({
                                command: true,
                                x: -4,
                                y: 1
                            });
                            characters.push("Ball");
                            characters.push({
                                command: true,
                                y: -1
                            });
                        }
                        characters.push.apply(characters, listing.title);
                    }
                    else {
                        characters.push.apply(characters, "----------".split(""));
                    }
                    characters.push({
                        command: true,
                        y: -4
                    });
                    return output;
                })
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Pokedex");
            this.EightBitter.MenuGrapher.createMenu("PokedexOptions");
            this.EightBitter.MenuGrapher.addMenuList("PokedexOptions", {
                options: [
                    {
                        text: "DATA",
                        callback: function () {
                            _this.openPokedexListing(currentListing.title, function () { return _this.EightBitter.MenuGrapher.setActiveMenu("PokedexOptions"); });
                        }
                    }, {
                        text: "CRY"
                    }, {
                        text: "AREA",
                        callback: function () {
                            _this.openTownMapMenu({
                                backMenu: "PokedexOptions"
                            });
                            _this.showTownMapPokemonLocations(currentListing.title);
                        }
                    }, {
                        text: "QUIT",
                        callback: this.EightBitter.MenuGrapher.registerB
                    }
                ]
            });
        };
        /**
         * Opens the context menu within the Pokedex menu for the selected Pokemon.
         *
         * @param settings   Settings for the selected Pokemon, including its HM moves.
         */
        Menus.prototype.openPokemonMenuContext = function (settings) {
            var _this = this;
            var moves = settings.pokemon.moves;
            var options = [];
            var _loop_3 = function(action) {
                var move = this_1.EightBitter.MathDecider.getConstant("moves")[action.title];
                if (move.partyActivate && move.requiredBadge && this_1.EightBitter.ItemsHolder.getItem("badges")[move.requiredBadge]) {
                    options.push({
                        text: action.title.toUpperCase(),
                        callback: function () {
                            _this.EightBitter.animations.partyActivateCheckThing(_this.EightBitter.player, settings.pokemon, move);
                        }
                    });
                }
            };
            var this_1 = this;
            for (var _i = 0, moves_2 = moves; _i < moves_2.length; _i++) {
                var action = moves_2[_i];
                _loop_3(action);
            }
            options.push({
                text: "STATS",
                callback: function () { return _this.openPokemonMenuStats(settings.pokemon); }
            }, {
                text: "SWITCH",
                callback: settings.onSwitch
            }, {
                text: "CANCEL",
                callback: this.EightBitter.MenuGrapher.registerB
            });
            this.EightBitter.MenuGrapher.createMenu("PokemonMenuContext", {
                backMenu: "Pokemon"
            });
            this.EightBitter.MenuGrapher.addMenuList("PokemonMenuContext", {
                options: options
            });
            this.EightBitter.MenuGrapher.setActiveMenu("PokemonMenuContext");
        };
        /**
         * Opens a statistics menu for a Pokemon.
         *
         * @param pokemon   A Pokemon to show statistics of.
         */
        Menus.prototype.openPokemonMenuStats = function (pokemon) {
            var _this = this;
            var schemas = this.EightBitter.MathDecider.getConstant("pokemon");
            var schema = schemas[pokemon.title.join("")];
            var barWidth = 25;
            var health = this.EightBitter.MathDecider.compute("widthHealthBar", barWidth, pokemon.HP, pokemon.HPNormal);
            this.EightBitter.MenuGrapher.createMenu("PokemonMenuStats", {
                backMenu: "PokemonMenuContext",
                callback: function () { return _this.openPokemonMenuStatsSecondary(pokemon); },
                container: "Pokemon"
            });
            this.openPokemonLevelUpStats({
                pokemon: pokemon,
                container: "PokemonMenuStats",
                size: {
                    width: 40,
                    height: 40
                },
                position: {
                    vertical: "bottom",
                    horizontal: "left",
                    offset: {
                        left: 3,
                        top: -3
                    }
                },
                textXOffset: 4
            });
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsTitle", [pokemon.nickname]);
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsLevel", pokemon.level.toString());
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsHP", pokemon.HP + "/ " + pokemon.HPNormal);
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsNumber", this.EightBitter.utilities.makeDigit(schema.number, 3, 0));
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsStatus", "OK");
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsType1", pokemon.types[0]);
            if (pokemon.types.length >= 2) {
                this.EightBitter.MenuGrapher.createMenu("PokemonMenuStatsType2");
                this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsType2", pokemon.types[1]);
            }
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsID", "31425");
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsOT", [
                "%%%%%%%PLAYER%%%%%%%"
            ]);
            this.EightBitter.MenuGrapher.createMenuThing("PokemonMenuStatsHPBar", {
                type: "thing",
                thing: "LightGraySquare",
                position: {
                    horizontal: "left",
                    offset: {
                        top: 0.5,
                        left: 8.5
                    }
                },
                args: {
                    width: Math.max(health, 1),
                    height: 1,
                    hidden: health === 0
                }
            });
            this.EightBitter.MenuGrapher.createMenuThing("PokemonMenuStats", {
                type: "thing",
                thing: pokemon.title.join("") + "Front",
                args: {
                    flipHoriz: true
                },
                position: {
                    vertical: "bottom",
                    offset: {
                        left: 9,
                        top: -48
                    }
                }
            });
            this.EightBitter.MenuGrapher.setActiveMenu("PokemonMenuStats");
        };
        /**
         * Opens the LevelUpStats menu for a Pokemon to view its statistics.
         *
         * @param settings   Settings to open the menu.
         */
        Menus.prototype.openPokemonLevelUpStats = function (settings) {
            var _this = this;
            var pokemon = settings.pokemon;
            var statistics = this.EightBitter.MathDecider.getConstant("statisticNamesDisplayed").slice();
            var numStatistics = statistics.length;
            var textXOffset = settings.textXOffset || 8;
            var menuSchema = {
                callback: function () { return _this.EightBitter.MenuGrapher.deleteMenu("LevelUpStats"); },
                onMenuDelete: settings.onMenuDelete,
                position: settings.position || {
                    horizontal: "center",
                    vertical: "center"
                }
            };
            var top;
            var left;
            for (var i = 0; i < numStatistics; i += 1) {
                statistics.push(this.EightBitter.utilities.makeDigit(pokemon[statistics[i] + "Normal"], 3, "\t"));
                statistics[i] = statistics[i].toUpperCase();
            }
            menuSchema.childrenSchemas = statistics.map(function (text, i) {
                if (i < numStatistics) {
                    top = i * 8 + 4;
                    left = textXOffset;
                }
                else {
                    top = (i - numStatistics + 1) * 8;
                    left = textXOffset + 20;
                }
                return {
                    type: "text",
                    words: [text],
                    position: {
                        offset: {
                            top: top - .5,
                            left: left
                        }
                    }
                };
            });
            if (settings.container) {
                menuSchema.container = settings.container;
            }
            if (settings.size) {
                menuSchema.size = settings.size;
            }
            this.EightBitter.MenuGrapher.createMenu("LevelUpStats", menuSchema);
        };
        /**
         * Open the secondary statistics menu from the LevelUpStats menu.
         *
         * @param pokemon   The Pokemon to open the menu for.
         */
        Menus.prototype.openPokemonMenuStatsSecondary = function (pokemon) {
            var _this = this;
            var options = pokemon.moves.map(function (move) {
                var characters = [" "];
                var output = {
                    text: characters
                };
                characters.push({
                    command: true,
                    x: 40,
                    y: 4
                });
                characters.push({
                    command: true,
                    y: .5
                });
                characters.push("PP", " ");
                characters.push({
                    command: true,
                    y: -.5
                });
                characters.push.apply(characters, _this.EightBitter.utilities.makeDigit(move.remaining, 2, " ").split(""));
                characters.push("/");
                characters.push.apply(characters, _this.EightBitter.utilities.makeDigit(_this.EightBitter.MathDecider.getConstant("moves")[move.title].PP, 2, " ")
                    .split(""));
                characters.push({
                    command: true,
                    x: -75,
                    y: -4
                });
                // TODO: Moves should always be uppercase...
                characters.push.apply(characters, move.title.toUpperCase().split(""));
                return output;
            });
            // Fill any remaining options with "-" and "--" for move and PP, respectively
            for (var i = options.length; i < 4; i += 1) {
                options.push({
                    text: [
                        "-",
                        {
                            command: true,
                            x: 40,
                            y: 4
                        },
                        "-",
                        "-"
                    ]
                });
            }
            this.EightBitter.MenuGrapher.createMenu("PokemonMenuStatsExperience");
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsExperience", this.EightBitter.utilities.makeDigit(pokemon.experience.current, 10, "\t"));
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsExperienceFrom", this.EightBitter.utilities.makeDigit((pokemon.experience.next - pokemon.experience.current), 3, "\t"));
            this.EightBitter.MenuGrapher.addMenuDialog("PokemonMenuStatsExperienceNext", pokemon.level === 99 ? "" : (pokemon.level + 1).toString());
            this.EightBitter.MenuGrapher.createMenu("PokemonMenuStatsMoves");
            this.EightBitter.MenuGrapher.addMenuList("PokemonMenuStatsMoves", {
                options: options
            });
            this.EightBitter.MenuGrapher.getMenu("PokemonMenuStats").callback = function () {
                _this.EightBitter.MenuGrapher.deleteMenu("PokemonMenuStats");
            };
        };
        /**
         * Opens a Pokedex listing for a Pokemon.
         *
         * @param title   The title of the Pokemon to open the listing for.
         * @param callback   A callback for when the menu is closed.
         */
        Menus.prototype.openPokedexListing = function (title, callback, menuSettings) {
            var _this = this;
            var pokemon = this.EightBitter.MathDecider.getConstant("pokemon")[title.join("")];
            var height = pokemon.height;
            var feet = [].slice.call(height[0]).reverse().join("");
            var inches = [].slice.call(height[1]).reverse().join("");
            var onCompletion = function () {
                _this.EightBitter.MenuGrapher.deleteMenu("PokedexListing");
                if (callback) {
                    callback();
                }
            };
            this.EightBitter.MenuGrapher.createMenu("PokedexListing", menuSettings);
            this.EightBitter.MenuGrapher.createMenuThing("PokedexListingSprite", {
                thing: title.join("") + "Front",
                type: "thing",
                args: {
                    flipHoriz: true
                }
            });
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingName", [[title]]);
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingLabel", pokemon.label);
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingHeightFeet", feet);
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingHeightInches", inches);
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingWeight", pokemon.weight.toString());
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingNumber", this.EightBitter.utilities.makeDigit(pokemon.number, 3, "0"));
            this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingInfo", pokemon.info[0], function () {
                if (pokemon.info.length < 2) {
                    onCompletion();
                    return;
                }
                _this.EightBitter.MenuGrapher.createMenu("PokedexListingInfo");
                _this.EightBitter.MenuGrapher.addMenuDialog("PokedexListingInfo", pokemon.info[1], onCompletion);
                _this.EightBitter.MenuGrapher.setActiveMenu("PokedexListingInfo");
            });
            this.EightBitter.MenuGrapher.setActiveMenu("PokedexListingInfo");
        };
        /**
         * Opens a Pokemon menu for the Pokemon in the player's party.
         *
         * @param settings   Custom attributes to apply to the menu.
         */
        Menus.prototype.openPokemonMenu = function (settings) {
            var _this = this;
            var listings = this.EightBitter.ItemsHolder.getItem("PokemonInParty");
            if (!listings || !listings.length) {
                return;
            }
            var references = this.EightBitter.MathDecider.getConstant("pokemon");
            this.EightBitter.MenuGrapher.createMenu("Pokemon", settings);
            this.EightBitter.MenuGrapher.addMenuList("Pokemon", {
                options: listings.map(function (listing, i) {
                    var sprite = references[listing.title.join("")].sprite + "Pokemon";
                    var barWidth = 25;
                    var health = _this.EightBitter.MathDecider.compute("widthHealthBar", barWidth, listing.HP, listing.HPNormal);
                    return {
                        text: listing.title,
                        callback: function () { return _this.openPokemonMenuContext({
                            pokemon: listing
                        }); },
                        things: [
                            {
                                thing: sprite,
                                position: {
                                    offset: {
                                        left: 7.5,
                                        top: .5
                                    }
                                }
                            },
                            {
                                thing: "CharLevel",
                                position: {
                                    offset: {
                                        left: 56,
                                        top: 1.5
                                    }
                                }
                            },
                            {
                                thing: "CharHP",
                                position: {
                                    offset: {
                                        left: 20,
                                        top: 5.5
                                    }
                                }
                            },
                            {
                                thing: "HPBar",
                                args: {
                                    width: barWidth
                                },
                                position: {
                                    offset: {
                                        left: 27,
                                        top: 5.5
                                    }
                                }
                            },
                            {
                                thing: "LightGraySquare",
                                args: {
                                    width: Math.max(health, 1),
                                    height: 1,
                                    hidden: health === 0
                                },
                                position: {
                                    offset: {
                                        left: 27.5,
                                        top: 6
                                    }
                                }
                            }],
                        textsFloating: [
                            {
                                text: listing.level.toString(),
                                x: 44.25,
                                y: 0
                            },
                            {
                                text: listing.HP + "/ " + listing.HPNormal,
                                x: 43.75,
                                y: 4
                            }]
                    };
                })
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Pokemon");
        };
        /**
         * Opens the Items menu for the items in the player's inventory.
         *
         * @param settings   Custom attributes to apply to the menu, as well as items
         *                   to optionally override the player's inventory.
         */
        Menus.prototype.openItemsMenu = function (settings) {
            var _this = this;
            var items = settings.items || this.EightBitter.ItemsHolder.getItem("items").slice();
            this.EightBitter.ModAttacher.fireEvent("onOpenItemsMenu", items);
            this.EightBitter.MenuGrapher.createMenu("Items", settings);
            this.EightBitter.MenuGrapher.addMenuList("Items", {
                options: items.map(function (schema) {
                    return {
                        text: schema.item,
                        textsFloating: [
                            {
                                text: [["Times"]],
                                x: 32,
                                y: 4.5
                            }, {
                                text: _this.EightBitter.utilities.makeDigit(schema.amount, 2, " "),
                                x: 36.5,
                                y: 4
                            }
                        ]
                    };
                })
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Items");
            console.warn("Once math.js contains item info, react to non-stackable items...");
        };
        /**
         * Opens the Player menu.
         */
        Menus.prototype.openPlayerMenu = function () {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("Player", {
                callback: function () { return _this.EightBitter.MenuGrapher.registerB(); }
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Player");
        };
        /**
         * Opens the Save menu.
         */
        Menus.prototype.openSaveMenu = function () {
            var _this = this;
            this.EightBitter.MenuGrapher.createMenu("Save");
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", "Would you like to SAVE the game?");
            this.EightBitter.MenuGrapher.createMenu("Yes/No", {
                backMenu: "Pause"
            });
            this.EightBitter.MenuGrapher.addMenuList("Yes/No", {
                options: [
                    {
                        text: "YES",
                        callback: function () { return _this.EightBitter.storage.downloadSaveGame(); }
                    }, {
                        text: "NO",
                        callback: function () { return _this.EightBitter.MenuGrapher.registerB(); }
                    }]
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Yes/No");
            this.EightBitter.storage.autoSave();
        };
        /**
         * Opens the Keyboard menu and binds it to some required callbacks.
         *
         * @param settings   Settings to apply to the menu and for callbacks.
         */
        Menus.prototype.openKeyboardMenu = function (settings) {
            var _this = this;
            if (settings === void 0) { settings = {}; }
            var value = [settings.value || ["_", "_", "_", "_", "_", "_", "_"]];
            var onKeyPress = function () { return _this.addKeyboardMenuValue(); };
            var onBPress = function () { return _this.removeKeyboardMenuValue(); };
            var onComplete = (settings.callback || onKeyPress).bind(this);
            var lowercase = settings.lowercase;
            var letters = lowercase
                ? FullScreenPokemon_1.KeysLowercase
                : FullScreenPokemon_1.KeysUppercase;
            var options = letters.map(function (letter) {
                return {
                    text: [letter],
                    value: letter,
                    callback: letter !== "ED"
                        ? onKeyPress
                        : onComplete
                };
            });
            this.EightBitter.MenuGrapher.createMenu("Keyboard", {
                settings: settings,
                onKeyPress: onKeyPress,
                onComplete: onComplete,
                ignoreB: false
            });
            var menuResults = this.EightBitter.MenuGrapher.getMenu("KeyboardResult");
            this.EightBitter.MenuGrapher.addMenuDialog("KeyboardTitle", [[
                    settings.title || "",
                ]]);
            this.EightBitter.MenuGrapher.addMenuDialog("KeyboardResult", value);
            this.EightBitter.MenuGrapher.addMenuList("KeyboardKeys", {
                options: options,
                selectedIndex: settings.selectedIndex,
                bottom: {
                    text: lowercase ? "UPPER CASE" : "lower case",
                    callback: function () { return _this.switchKeyboardCase(); },
                    position: {
                        top: 40,
                        left: 0
                    }
                }
            });
            this.EightBitter.MenuGrapher.getMenu("KeyboardKeys").onBPress = onBPress;
            this.EightBitter.MenuGrapher.setActiveMenu("KeyboardKeys");
            menuResults.displayedValue = value.slice()[0];
            menuResults.completeValue = settings.completeValue || [];
            menuResults.selectedChild = settings.selectedChild || 0;
            menuResults.blinker = this.EightBitter.things.add("CharMDash", menuResults.children[menuResults.selectedChild].left, menuResults.children[menuResults.selectedChild].top);
            menuResults.children.push(menuResults.blinker);
            menuResults.children[menuResults.selectedChild].hidden = true;
        };
        /**
         * Adds a value to the keyboard menu from the currently selected item.
         */
        Menus.prototype.addKeyboardMenuValue = function () {
            var menuKeys = this.EightBitter.MenuGrapher.getMenu("KeyboardKeys");
            var menuResult = this.EightBitter.MenuGrapher.getMenu("KeyboardResult");
            var child = menuResult.children[menuResult.selectedChild];
            if (!child) {
                return;
            }
            var selected = this.EightBitter.MenuGrapher.getMenuSelectedOption("KeyboardKeys");
            this.EightBitter.physics.killNormal(child);
            menuResult.children[menuResult.selectedChild] = this.EightBitter.things.add(selected.title, child.left, child.top);
            menuResult.displayedValue[menuResult.selectedChild] = selected.text[0];
            menuResult.completeValue.push(selected.value);
            menuResult.selectedChild += 1;
            if (menuResult.selectedChild < menuResult.children.length - 1) {
                child = menuResult.children[menuResult.selectedChild];
                child.hidden = true;
            }
            else {
                menuResult.blinker.hidden = true;
                this.EightBitter.MenuGrapher.setSelectedIndex("KeyboardKeys", menuKeys.gridColumns - 1, menuKeys.gridRows - 2); // assume there's a bottom option
            }
            this.EightBitter.physics.setLeft(menuResult.blinker, child.left);
            this.EightBitter.physics.setTop(menuResult.blinker, child.top);
        };
        /**
         * Removes the rightmost keyboard menu value.
         */
        Menus.prototype.removeKeyboardMenuValue = function () {
            var menuResult = this.EightBitter.MenuGrapher.getMenu("KeyboardResult");
            if (menuResult.selectedChild <= 0) {
                return;
            }
            var child = menuResult.children[menuResult.selectedChild - 1];
            menuResult.selectedChild -= 1;
            menuResult.completeValue = menuResult.completeValue.slice(0, menuResult.completeValue.length - 1);
            menuResult.displayedValue[menuResult.selectedChild] = "_";
            this.EightBitter.physics.killNormal(child);
            child = menuResult.children[menuResult.selectedChild];
            menuResult.children[menuResult.selectedChild + 1] = this.EightBitter.things.add("CharUnderscore", child.right, child.top);
            this.EightBitter.physics.setLeft(menuResult.blinker, child.left);
            this.EightBitter.physics.setTop(menuResult.blinker, child.top);
        };
        /**
         * Switches the keyboard menu's case.
         */
        Menus.prototype.switchKeyboardCase = function () {
            var keyboard = this.EightBitter.MenuGrapher.getMenu("Keyboard");
            var keyboardKeys = this.EightBitter.MenuGrapher.getMenu("KeyboardKeys");
            var keyboardResult = this.EightBitter.MenuGrapher.getMenu("KeyboardResult");
            var settings = keyboard.settings;
            settings.lowercase = !settings.lowercase;
            settings.value = keyboardResult.displayedValue;
            settings.selectedChild = keyboardResult.selectedChild;
            settings.displayedValue = keyboardResult.displayedValue;
            settings.completeValue = keyboardResult.completeValue;
            settings.selectedIndex = keyboardKeys.selectedIndex;
            this.openKeyboardMenu(settings);
        };
        /**
         * Opens the Town Map menu.
         *
         * @param settings   Custom attributes to apply to the menu.
         */
        Menus.prototype.openTownMapMenu = function (settings) {
            var playerPosition = this.EightBitter.MathDecider.getConstant("townMapLocations")["Pallet Town"];
            var playerSize = this.EightBitter.ObjectMaker.getFullPropertiesOf("Player");
            this.EightBitter.MenuGrapher.createMenu("Town Map", settings);
            this.EightBitter.MenuGrapher.createMenuThing("Town Map Inside", {
                type: "thing",
                thing: "Player",
                args: {
                    nocollide: true
                },
                position: {
                    offset: {
                        left: playerPosition[0] - (playerSize.width / 2),
                        top: playerPosition[1] - (playerSize.height / 2)
                    }
                }
            });
            this.EightBitter.MenuGrapher.setActiveMenu("Town Map");
        };
        /**
         * Shows allowed flying locations on the Town Map menu.
         */
        Menus.prototype.showTownMapFlyLocations = function () {
            console.warn("Map fly locations not implemented.");
        };
        /**
         * Shows a Pokemon's nest locations on the Town Map menu.
         *
         * @param title   The title of the Pokemon to show nest locations of.
         */
        Menus.prototype.showTownMapPokemonLocations = function (title) {
            var dialog = [].slice.call(title);
            dialog.push.apply(dialog, "'s NEST".split(""));
            this.EightBitter.MenuGrapher.addMenuDialog("Town Map", [dialog]);
            console.warn("Pokemon map locations not implemented.");
        };
        /**
         * Displays message when a Player tries to use an item that cannot be used.
         *
         * @param player   A Player who cannot use an item.
         */
        Menus.prototype.cannotDoThat = function (player) {
            this.displayMessage(player, "OAK: %%%%%%%PLAYER%%%%%%%! \n This isn't the \n time to use that!");
        };
        /**
         * Displays a message to the user.
         *
         * @param thing   The Thing that triggered the error.
         * @param message   The message to be displayed.
         */
        Menus.prototype.displayMessage = function (thing, message) {
            if (this.EightBitter.MenuGrapher.getActiveMenu()) {
                return;
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText", {
                deleteOnFinish: true
            });
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                message
            ]);
            this.EightBitter.MenuGrapher.setActiveMenu("GeneralText");
        };
        return Menus;
    }(EightBittr.Component));
    FullScreenPokemon_1.Menus = Menus;
    /**
     * Physics functions used by FullScreenPokemon instances.
     */
    var Physics = (function (_super) {
        __extends(Physics, _super);
        function Physics() {
            _super.apply(this, arguments);
        }
        /**
         * Determines the bordering direction from one Thing to another.
         *
         * @param thing   The source Thing.
         * @param other   The destination Thing.
         * @returns The direction from thing to other.
         */
        Physics.prototype.getDirectionBordering = function (thing, other) {
            if (Math.abs((thing.top) - (other.bottom - other.tolBottom)) < this.EightBitter.unitsize) {
                return Direction.Top;
            }
            if (Math.abs(thing.right - other.left) < this.EightBitter.unitsize) {
                return Direction.Right;
            }
            if (Math.abs(thing.bottom - other.top) < this.EightBitter.unitsize) {
                return Direction.Bottom;
            }
            if (Math.abs(thing.left - other.right) < this.EightBitter.unitsize) {
                return Direction.Left;
            }
            return undefined;
        };
        /**
         * Determines the direction from one Thing to another.
         *
         * @param thing   The source Thing.
         * @param other   The destination Thing.
         * @returns The direction from thing to other.
         * @remarks Like getDirectionBordering, but for cases where the two Things
         *          aren't necessarily touching.
         */
        Physics.prototype.getDirectionBetween = function (thing, other) {
            var directionBordering = this.getDirectionBordering(thing, other);
            if (typeof directionBordering !== "undefined") {
                return directionBordering;
            }
            if (thing.top > other.bottom + this.EightBitter.unitsize) {
                return Direction.Top;
            }
            if (thing.right < other.left - this.EightBitter.unitsize) {
                return Direction.Right;
            }
            if (thing.bottom < other.top - this.EightBitter.unitsize) {
                return Direction.Bottom;
            }
            if (thing.left > other.right + this.EightBitter.unitsize) {
                return Direction.Left;
            }
            return undefined;
        };
        /**
         * Checks whether one Thing is overlapping another.
         *
         * @param thing   An in-game Thing.
         * @param other   An in-game Thing.
         * @returns Whether thing and other are overlapping.
         */
        Physics.prototype.isThingWithinOther = function (thing, other) {
            return (thing.top >= other.top
                && thing.right <= other.right
                && thing.bottom <= other.bottom
                && thing.left >= other.left);
        };
        /**
         * Determines whether a Character is visually within grass.
         *
         * @param thing   An in-game Character.
         * @param other   Grass that thing might be in.
         * @returns Whether thing is visually within other.
         */
        Physics.prototype.isThingWithinGrass = function (thing, other) {
            if (thing.right <= other.left) {
                return false;
            }
            if (thing.left >= other.right) {
                return false;
            }
            if (other.top > (thing.top + thing.heightGrass * this.EightBitter.unitsize)) {
                return false;
            }
            if (other.bottom < (thing.top + thing.heightGrass * this.EightBitter.unitsize)) {
                return false;
            }
            return true;
        };
        /**
         * Shifts a Character according to its xvel and yvel.
         *
         * @param thing   A Character to shift.
         */
        Physics.prototype.shiftCharacter = function (thing) {
            if (thing.bordering[Direction.Top] && thing.yvel < 0) {
                thing.yvel = 0;
            }
            if (thing.bordering[Direction.Right] && thing.xvel > 0) {
                thing.xvel = 0;
            }
            if (thing.bordering[Direction.Bottom] && thing.yvel > 0) {
                thing.yvel = 0;
            }
            if (thing.bordering[Direction.Left] && thing.xvel < 0) {
                thing.xvel = 0;
            }
            this.shiftBoth(thing, thing.xvel, thing.yvel);
        };
        /**
         * Sets a Player looking in a direction and updates MapScreener.
         *
         * @param thing   An in-game Player.
         * @param direction   A direction for thing to look at.
         */
        Physics.prototype.setPlayerDirection = function (thing, direction) {
            thing.direction = direction;
            this.EightBitter.MapScreener.playerDirection = direction;
            thing.shouldWalk = true;
        };
        /**
         * Standard Function to kill a Thing, which means marking it as dead and
         * clearing its numquads, resting, movement, and cycles. It will later be
         * removed by its maintain* Function.
         *
         * @param thing   A Thing to kill.
         */
        Physics.prototype.killNormal = function (thing) {
            if (!thing) {
                return;
            }
            thing.nocollide = thing.hidden = thing.dead = true;
            thing.alive = false;
            thing.numquads = 0;
            thing.movement = undefined;
            this.EightBitter.TimeHandler.cancelAllCycles(thing);
            this.EightBitter.ModAttacher.fireEvent("onKillNormal", thing);
            if (thing.id) {
                delete this.EightBitter.GroupHolder.getGroup("Thing")[thing.id];
            }
        };
        return Physics;
    }(GameStartr.Physics));
    FullScreenPokemon_1.Physics = Physics;
    /**
     * Scrolling functions used by FullScreenPokemon instances.
     */
    var Scrolling = (function (_super) {
        __extends(Scrolling, _super);
        function Scrolling() {
            _super.apply(this, arguments);
        }
        /**
         * Centers the current view of the Map based on scrollability.
         */
        Scrolling.prototype.centerMapScreen = function () {
            switch (this.EightBitter.MapScreener.variables.scrollability) {
                case Scrollability.None:
                    this.centerMapScreenHorizontally();
                    this.centerMapScreenVertically();
                    return;
                case Scrollability.Vertical:
                    this.centerMapScreenHorizontally();
                    this.centerMapScreenVerticallyOnPlayer();
                    return;
                case Scrollability.Horizontal:
                    this.centerMapScreenHorizontallyOnPlayer();
                    this.centerMapScreenVertically();
                    return;
                case Scrollability.Both:
                    this.centerMapScreenHorizontallyOnPlayer();
                    this.centerMapScreenVerticallyOnPlayer();
                    return;
                default:
                    return;
            }
        };
        /**
         * Scrolls the game window horizontally until the Map is centered based on
         * the Area.
         */
        Scrolling.prototype.centerMapScreenHorizontally = function () {
            var boundaries = this.EightBitter.MapScreener.variables.boundaries;
            var difference = this.EightBitter.MapScreener.width - boundaries.width;
            if (difference > 0) {
                this.scrollWindow(difference / -2);
            }
        };
        /**
         * Scrolls the game window vertically until the Map is centered based on
         * the Area.
         */
        Scrolling.prototype.centerMapScreenVertically = function () {
            var boundaries = this.EightBitter.MapScreener.variables.boundaries;
            var difference = this.EightBitter.MapScreener.height - boundaries.height;
            this.scrollWindow(0, difference / -2);
        };
        /**
         * Scrolls the game window horizontally until the Map is centered on the player.
         */
        Scrolling.prototype.centerMapScreenHorizontallyOnPlayer = function () {
            var difference = (this.EightBitter.physics.getMidX(this.EightBitter.player)
                - this.EightBitter.MapScreener.middleX)
                | 0;
            if (Math.abs(difference) > 0) {
                this.scrollWindow(difference);
            }
        };
        /**
         * Scrolls the game window vertically until the Map is centered on the player.
         */
        Scrolling.prototype.centerMapScreenVerticallyOnPlayer = function () {
            var difference = (this.EightBitter.physics.getMidY(this.EightBitter.player)
                - this.EightBitter.MapScreener.middleY)
                | 0;
            if (Math.abs(difference) > 0) {
                this.scrollWindow(0, difference);
            }
        };
        /**
         * Determines the in-game measurements of the boundaries of the current Area.
         *
         * @returns The boundaries of the current Area.
         */
        Scrolling.prototype.getAreaBoundariesReal = function () {
            var area = this.EightBitter.AreaSpawner.getArea();
            if (!area) {
                return {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0,
                    width: 0,
                    height: 0
                };
            }
            return {
                top: area.boundaries.top * this.EightBitter.unitsize,
                right: area.boundaries.right * this.EightBitter.unitsize,
                bottom: area.boundaries.bottom * this.EightBitter.unitsize,
                left: area.boundaries.left * this.EightBitter.unitsize,
                width: (area.boundaries.right - area.boundaries.left) * this.EightBitter.unitsize,
                height: (area.boundaries.bottom - area.boundaries.top) * this.EightBitter.unitsize
            };
        };
        /**
         * Determines the scrollable directions.
         *
         * @returns The direction(s) that are scrollable.
         */
        Scrolling.prototype.getScreenScrollability = function () {
            var area = this.EightBitter.AreaSpawner.getArea();
            if (!area) {
                return Scrollability.None;
            }
            var boundaries = area.boundaries;
            var width = (boundaries.right - boundaries.left) * this.EightBitter.unitsize;
            var height = (boundaries.bottom - boundaries.top) * this.EightBitter.unitsize;
            if (width > this.EightBitter.MapScreener.width) {
                if (height > this.EightBitter.MapScreener.height) {
                    return Scrollability.Both;
                }
                return Scrollability.Horizontal;
            }
            if (height > this.EightBitter.MapScreener.height) {
                return Scrollability.Vertical;
            }
            return Scrollability.None;
        };
        /**
         * Determines how much to scroll horizontally during upkeep based
         * on player xvel and horizontal bordering.
         *
         * @returns How far to scroll horizontally.
         */
        Scrolling.prototype.getHorizontalScrollAmount = function () {
            if (!this.EightBitter.player.xvel) {
                return 0;
            }
            if (this.EightBitter.player.xvel > 0) {
                return this.EightBitter.player.bordering[1] ? 0 : this.EightBitter.player.xvel;
            }
            else {
                return this.EightBitter.player.bordering[3] ? 0 : this.EightBitter.player.xvel;
            }
        };
        /**
         * Determines how much to scroll vertically during upkeep based
         * on player yvel and vertical bordering.
         *
         * @returns How far to scroll vertically.
         */
        Scrolling.prototype.getVerticalScrollAmount = function () {
            if (!this.EightBitter.player.yvel) {
                return 0;
            }
            if (this.EightBitter.player.yvel > 0) {
                return this.EightBitter.player.bordering[2] ? 0 : this.EightBitter.player.yvel;
            }
            else {
                return this.EightBitter.player.bordering[0] ? 0 : this.EightBitter.player.yvel;
            }
        };
        /**
         * Expands the MapScreener boundaries for a newly added Area.
         *
         * @param area   The newly added Area.
         * @param x   The x-location of the expansion.
         * @param y   The y-location of the expansion.
         * @todo For now, this assumes any Area with an added Area is outdoors (which
         *       hasn't been shown to be incorrect yet).
         */
        Scrolling.prototype.expandMapBoundariesForArea = function (area, dx, dy) {
            this.EightBitter.MapScreener.variables.scrollability = Scrollability.Both;
        };
        return Scrolling;
    }(GameStartr.Scrolling));
    FullScreenPokemon_1.Scrolling = Scrolling;
    /**
     * Generator for FullScreenPokemon settings.
     */
    var SettingsGenerator = (function () {
        function SettingsGenerator() {
        }
        /**
         * @returns FullScreenPokemon settings.
         */
        SettingsGenerator.prototype.generate = function () {
            return {
                audio: GenerateAudioSettings(),
                battles: GenerateBattlesSettings(),
                collisions: GenerateCollisionsSettings(),
                devices: GenerateDevicesSettings(),
                editor: GenerateEditorSettings(),
                events: GenerateEventsSettings(),
                generator: GenerateGeneratorSettings(),
                groups: GenerateGroupsSettings(),
                input: GenerateInputSettings(),
                items: GenerateItemsSettings(),
                maps: GenerateMapsSettings(),
                math: GenerateMathSettings(),
                menus: GenerateMenusSettings(),
                mods: GenerateModsSettings(),
                objects: GenerateObjectsSettings(),
                quadrants: GenerateQuadrantsSettings(),
                renderer: GenerateRendererSettings(),
                runner: GenerateRunnerSettings(),
                scenes: GenerateScenesSettings(),
                sprites: GenerateSpritesSettings(),
                state: GenerateStateSettings(),
                touch: undefined,
                ui: GenerateUISettings()
            };
        };
        return SettingsGenerator;
    }());
    FullScreenPokemon_1.SettingsGenerator = SettingsGenerator;
    /**
     * Storage functions used by FullScreenPokemon instances.
     */
    var Storage = (function (_super) {
        __extends(Storage, _super);
        function Storage() {
            _super.apply(this, arguments);
        }
        /**
         * Clears the data saved in localStorage and saves it in a new object in localStorage
         * upon a new game being started.
         */
        Storage.prototype.clearSavedData = function () {
            var oldLocalStorage = this.EightBitter.ItemsHolder.exportItems();
            var collectionKeys = this.EightBitter.ItemsHolder.getItem("stateCollectionKeys");
            if (collectionKeys) {
                for (var _i = 0, collectionKeys_1 = collectionKeys; _i < collectionKeys_1.length; _i++) {
                    var collection = collectionKeys_1[_i];
                    oldLocalStorage[collection] = this.EightBitter.ItemsHolder.getItem(collection);
                }
            }
            for (var _a = 0, _b = this.EightBitter.ItemsHolder.getKeys(); _a < _b.length; _a++) {
                var key = _b[_a];
                this.EightBitter.ItemsHolder.removeItem(key);
            }
            this.EightBitter.ItemsHolder.clear();
            this.EightBitter.ItemsHolder.setItem("oldLocalStorage", oldLocalStorage);
            this.EightBitter.ItemsHolder.saveItem("oldLocalStorage");
            this.EightBitter.ItemsHolder.setItem("stateCollectionKeys", []);
            this.EightBitter.UserWrapper.resetControls();
        };
        /**
         * Checks to see if oldLocalStorage is defined in localStorage; if that is true and a prior game
         * hasn't been saved, the data is restored under localStorage.
         */
        Storage.prototype.checkForOldStorageData = function () {
            if (!this.EightBitter.ItemsHolder.getItem("oldLocalStorage") || this.EightBitter.ItemsHolder.getItem("gameStarted")) {
                return;
            }
            var oldLocalStorage = this.EightBitter.ItemsHolder.getItem("oldLocalStorage");
            for (var key in oldLocalStorage) {
                if (!oldLocalStorage.hasOwnProperty(key)) {
                    continue;
                }
                if (key.slice(0, "StateHolder".length) === "StateHolder") {
                    this.EightBitter.StateHolder.setCollection(key.slice(11), oldLocalStorage[key]);
                }
                else {
                    this.EightBitter.ItemsHolder.setItem(key, oldLocalStorage[key]);
                }
            }
            this.EightBitter.ItemsHolder.saveAll();
            this.EightBitter.UserWrapper.resetControls();
        };
        /**
         * Saves all persistant information about the current game state.
         *
         * @param showText   Whether to display a status menu (by default, false).
         */
        Storage.prototype.saveGame = function (showText) {
            var _this = this;
            if (showText === void 0) { showText = true; }
            var ticksRecorded = this.EightBitter.FPSAnalyzer.getNumRecorded();
            this.EightBitter.ItemsHolder.setItem("map", this.EightBitter.AreaSpawner.getMapName());
            this.EightBitter.ItemsHolder.setItem("area", this.EightBitter.AreaSpawner.getAreaName());
            this.EightBitter.ItemsHolder.setItem("location", this.EightBitter.AreaSpawner.getLocationEntered().name);
            this.EightBitter.ItemsHolder.increase("time", ticksRecorded - this.EightBitter.ticksElapsed);
            this.EightBitter.ticksElapsed = ticksRecorded;
            this.saveCharacterPositions();
            this.EightBitter.StateHolder.saveCollection();
            this.EightBitter.ItemsHolder.saveAll();
            if (!showText) {
                return;
            }
            this.EightBitter.MenuGrapher.createMenu("GeneralText");
            this.EightBitter.MenuGrapher.addMenuDialog("GeneralText", [
                "Now saving..."
            ]);
            this.EightBitter.TimeHandler.addEvent(function () { return _this.EightBitter.MenuGrapher.deleteAllMenus(); }, 49);
        };
        /**
         * Automatically saves the game.
         */
        Storage.prototype.autoSave = function () {
            if (this.EightBitter.ItemsHolder.getAutoSave()
                && !this.EightBitter.ScenePlayer.getCutscene()
                && this.EightBitter.AreaSpawner.getMapName() !== "Blank") {
                this.saveGame(false);
            }
        };
        /**
         * Saves current game state and downloads
         * it onto the client's computer as a JSON file.
         */
        Storage.prototype.downloadSaveGame = function () {
            this.saveGame();
            var link = document.createElement("a");
            link.setAttribute("download", "FullScreenPokemon Save " + Date.now() + ".json");
            link.setAttribute("href", "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(this.EightBitter.ItemsHolder.exportItems())));
            this.EightBitter.container.appendChild(link);
            link.click();
            this.EightBitter.container.removeChild(link);
        };
        /**
         * Loads JSON game data from a data string and sets it as the game state,
         * then starts gameplay.
         *
         * @param dataRaw   Raw data to be parsed as JSON.
         */
        Storage.prototype.loadData = function (dataRaw) {
            this.clearSavedData();
            var data = JSON.parse(dataRaw);
            var keyStart = "StateHolder::";
            for (var key in data) {
                if (!data.hasOwnProperty(key)) {
                    continue;
                }
                if (key.slice(0, keyStart.length) === keyStart) {
                    var split = key.split("::");
                    this.EightBitter.StateHolder.setCollection(split[1] + "::" + split[2], data[key]);
                }
                else {
                    this.EightBitter.ItemsHolder.setItem(key, data[key]);
                }
            }
            this.EightBitter.MenuGrapher.deleteActiveMenu();
            this.EightBitter.UserWrapper.resetControls();
            this.EightBitter.gameplay.startPlay();
            this.EightBitter.ItemsHolder.setItem("gameStarted", true);
        };
        /**
         * Saves the positions of all Characters in the game.
         */
        Storage.prototype.saveCharacterPositions = function () {
            for (var _i = 0, _a = this.EightBitter.GroupHolder.getGroup("Character"); _i < _a.length; _i++) {
                var character = _a[_i];
                this.saveCharacterPosition(character, character.id);
            }
        };
        /**
         * Saves the position of a certain Character.
         *
         * @param character   An in-game Character.
         * @param id   The ID associated with the Character.
         */
        Storage.prototype.saveCharacterPosition = function (character, id) {
            this.EightBitter.StateHolder.addChange(id, "xloc", (character.left + this.EightBitter.MapScreener.left) / this.EightBitter.unitsize);
            this.EightBitter.StateHolder.addChange(id, "yloc", (character.top + this.EightBitter.MapScreener.top) / this.EightBitter.unitsize);
            this.EightBitter.StateHolder.addChange(id, "direction", character.direction);
        };
        /**
         * Pushes and saves the current state of a variable to a stack.
         *
         * @param thing   The Thing, Area, Map, or Location saving its state of a variable.
         * @param title   Name for the state being saved.
         * @param value   The values of the variable to be saved.
         */
        Storage.prototype.addStateHistory = function (thing, title, value) {
            if (!thing.state) {
                thing.state = {};
            }
            var stateHistory = thing.state[title];
            if (stateHistory) {
                stateHistory.push(value);
            }
            else {
                thing.state[title] = [value];
            }
        };
        /**
         * Updates to the most recently saved state for a variable.
         *
         * @param thing   The Thing having its state restored.
         * @param title   The name of the state to restore.
         */
        Storage.prototype.popStateHistory = function (thing, title) {
            if (!thing.state) {
                throw new Error("State property is not defined for '" + thing + "'.");
            }
            var stateHistory = thing.state[title];
            if (!stateHistory || stateHistory.length === 0) {
                throw new Error("No state saved for '" + title + "'.");
            }
            thing[title] = stateHistory.pop();
        };
        /**
         * Adds an in-game item to the character's bag.
         *
         * @param item    The item being stored.
         * @param amount   The quantity of this item being stored.
         */
        Storage.prototype.addItemToBag = function (item, amount) {
            if (amount === void 0) { amount = 1; }
            this.EightBitter.utilities.combineArrayMembers(this.EightBitter.ItemsHolder.getItem("items"), item, amount, "item", "amount");
        };
        /**
         * Adds a Pokemon by title to the Pokedex.
         *
         * @param titleRaw   The raw title of the Pokemon.
         * @param status   Whether the Pokemon has been seen and caught.
         */
        Storage.prototype.addPokemonToPokedex = function (titleRaw, status) {
            var pokedex = this.EightBitter.ItemsHolder.getItem("Pokedex");
            var title = titleRaw.join("");
            var caught = status === PokedexListingStatus.Caught;
            var seen = caught || (status === PokedexListingStatus.Seen);
            var information = pokedex[title];
            if (information) {
                // Skip potentially expensive storage operations if they're unnecessary
                if (information.caught || (information.seen && status >= PokedexListingStatus.Seen)) {
                    return;
                }
                information.caught = information.caught || (status >= PokedexListingStatus.Caught);
                information.seen = information.seen || (status >= PokedexListingStatus.Seen);
            }
            else {
                pokedex[title] = information = {
                    caught: caught,
                    seen: seen,
                    title: titleRaw
                };
            }
            this.EightBitter.ItemsHolder.setItem("Pokedex", pokedex);
        };
        /**
         * Retrieves known Pokedex listings in ascending order. Unknown Pokemon are
         * replaced with `undefined`.
         *
         * @returns Pokedex listings in ascending order.
         */
        Storage.prototype.getPokedexListingsOrdered = function () {
            var pokedex = this.EightBitter.ItemsHolder.getItem("Pokedex");
            var pokemon = this.EightBitter.MathDecider.getConstant("pokemon");
            var titlesSorted = Object.keys(pokedex)
                .sort(function (a, b) { return pokemon[a].number - pokemon[b].number; });
            var i;
            if (!titlesSorted.length) {
                return [];
            }
            var ordered = [];
            for (i = 0; i < pokemon[titlesSorted[0]].number - 1; i += 1) {
                ordered.push(undefined);
            }
            for (i = 0; i < titlesSorted.length - 1; i += 1) {
                ordered.push(pokedex[titlesSorted[i]]);
                for (var j = pokemon[titlesSorted[i]].number - 1; j < pokemon[titlesSorted[i + 1]].number - 2; j += 1) {
                    ordered.push(undefined);
                }
            }
            ordered.push(pokedex[titlesSorted[i]]);
            return ordered;
        };
        return Storage;
    }(EightBittr.Component));
    FullScreenPokemon_1.Storage = Storage;
    /**
     * Thing manipulation functions used by FullScreenPokemon instances.
     */
    var Things = (function (_super) {
        __extends(Things, _super);
        function Things() {
            _super.apply(this, arguments);
        }
        /**
         * Slight addition to the parent thingProcess Function. The Thing's hit
         * check type is cached immediately, and a default id is assigned if an id
         * isn't already present.
         *
         * @param thing   The Thing being processed.
         * @param title   What type Thing this is (the name of the class).
         * @param settings   Additional settings to be given to the Thing.
         * @param defaults   The default settings for the Thing's class.
         * @remarks This is generally called as the onMake call in an ObjectMakr.
         */
        Things.prototype.process = function (thing, title, settings, defaults) {
            _super.prototype.process.call(this, thing, title, settings, defaults);
            // ThingHittr becomes very non-performant if functions aren't generated
            // for each Thing constructor (optimization does not respect prototypal 
            // inheritance, sadly).
            this.EightBitter.ThingHitter.cacheChecksForType(thing.title, thing.groupType);
            thing.bordering = [undefined, undefined, undefined, undefined];
            if (typeof thing.id === "undefined") {
                thing.id = [
                    this.EightBitter.AreaSpawner.getMapName(),
                    this.EightBitter.AreaSpawner.getAreaName(),
                    thing.title,
                    (thing.name || "Anonymous")
                ].join("::");
            }
        };
        /**
         * Overriden Function to adds a new Thing to the game at a given position,
         * relative to the top left corner of the screen. The Thing is also
         * added to the Thing GroupHolder.group container.
         *
         *
         * @param thingRaw   What type of Thing to add. This may be a String of
         *                   the class title, an Array containing the String
         *                   and an Object of settings, or an actual Thing.
         * @param left   The horizontal point to place the Thing's left at (by
         *               default, 0).
         * @param top   The vertical point to place the Thing's top at (by default,
         *              0).
         * @param useSavedInfo   Whether an Area's saved info in StateHolder should be
         *                       applied to the Thing's position (by default, false).
         */
        Things.prototype.add = function (thingRaw, left, top, useSavedInfo) {
            if (left === void 0) { left = 0; }
            if (top === void 0) { top = 0; }
            var thing = _super.prototype.add.call(this, thingRaw, left, top);
            if (useSavedInfo) {
                this.applySavedPosition(thing);
            }
            if (thing.id) {
                this.EightBitter.StateHolder.applyChanges(thing.id, thing);
                this.EightBitter.GroupHolder.getGroup("Thing")[thing.id] = thing;
            }
            if (typeof thing.direction !== "undefined") {
                this.EightBitter.animations.animateCharacterSetDirection(thing, thing.direction);
            }
            return thing;
        };
        /**
         * Applies a thing's stored xloc and yloc to its position.
         *
         * @param thing   A Thing being placed in the game.
         */
        Things.prototype.applySavedPosition = function (thing) {
            var savedInfo = this.EightBitter.StateHolder.getChanges(thing.id);
            if (!savedInfo) {
                return;
            }
            if (savedInfo.xloc) {
                this.EightBitter.physics.setLeft(thing, this.EightBitter.MapScreener.left + savedInfo.xloc * this.EightBitter.unitsize);
            }
            if (savedInfo.yloc) {
                this.EightBitter.physics.setTop(thing, this.EightBitter.MapScreener.top + savedInfo.yloc * this.EightBitter.unitsize);
            }
        };
        return Things;
    }(GameStartr.Things));
    FullScreenPokemon_1.Things = Things;
    /**
     * Miscellaneous utility functions used by FullScreenPokemon instances.
     */
    var Utilities = (function (_super) {
        __extends(Utilities, _super);
        function Utilities() {
            _super.apply(this, arguments);
        }
        /**
         * Retrieves the Thing in MapScreener.thingById of the given id.
         *
         * @param id   An id of a Thing to retrieve.
         * @returns The Thing under the given id, if it exists.
         */
        Utilities.prototype.getThingById = function (id) {
            return this.EightBitter.GroupHolder.getGroup("Thing")[id];
        };
        /**
         * Creates a new Pokemon from a schema, using the newPokemon equation.
         *
         * @param schema   A description of the Pokemon.
         * @returns A newly created Pokemon.
         */
        Utilities.prototype.createPokemon = function (schema) {
            var level = typeof schema.levels !== "undefined"
                ? this.EightBitter.NumberMaker.randomArrayMember(schema.levels)
                : schema.level;
            return this.EightBitter.MathDecider.compute("newPokemon", schema.title, level);
        };
        /**
         * Creates a new String equivalent to an old String repeated any number of
         * times. If times is 0, a blank String is returned.
         *
         * @param {String} string   The characters to repeat.
         * @param {Number} [times]   How many times to repeat (by default, 1).
         */
        Utilities.prototype.stringOf = function (str, times) {
            if (times === void 0) { times = 1; }
            return (times === 0) ? "" : new Array(1 + (times || 1)).join(str);
        };
        /**
         * Turns a Number into a String with a prefix added to pad it to a certain
         * number of digits.
         *
         * @param {Mixed} number   The original Number being padded.
         * @param {Number} size   How many digits the output must contain.
         * @param {Mixed} [prefix]   A prefix to repeat for padding (by default, "0").
         * @returns {String}
         * @example
         * makeDigit(7, 3); // '007'
         * makeDigit(7, 3, 1); // '117'
         */
        Utilities.prototype.makeDigit = function (num, size, prefix) {
            return this.stringOf(prefix ? prefix.toString() : "0", Math.max(0, size - String(num).length)) + num;
        };
        /**
         * Checks all members of an Array to see if a specified key exists within one of them.
         *
         * @param array   The Array being checked.
         * @param key   The key being searched for.
         * @returns Whether the key exists within the Array members.
         */
        Utilities.prototype.checkArrayMembersIndex = function (array, key) {
            for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {
                var member = array_1[_i];
                if (member[key]) {
                    return true;
                }
            }
            return false;
        };
        /**
         * Function to add a stackable item to an Array. If it already exists,
         * the Function increases its value by count. Otherwise, it adds a new item
         * to the Array.
         *
         * @param array   The Array containing the stackable items.
         * @param title   The name of the stackable item to be added.
         * @param count   The number of these stackable items.
         * @param keyTitle   The key associated with the item's name, such as "item".
         * @param keyCount   The key associated with the item's count, such as "amount".
         * @returns Whether the stackable item was newly added.
         */
        Utilities.prototype.combineArrayMembers = function (array, title, count, keyTitle, keyCount) {
            for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {
                var member = array_2[_i];
                if (member[keyTitle] === title) {
                    member[keyCount] += count;
                    return false;
                }
            }
            var object = {};
            object[keyTitle] = title;
            object[keyCount] = count;
            array.push(object);
            return true;
        };
        return Utilities;
    }(GameStartr.Utilities));
    FullScreenPokemon_1.Utilities = Utilities;
    /**
     * A free HTML5 remake of Nintendo's original Pokemon, expanded for the modern web.
     */
    var FullScreenPokemon = (function (_super) {
        __extends(FullScreenPokemon, _super);
        /**
         * Initializes a new instance of the FullScreenPokemon class.
         *
         * @param settings   Any additional user-provided settings.
         */
        function FullScreenPokemon(settings) {
            if (!settings.unitsize) {
                settings.unitsize = FullScreenPokemon.prototype.unitsize;
            }
            _super.call(this, settings);
            this.scale = FullScreenPokemon.prototype.scale;
        }
        /**
         * Resets the minor system components.
         */
        FullScreenPokemon.prototype.resetComponents = function () {
            this.animations = new Animations(this);
            this.battles = new Battles(this);
            this.collisions = new Collisions(this);
            this.cutscenes = new Cutscenes(this);
            this.cycling = new Cycling(this);
            this.fishing = new Fishing(this);
            this.gameplay = new Gameplay(this);
            this.graphics = new Graphics(this);
            this.inputs = new Inputs(this);
            this.macros = new Macros(this);
            this.maintenance = new Maintenance(this);
            this.maps = new Maps(this);
            this.menus = new Menus(this);
            this.physics = new Physics(this);
            this.scrolling = new Scrolling(this);
            this.storage = new Storage(this);
            this.things = new Things(this);
            this.utilities = new Utilities(this);
        };
        /**
         * Resets the major system modules.
         *
         * @param settings   Any additional user-provided settings.
         */
        FullScreenPokemon.prototype.resetModules = function (settings) {
            _super.prototype.resetModules.call(this, settings);
            this.resetMathDecider(settings);
            this.resetMenuGrapher(settings);
            this.resetStateHolder(settings);
            this.resetBattleMover(settings);
            this.AreaSpawner.setCommandScope(this.maps);
            this.InputWriter.setEventScope(this.inputs);
            this.MapsCreator.setScope(this.maps);
            this.TimeHandler.setClassScope(this.graphics);
            this.ThingHitter.setGeneratorScope(this.collisions);
        };
        /**
         * Sets this.ObjectMaker.
         *
         * Because many Thing functions require access to other FSP modules, each is
         * given a reference to this container FSP via properties.thing.FSP.
         * See #.
         *
         * @param settings   Any additional user-provided settings.
         */
        FullScreenPokemon.prototype.resetObjectMaker = function (settings) {
            this.ObjectMaker = new ObjectMakr.ObjectMakr(this.utilities.proliferate({
                properties: {
                    Thing: {
                        EightBitter: this
                    }
                },
                scope: this.things
            }, this.settings.objects));
        };
        /**
         * Sets this.ScenePlayer.
         *
         * @param settings   Any additional user-provided settings.
         */
        FullScreenPokemon.prototype.resetScenePlayer = function (settings) {
            this.ScenePlayer = new ScenePlayr.ScenePlayr(this.utilities.proliferate({
                scope: this.cutscenes
            }, this.settings.scenes));
        };
        /**
         * Sets this.StateHolder.
         *
         * @param customs   Any optional custom settings.
         */
        FullScreenPokemon.prototype.resetStateHolder = function (settings) {
            this.StateHolder = new StateHoldr.StateHoldr(this.utilities.proliferate({
                ItemsHolder: this.ItemsHolder
            }, this.settings.state));
        };
        /**
         * Sets this.MathDecider, adding its existing NumberMaker to the constants.
         *
         * @param customs   Any optional custom settings.
         */
        FullScreenPokemon.prototype.resetMathDecider = function (settings) {
            this.MathDecider = new MathDecidr.MathDecidr(this.utilities.proliferate({
                constants: {
                    NumberMaker: this.NumberMaker
                }
            }, this.settings.math));
        };
        /**
         * Sets this.MenuGrapher.
         *
         * @param customs   Any optional custom settings.
         */
        FullScreenPokemon.prototype.resetMenuGrapher = function (settings) {
            this.MenuGrapher = new MenuGraphr.MenuGraphr(this.utilities.proliferate({
                GameStarter: this,
                modifierScope: this.menus
            }, this.settings.menus));
        };
        /**
         * Sets this.BattleMover.
         *
         * @param customs   Any optional custom settings.
         */
        FullScreenPokemon.prototype.resetBattleMover = function (settings) {
            var _this = this;
            this.BattleMover = new BattleMovr.BattleMovr(this.utilities.proliferate({
                GameStarter: this,
                battleOptions: [
                    {
                        text: "FIGHT",
                        callback: function () {
                            _this.battles.openBattleMovesMenu();
                        }
                    },
                    {
                        text: "ITEM",
                        callback: function () {
                            _this.battles.openBattleItemsMenu();
                        }
                    },
                    {
                        text: ["Poke", "Mon"],
                        callback: function () {
                            _this.battles.openBattlePokemonMenu();
                        }
                    },
                    {
                        text: "RUN",
                        callback: function () {
                            _this.battles.startBattleExit();
                        }
                    }
                ]
            }, this.settings.battles));
        };
        /**
         * Sets this.container.
         *
         * The container is given the "Press Start" font, and the PixelRender is told
         * which groups to draw in order.
         *
         * @param settings   Extra settings such as screen size.
         */
        FullScreenPokemon.prototype.resetContainer = function (settings) {
            _super.prototype.resetContainer.call(this, settings);
            this.container.style.fontFamily = "Press Start";
            this.container.className += " FullScreenPokemon";
            this.PixelDrawer.setThingArrays([
                this.GroupHolder.getGroup("Terrain"),
                this.GroupHolder.getGroup("Solid"),
                this.GroupHolder.getGroup("Scenery"),
                this.GroupHolder.getGroup("Character"),
                this.GroupHolder.getGroup("Text")
            ]);
        };
        return FullScreenPokemon;
    }(GameStartr.GameStartr));
    FullScreenPokemon_1.FullScreenPokemon = FullScreenPokemon;
    // Prototype constants are defined first so settings files can use them
    FullScreenPokemon.prototype.scale = FullScreenPokemon_1.Scale;
    FullScreenPokemon.prototype.unitsize = FullScreenPokemon_1.Unitsize;
    FullScreenPokemon.prototype.settings = new SettingsGenerator().generate();
    if (typeof require === "undefined") {
        var onLoad_1 = function () {
            new UserWrappr.UserWrappr(window.FullScreenPokemon.FullScreenPokemon.prototype.settings.ui);
            window.removeEventListener("load", onLoad_1);
        };
        window.addEventListener("load", onLoad_1);
    }
    else if (!window["mocha"] && !window["chai"]) {
        require(["FullScreenPokemon"], function (FSP) {
            new UserWrappr.UserWrappr((FSP || window.FullScreenPokemon).FullScreenPokemon.prototype.settings.ui);
        });
    }
})(FullScreenPokemon || (FullScreenPokemon = {}));
if (typeof module !== "undefined" && typeof module.exports !== "undefined") {
    module.exports = FullScreenPokemon;
}
